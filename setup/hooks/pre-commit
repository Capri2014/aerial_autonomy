#!/bin/sh
# Check clang formatting
git diff --cached --name-only --diff-filter=ACMRT | grep -E "\.([cmh]|cpp)$" | xargs -n1 clang-format -style=llvm -output-replacements-xml | grep "<replacement " >/dev/null
if [ $? -ne 1 ]
then 
    echo "Commit did not match clang-format"
    echo "Run 'git clang-format' to automatically format staged files"
    exit 1;
fi

# Check Documentation coverage
threshold=99
GIT_REPO_PATH=`git rev-parse --show-toplevel`
cd $GIT_REPO_PATH
doxygen $GIT_REPO_PATH/Doxyfile > /dev/null
./setup/doxy-coverage.py --excludedirs ./src/aerial_autonomy --threshold $threshold ./docs/xml > /dev/null
error=$?
echo $error
if [ $error -ne 0 ]
then
    echo "Commit did not have enough documentation"
    echo "Documentation threshold for code to pass is $threshold."
    codecoverage=`expr $threshold - $error`
    echo "The documentation coverage is $codecoverage percentage"
    echo "The code is short by $error percentage"
    echo "Running documentation coverage html generation script"
    python -m coverxygen --xml-dir ./docs/xml --src-dir . --output ./documentation_coverage_info/doc_coverage.info > /dev/null
    genhtml --no-function-coverage --no-branch-coverage documentation_coverage_info/doc_coverage.info -o ./documentation_coverage_info > /dev/null
    lcov --summary ./documentation_coverage_info/doc_coverage.info
    echo "Check code-coverage-info/index.html for detailed code generation stats"
    exit 1;
fi
