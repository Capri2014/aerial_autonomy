syntax = "proto2";

import "constant_heading_depth_controller_config.proto";
import "rpyt_based_relative_pose_controller_config.proto";
import "uav_arm_system_config.proto";
import "transform.proto";
import "ar_marker_direction_estimator_config.proto";

message UAVVisionSystemConfig {
  required ConstantHeadingDepthControllerConfig
      constant_heading_depth_controller_config = 1;

  /**
  * @brief Config for relative pose UAV controller
  */
  optional RPYTBasedRelativePoseControllerConfig
      rpyt_based_relative_pose_controller_config = 6;

  /**
  * @brief Desired distance to tracked position in meters
  */
  required double desired_visual_servoing_distance = 2 [ default = 3.0 ];

  /**
  * @brief Camera transform in the frame of the UAV (assuming NWU).
  */
  optional config.Transform camera_transform = 3;

  /**
  * @brief Transform to apply to tracked object before rotation-compensation (to
  * avoid issues with singularities).
  */
  optional config.Transform tracking_offset_transform = 7;

  /**
  * @brief Type of tracker to use, e.g. Alvar, ROI
  */
  optional string tracker_type = 4 [ default = "ROI" ];

  /**
  * @brief A crude form of inheritance for proto. Contains a config for
  * subclasses of UAVVisionSystemConfig
  */
  oneof subclass { UAVArmSystemConfig uav_arm_system_config = 8; }

  optional ARMarkerDirectionEstimatorConfig
      ar_marker_direction_estimator_config = 9;
}
