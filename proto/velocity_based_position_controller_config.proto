syntax = "proto2";

import "position_controller_config.proto";

/**
* Uses the position controller config for tolerance
* in position, yaw
*/
message VelocityBasedPositionControllerConfig {
  /**
  * @brief Gain to convert position error to velocity
  */
  optional double position_gain = 1 [ default = 0.1 ];
  /**
  * @brief Gain to convert yaw error to yaw rate
  */
  optional double yaw_gain = 2 [ default = 0.1 ];
  /**
  * @brief Maximum commanded velocity along each axis in m/s
  */
  optional double max_velocity = 3 [ default = 1 ];
  /**
  * @brief Maximum yaw rate to be commanded in rad/s
  */
  optional double max_yaw_rate = 4 [ default = 0.1 ];
  /**
  * @brief Config about position tolerance, yaw tolerance
  */
  optional PositionControllerConfig position_controller_config = 5;
  /**
  * @brief Gain on cumulative yaw error
  */
  optional double yaw_i_gain = 6 [ default = 5.0 ];
  /**
  * @brief Gain on cumulative position error
  */
  optional double position_i_gain = 7 [ default = 5.0 ];
  /**
  * @brief Gain on saturating cumulative error in back calculation
  * This gain is multiplied by the i gain. When controller
  * saturates, the actual control value will be saturated value
  * + (1/gain)*goal_difference_error; So higher the gain,the
  * control value will be closer to the saturation and will
  * respond to quicker as soon as control moves away from
  * saturation.
  */
  optional double integrator_saturation_gain = 8 [ default = 1.0 ];
}
