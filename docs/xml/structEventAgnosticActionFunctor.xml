<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="structEventAgnosticActionFunctor" kind="struct" prot="public" abstract="yes">
    <compoundname>EventAgnosticActionFunctor</compoundname>
    <includes refid="base__functors_8h" local="no">base_functors.h</includes>
    <templateparamlist>
      <param>
        <type>class</type>
        <declname>RobotSystemT</declname>
        <defname>RobotSystemT</defname>
      </param>
      <param>
        <type>class</type>
        <declname>LogicStateMachineT</declname>
        <defname>LogicStateMachineT</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structEventAgnosticActionFunctor_1a44caf24e060c264ec6404dd5fc746481" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void EventAgnosticActionFunctor&lt; RobotSystemT, LogicStateMachineT &gt;::run</definition>
        <argsstring>(RobotSystemT &amp;robot_system)=0</argsstring>
        <name>run</name>
        <reimplementedby refid="structLandTransitionActionFunctor___1ada1859d4739dcc2d16f9f6d4bbe0c916">run</reimplementedby>
        <reimplementedby refid="structTakeoffTransitionActionFunctor___1a8aa5cd17ccbae744fe179773c9719f37">run</reimplementedby>
        <reimplementedby refid="structVisualServoingTransitionActionFunctor___1ac4da810c4789635154fd570caa1c1596">run</reimplementedby>
        <reimplementedby refid="structArmFoldTransitionActionFunctor___1aa9208b0d215663a434e12c8e6d20c803">run</reimplementedby>
        <reimplementedby refid="structManualControlSwitchAction___1a9b34c9846d89230b456ab1affa6eda4d">run</reimplementedby>
        <reimplementedby refid="structVisualServoingAbortActionFunctor___1a44df9808e51b92728fb0d2eb47f8e8ab">run</reimplementedby>
        <reimplementedby refid="structTakeoffAbortActionFunctor___1a395e5c65e4db111435d60f10a7da9a56">run</reimplementedby>
        <reimplementedby refid="structArmRightFoldTransitionActionFunctor___1a9b4e3fe220ed3082b3f1165744428aa5">run</reimplementedby>
        <reimplementedby refid="structUAVControllerAbortActionFunctor___1a3529431b90856297590c099d729f45b7">run</reimplementedby>
        <reimplementedby refid="structGoHomeTransitionActionFunctor___1acc3aa2c2a177d6702c6fa85f6e953616">run</reimplementedby>
        <reimplementedby refid="structArmPoweroffTransitionActionFunctor___1a8e664e332e0909346004cee33a2a85c4">run</reimplementedby>
        <reimplementedby refid="structArmPoweronTransitionActionFunctor___1a453b050a57c81422c7e3f9cf7527b203">run</reimplementedby>
        <reimplementedby refid="structVisualServoingArmTransitionActionFunctor___1a327a90b873c3ad3264e55d847cfd5b31">run</reimplementedby>
        <reimplementedby refid="structAbortArmController___1aea3775305569c286a1115c0bca0563d9">run</reimplementedby>
        <param>
          <type>RobotSystemT &amp;</type>
          <declname>robot_system</declname>
        </param>
        <briefdescription>
<para>Override this run function for different sub classes. This function performs the logic checking for each state. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>robot_system</parametername>
</parameternamelist>
<parameterdescription>
<para>Provides sensor data and allows for controlling hardware </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/matt/catkin_ws/src/aerial_autonomy/include/aerial_autonomy/actions_guards/base_functors.h" line="120" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structEventAgnosticActionFunctor_1a3c0bcfed676d49c725ae987f37922534" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class EventT</type>
          </param>
          <param>
            <type>class FSM</type>
          </param>
          <param>
            <type>class SourceState</type>
          </param>
          <param>
            <type>class TargetState</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void EventAgnosticActionFunctor&lt; RobotSystemT, LogicStateMachineT &gt;::operator()</definition>
        <argsstring>(EventT const &amp;, FSM &amp;logic_state_machine, SourceState &amp;, TargetState &amp;)</argsstring>
        <name>operator()</name>
        <param>
          <type>EventT const &amp;</type>
        </param>
        <param>
          <type>FSM &amp;</type>
          <declname>logic_state_machine</declname>
        </param>
        <param>
          <type>SourceState &amp;</type>
        </param>
        <param>
          <type>TargetState &amp;</type>
        </param>
        <briefdescription>
<para>operator () Internally calls run function </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>logic_state_machine</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend of logic State Machine. can send events using this. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/matt/catkin_ws/src/aerial_autonomy/include/aerial_autonomy/actions_guards/base_functors.h" line="128" column="1" bodyfile="/home/matt/catkin_ws/src/aerial_autonomy/include/aerial_autonomy/actions_guards/base_functors.h" bodystart="128" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="structEventAgnosticActionFunctor_1a446e93a5275bb3ba15f7f5577d06a0bf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual EventAgnosticActionFunctor&lt; RobotSystemT, LogicStateMachineT &gt;::~EventAgnosticActionFunctor</definition>
        <argsstring>()</argsstring>
        <name>~EventAgnosticActionFunctor</name>
        <briefdescription>
<para>virtual destructor to get polymorphism </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/matt/catkin_ws/src/aerial_autonomy/include/aerial_autonomy/actions_guards/base_functors.h" line="145" column="1" bodyfile="/home/matt/catkin_ws/src/aerial_autonomy/include/aerial_autonomy/actions_guards/base_functors.h" bodystart="145" bodyend="145"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Action functor that does not require the event triggering it. </para>    </briefdescription>
    <detaileddescription>
<para>This action functor performs the same action irrespective of the event triggering it. For example takeoff, land actions</para><para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>RobotSystemT</parametername>
</parameternamelist>
<parameterdescription>
<para>The robot system used in the action </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>    </detaileddescription>
    <location file="/home/matt/catkin_ws/src/aerial_autonomy/include/aerial_autonomy/actions_guards/base_functors.h" line="113" column="1" bodyfile="/home/matt/catkin_ws/src/aerial_autonomy/include/aerial_autonomy/actions_guards/base_functors.h" bodystart="113" bodyend="146"/>
    <listofallmembers>
      <member refid="structEventAgnosticActionFunctor_1a3c0bcfed676d49c725ae987f37922534" prot="public" virt="non-virtual"><scope>EventAgnosticActionFunctor</scope><name>operator()</name></member>
      <member refid="structEventAgnosticActionFunctor_1a44caf24e060c264ec6404dd5fc746481" prot="public" virt="pure-virtual"><scope>EventAgnosticActionFunctor</scope><name>run</name></member>
      <member refid="structEventAgnosticActionFunctor_1a446e93a5275bb3ba15f7f5577d06a0bf" prot="public" virt="virtual"><scope>EventAgnosticActionFunctor</scope><name>~EventAgnosticActionFunctor</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
