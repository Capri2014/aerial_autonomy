<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="basic__state__machine_8h" kind="file">
    <compoundname>basic_state_machine.h</compoundname>
    <includes refid="thread__safe__state__machine_8h" local="no">aerial_autonomy/common/thread_safe_state_machine.h</includes>
    <includes local="no">boost/msm/front/state_machine_def.hpp</includes>
    <includes local="no">boost/msm/front/functor_row.hpp</includes>
    <includes refid="basic__states_8h" local="no">aerial_autonomy/actions_guards/basic_states.h</includes>
    <includes refid="uav__system_8h" local="no">aerial_autonomy/robot_systems/uav_system.h</includes>
    <includes local="no">glog/logging.h</includes>
    <includes local="no">array</includes>
    <includedby refid="aerial__autonomy__node_8cpp" local="no">src/aerial_autonomy_node.cpp</includedby>
    <incdepgraph>
      <node id="1528">
        <label>boost/thread/mutex.hpp</label>
      </node>
      <node id="1537">
        <label>aerial_autonomy/controller_hardware_connectors/basic_controller_hardware_connectors.h</label>
        <link refid="basic__controller__hardware__connectors_8h"/>
        <childnode refid="1538" relation="include">
        </childnode>
        <childnode refid="1542" relation="include">
        </childnode>
        <childnode refid="1543" relation="include">
        </childnode>
      </node>
      <node id="1544">
        <label>aerial_autonomy/types/position_yaw.h</label>
        <link refid="position__yaw_8h"/>
        <childnode refid="1545" relation="include">
        </childnode>
      </node>
      <node id="1552">
        <label>aerial_autonomy/actions_guards/land_functors.h</label>
        <link refid="land__functors_8h"/>
        <childnode refid="1520" relation="include">
        </childnode>
        <childnode refid="1522" relation="include">
        </childnode>
        <childnode refid="1523" relation="include">
        </childnode>
        <childnode refid="1524" relation="include">
        </childnode>
        <childnode refid="1553" relation="include">
        </childnode>
        <childnode refid="1551" relation="include">
        </childnode>
      </node>
      <node id="1550">
        <label>glog/logging.h</label>
      </node>
      <node id="1515">
        <label>boost/thread/recursive_mutex.hpp</label>
      </node>
      <node id="1514">
        <label>boost/msm/back/state_machine.hpp</label>
      </node>
      <node id="1523">
        <label>aerial_autonomy/logic_states/base_state.h</label>
        <link refid="base__state_8h"/>
        <childnode refid="1517" relation="include">
        </childnode>
        <childnode refid="1516" relation="include">
        </childnode>
        <childnode refid="1520" relation="include">
        </childnode>
        <childnode refid="1521" relation="include">
        </childnode>
      </node>
      <node id="1535">
        <label>aerial_autonomy/types/joysticks.h</label>
        <link refid="joysticks_8h"/>
      </node>
      <node id="1512">
        <label>include/aerial_autonomy/state_machines/basic_state_machine.h</label>
        <link refid="basic_state_machine.h"/>
        <childnode refid="1513" relation="include">
        </childnode>
        <childnode refid="1516" relation="include">
        </childnode>
        <childnode refid="1517" relation="include">
        </childnode>
        <childnode refid="1518" relation="include">
        </childnode>
        <childnode refid="1524" relation="include">
        </childnode>
        <childnode refid="1550" relation="include">
        </childnode>
        <childnode refid="1556" relation="include">
        </childnode>
      </node>
      <node id="1527">
        <label>aerial_autonomy/controllers/base_controller.h</label>
        <link refid="base__controller_8h"/>
        <childnode refid="1528" relation="include">
        </childnode>
      </node>
      <node id="1516">
        <label>boost/msm/front/state_machine_def.hpp</label>
      </node>
      <node id="1520">
        <label>aerial_autonomy/actions_guards/base_functors.h</label>
        <link refid="base__functors_8h"/>
        <childnode refid="1521" relation="include">
        </childnode>
      </node>
      <node id="1529">
        <label>aerial_autonomy/controllers/basic_controllers.h</label>
        <link refid="basic__controllers_8h"/>
        <childnode refid="1530" relation="include">
        </childnode>
        <childnode refid="1532" relation="include">
        </childnode>
      </node>
      <node id="1513">
        <label>aerial_autonomy/common/thread_safe_state_machine.h</label>
        <link refid="thread__safe__state__machine_8h"/>
        <childnode refid="1514" relation="include">
        </childnode>
        <childnode refid="1515" relation="include">
        </childnode>
      </node>
      <node id="1554">
        <label>aerial_autonomy/actions_guards/position_control_functors.h</label>
        <link refid="position__control__functors_8h"/>
        <childnode refid="1520" relation="include">
        </childnode>
        <childnode refid="1522" relation="include">
        </childnode>
        <childnode refid="1543" relation="include">
        </childnode>
        <childnode refid="1523" relation="include">
        </childnode>
        <childnode refid="1524" relation="include">
        </childnode>
        <childnode refid="1553" relation="include">
        </childnode>
        <childnode refid="1550" relation="include">
        </childnode>
        <childnode refid="1551" relation="include">
        </childnode>
      </node>
      <node id="1530">
        <label>aerial_autonomy/controllers/builtin_controller.h</label>
        <link refid="builtin__controller_8h"/>
        <childnode refid="1527" relation="include">
        </childnode>
        <childnode refid="1531" relation="include">
        </childnode>
      </node>
      <node id="1522">
        <label>aerial_autonomy/basic_events.h</label>
      </node>
      <node id="1553">
        <label>aerial_autonomy/types/completed_event.h</label>
        <link refid="completed__event_8h"/>
      </node>
      <node id="1551">
        <label>parsernode/common.h</label>
      </node>
      <node id="1546">
        <label>aerial_autonomy/common/type_map.h</label>
        <link refid="type__map_8h"/>
        <childnode refid="1547" relation="include">
        </childnode>
        <childnode refid="1548" relation="include">
        </childnode>
      </node>
      <node id="1533">
        <label>aerial_autonomy/types/empty_goal.h</label>
        <link refid="empty__goal_8h"/>
      </node>
      <node id="1518">
        <label>aerial_autonomy/actions_guards/basic_states.h</label>
        <link refid="basic__states_8h"/>
        <childnode refid="1519" relation="include">
        </childnode>
        <childnode refid="1552" relation="include">
        </childnode>
        <childnode refid="1554" relation="include">
        </childnode>
        <childnode refid="1555" relation="include">
        </childnode>
      </node>
      <node id="1519">
        <label>aerial_autonomy/actions_guards/hovering_functors.h</label>
        <link refid="hovering__functors_8h"/>
        <childnode refid="1520" relation="include">
        </childnode>
        <childnode refid="1522" relation="include">
        </childnode>
        <childnode refid="1523" relation="include">
        </childnode>
        <childnode refid="1524" relation="include">
        </childnode>
        <childnode refid="1550" relation="include">
        </childnode>
        <childnode refid="1551" relation="include">
        </childnode>
      </node>
      <node id="1543">
        <label>aerial_autonomy/controller_hardware_connectors/position_controller_drone_connector.h</label>
        <link refid="position__controller__drone__connector_8h"/>
        <childnode refid="1526" relation="include">
        </childnode>
        <childnode refid="1531" relation="include">
        </childnode>
        <childnode refid="1544" relation="include">
        </childnode>
        <childnode refid="1541" relation="include">
        </childnode>
      </node>
      <node id="1539">
        <label>aerial_autonomy/types/velocity_yaw.h</label>
        <link refid="velocity__yaw_8h"/>
        <childnode refid="1540" relation="include">
        </childnode>
      </node>
      <node id="1556">
        <label>array</label>
      </node>
      <node id="1531">
        <label>aerial_autonomy/types/empty_sensor.h</label>
        <link refid="empty__sensor_8h"/>
      </node>
      <node id="1538">
        <label>aerial_autonomy/controller_hardware_connectors/builtin_velocity_controller_drone_connector.h</label>
        <link refid="builtin__velocity__controller__drone__connector_8h"/>
        <childnode refid="1526" relation="include">
        </childnode>
        <childnode refid="1531" relation="include">
        </childnode>
        <childnode refid="1539" relation="include">
        </childnode>
        <childnode refid="1541" relation="include">
        </childnode>
      </node>
      <node id="1540">
        <label>aerial_autonomy/types/velocity.h</label>
        <link refid="velocity_8h"/>
      </node>
      <node id="1532">
        <label>aerial_autonomy/controllers/manual_rpyt_controller.h</label>
        <link refid="manual__rpyt__controller_8h"/>
        <childnode refid="1527" relation="include">
        </childnode>
        <childnode refid="1533" relation="include">
        </childnode>
        <childnode refid="1534" relation="include">
        </childnode>
        <childnode refid="1536" relation="include">
        </childnode>
      </node>
      <node id="1542">
        <label>aerial_autonomy/controller_hardware_connectors/manual_rpyt_controller_drone_connector.h</label>
        <link refid="manual__rpyt__controller__drone__connector_8h"/>
        <childnode refid="1526" relation="include">
        </childnode>
        <childnode refid="1533" relation="include">
        </childnode>
        <childnode refid="1534" relation="include">
        </childnode>
        <childnode refid="1536" relation="include">
        </childnode>
        <childnode refid="1541" relation="include">
        </childnode>
      </node>
      <node id="1517">
        <label>boost/msm/front/functor_row.hpp</label>
      </node>
      <node id="1534">
        <label>aerial_autonomy/types/joysticks_yaw.h</label>
        <link refid="joysticks__yaw_8h"/>
        <childnode refid="1535" relation="include">
        </childnode>
      </node>
      <node id="1548">
        <label>unordered_map</label>
      </node>
      <node id="1526">
        <label>aerial_autonomy/controller_hardware_connectors/base_controller_hardware_connector.h</label>
        <link refid="base__controller__hardware__connector_8h"/>
        <childnode refid="1527" relation="include">
        </childnode>
      </node>
      <node id="1536">
        <label>aerial_autonomy/types/roll_pitch_yaw_thrust.h</label>
        <link refid="roll__pitch__yaw__thrust_8h"/>
      </node>
      <node id="1521">
        <label>type_traits</label>
      </node>
      <node id="1545">
        <label>aerial_autonomy/types/position.h</label>
        <link refid="position_8h"/>
      </node>
      <node id="1524">
        <label>aerial_autonomy/robot_systems/uav_system.h</label>
        <link refid="uav__system_8h"/>
        <childnode refid="1525" relation="include">
        </childnode>
        <childnode refid="1526" relation="include">
        </childnode>
        <childnode refid="1529" relation="include">
        </childnode>
        <childnode refid="1537" relation="include">
        </childnode>
        <childnode refid="1546" relation="include">
        </childnode>
        <childnode refid="1528" relation="include">
        </childnode>
        <childnode refid="1549" relation="include">
        </childnode>
      </node>
      <node id="1525">
        <label>uav_system_config.pb.h</label>
      </node>
      <node id="1541">
        <label>parsernode/parser.h</label>
      </node>
      <node id="1549">
        <label>memory</label>
      </node>
      <node id="1547">
        <label>typeindex</label>
      </node>
      <node id="1555">
        <label>aerial_autonomy/actions_guards/takeoff_functors.h</label>
        <link refid="takeoff__functors_8h"/>
        <childnode refid="1520" relation="include">
        </childnode>
        <childnode refid="1522" relation="include">
        </childnode>
        <childnode refid="1523" relation="include">
        </childnode>
        <childnode refid="1524" relation="include">
        </childnode>
        <childnode refid="1553" relation="include">
        </childnode>
        <childnode refid="1550" relation="include">
        </childnode>
        <childnode refid="1551" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1558">
        <label>src/aerial_autonomy_node.cpp</label>
        <link refid="aerial__autonomy__node_8cpp"/>
      </node>
      <node id="1557">
        <label>include/aerial_autonomy/state_machines/basic_state_machine.h</label>
        <link refid="basic_state_machine.h"/>
        <childnode refid="1558" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classLogicStateMachineFrontEnd" prot="public">LogicStateMachineFrontEnd</innerclass>
    <innerclass refid="structLogicStateMachineFrontEnd_1_1Landed" prot="public">LogicStateMachineFrontEnd::Landed</innerclass>
    <innerclass refid="structLogicStateMachineFrontEnd_1_1Landed_1_1internal__transition__table" prot="public">LogicStateMachineFrontEnd::Landed::internal_transition_table</innerclass>
    <innerclass refid="structLogicStateMachineFrontEnd_1_1transition__table" prot="public">LogicStateMachineFrontEnd::transition_table</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="basic__state__machine_8h_1ab0b6ef21baf57684550a2f05c771bd86" prot="public" static="no">
        <type><ref refid="classboost_1_1msm_1_1back_1_1thread__safe__state__machine" kindref="compound">boost::msm::back::thread_safe_state_machine</ref>&lt; <ref refid="classLogicStateMachineFrontEnd" kindref="compound">LogicStateMachineFrontEnd</ref> &gt;</type>
        <definition>using LogicStateMachine =  boost::msm::back::thread_safe_state_machine&lt;LogicStateMachineFrontEnd&gt;</definition>
        <argsstring></argsstring>
        <name>LogicStateMachine</name>
        <briefdescription>
<para>Backend for Logic State Machine. </para>        </briefdescription>
        <detaileddescription>
<para>Used to forward arguments to constructor, and process events </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/gowtham/indigo_workspace/src/aerial_autonomy/include/aerial_autonomy/state_machines/basic_state_machine.h" line="52" column="1" bodyfile="/home/gowtham/indigo_workspace/src/aerial_autonomy/include/aerial_autonomy/state_machines/basic_state_machine.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="basic__state__machine_8h_1abbfdd59e79acc3bb81b8feea16ffb827" prot="public" static="yes" mutable="no">
        <type>constexpr std::array&lt; const char *, 5 &gt;</type>
        <definition>constexpr std::array&lt;const char *, 5&gt; state_names</definition>
        <argsstring></argsstring>
        <name>state_names</name>
        <initializer>= {
    &quot;Landed&quot;, &quot;TakingOff&quot;, &quot;Hovering&quot;, &quot;ReachingGoal&quot;, &quot;Landing&quot;}</initializer>
        <briefdescription>
<para>state names to get name based on state id </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/gowtham/indigo_workspace/src/aerial_autonomy/include/aerial_autonomy/state_machines/basic_state_machine.h" line="237" column="1" bodyfile="/home/gowtham/indigo_workspace/src/aerial_autonomy/include/aerial_autonomy/state_machines/basic_state_machine.h" bodystart="237" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="basic__state__machine_8h_1afcac32ee5e97ea2d2557a67769cfeaca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* pstate</definition>
        <argsstring>(LogicStateMachine const &amp;p)</argsstring>
        <name>pstate</name>
        <param>
          <type><ref refid="basic__state__machine_8h_1ab0b6ef21baf57684550a2f05c771bd86" kindref="member">LogicStateMachine</ref> const &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Get current state name. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>Logic state machine backend to access current state</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>state name </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/gowtham/indigo_workspace/src/aerial_autonomy/include/aerial_autonomy/state_machines/basic_state_machine.h" line="246" column="1" bodyfile="/home/gowtham/indigo_workspace/src/aerial_autonomy/include/aerial_autonomy/state_machines/basic_state_machine.h" bodystart="246" bodyend="248"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight></codeline>
<codeline lineno="2"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="20"><highlight class="comment">//<sp/>back-end</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="thread__safe__state__machine_8h" kindref="compound">aerial_autonomy/common/thread_safe_state_machine.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>front-end</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/msm/front/state_machine_def.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//<sp/>functors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/msm/front/functor_row.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Actions<sp/>and<sp/>guards<sp/>used</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="basic__states_8h" kindref="compound">aerial_autonomy/actions_guards/basic_states.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Robot<sp/>System<sp/>used</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="uav__system_8h" kindref="compound">aerial_autonomy/robot_systems/uav_system.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Logging<sp/>library</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;glog/logging.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Store<sp/>state<sp/>machine<sp/>states</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;array&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">msmf<sp/>=<sp/>boost::msm::front;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">be<sp/>=<sp/>basic_events;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Forward<sp/>Declaration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="classLogicStateMachineFrontEnd" kindref="compound">LogicStateMachineFrontEnd</ref>;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classboost_1_1msm_1_1back_1_1thread__safe__state__machine" kindref="compound">LogicStateMachine</ref><sp/>=</highlight></codeline>
<codeline lineno="53" refid="basic__state__machine_8h_1ab0b6ef21baf57684550a2f05c771bd86" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classboost_1_1msm_1_1back_1_1thread__safe__state__machine" kindref="compound">boost::msm::back::thread_safe_state_machine&lt;LogicStateMachineFrontEnd&gt;</ref>;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="classLogicStateMachineFrontEnd" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classLogicStateMachineFrontEnd" kindref="compound">LogicStateMachineFrontEnd</ref></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>msmf::state_machine_def&lt;LogicStateMachineFrontEnd&gt;<sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>friend<sp/>classes<sp/>that<sp/>can<sp/>use<sp/>the<sp/>robot<sp/>system</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>EventT,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>RobotSystemT,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>LogicStateMachineT&gt;</highlight></codeline>
<codeline lineno="62" refid="classLogicStateMachineFrontEnd_1a05673eb4ec343f36c1f3fb787ac26b94" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="structActionFunctor" kindref="compound">ActionFunctor</ref>;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>EventT,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>RobotSystemT,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>LogicStateMachineT&gt;</highlight></codeline>
<codeline lineno="65" refid="classLogicStateMachineFrontEnd_1a9411581bb37b54467df520e3c73ceaf0" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="structGuardFunctor" kindref="compound">GuardFunctor</ref>;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>RobotSystemT1,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>LogicStateMachineT&gt;</highlight></codeline>
<codeline lineno="68" refid="classLogicStateMachineFrontEnd_1a86a665e36420c3cbc2b45864e023f98a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="structEventAgnosticActionFunctor" kindref="compound">EventAgnosticActionFunctor</ref>;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>RobotSystemT1,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>LogicStateMachineT&gt;</highlight></codeline>
<codeline lineno="71" refid="classLogicStateMachineFrontEnd_1af372c36475bc4510af791f5cb66608ad" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="structEventAgnosticGuardFunctor" kindref="compound">EventAgnosticGuardFunctor</ref>;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="77" refid="classLogicStateMachineFrontEnd_1a8431e5208e24b80105d639281361a252" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classUAVSystem" kindref="compound">UAVSystem</ref><sp/>&amp;<ref refid="classLogicStateMachineFrontEnd_1a8431e5208e24b80105d639281361a252" kindref="member">robot_system_</ref>;</highlight></codeline>
<codeline lineno="81" refid="classLogicStateMachineFrontEnd_1a0f19247a261344e58dede909f598677f" refkind="member"><highlight class="normal"><sp/><sp/>std::type_index<sp/><ref refid="classLogicStateMachineFrontEnd_1a0f19247a261344e58dede909f598677f" kindref="member">no_transition_event_index_</ref><sp/>=<sp/></highlight><highlight class="keyword">typeid</highlight><highlight class="normal">(NULL);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="88" refid="classLogicStateMachineFrontEnd_1af2ccbab79c14bc6570091b49a2e61fff" refkind="member"><highlight class="normal"><sp/><sp/>std::type_index<sp/><ref refid="classLogicStateMachineFrontEnd_1af2ccbab79c14bc6570091b49a2e61fff" kindref="member">get_no_transition_event_index</ref>()<sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classLogicStateMachineFrontEnd_1a0f19247a261344e58dede909f598677f" kindref="member">no_transition_event_index_</ref>;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="97" refid="classLogicStateMachineFrontEnd_1afea624ef452f4dd6f5380c96fd9555bb" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Event,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>FSM&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classLogicStateMachineFrontEnd_1afea624ef452f4dd6f5380c96fd9555bb" kindref="member">on_entry</ref>(Event<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;,<sp/>FSM<sp/>&amp;)<sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>VLOG(1)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;entering:<sp/>UAV<sp/>system&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="106" refid="classLogicStateMachineFrontEnd_1a86bc9dc7c6ab97285bb5c9ea06517da3" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Event,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>FSM&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classLogicStateMachineFrontEnd_1a86bc9dc7c6ab97285bb5c9ea06517da3" kindref="member">on_exit</ref>(Event<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;,<sp/>FSM<sp/>&amp;)<sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>VLOG(1)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;leaving:<sp/>UAV<sp/>system&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="116" refid="classLogicStateMachineFrontEnd_1a38a4d9fba9466fa36d012d297e8908ec" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classLogicStateMachineFrontEnd_1a38a4d9fba9466fa36d012d297e8908ec" kindref="member">LogicStateMachineFrontEnd</ref>(<ref refid="classUAVSystem" kindref="compound">UAVSystem</ref><sp/>&amp;uav_system)</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classLogicStateMachineFrontEnd_1a8431e5208e24b80105d639281361a252" kindref="member">robot_system_</ref>(uav_system)<sp/>{}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>States<sp/>Used<sp/>in<sp/>the<sp/>state<sp/>machine:</highlight></codeline>
<codeline lineno="123" refid="classLogicStateMachineFrontEnd_1a98f3148dbabd87749be3c63ea0ec2a00" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classBaseState" kindref="compound">TakingOff</ref><sp/>=<sp/><ref refid="classBaseState" kindref="compound">TakingOff_&lt;LogicStateMachine&gt;</ref>;</highlight></codeline>
<codeline lineno="127" refid="classLogicStateMachineFrontEnd_1acac7938fd313e8808e486fa884ccf49b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classBaseState" kindref="compound">Landing</ref><sp/>=<sp/><ref refid="classBaseState" kindref="compound">Landing_&lt;LogicStateMachine&gt;</ref>;</highlight></codeline>
<codeline lineno="131" refid="classLogicStateMachineFrontEnd_1a8a5e85c9d100560fc79f9cbe1bbd5947" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classBaseState" kindref="compound">ReachingGoal</ref><sp/>=<sp/><ref refid="classBaseState" kindref="compound">ReachingGoal_&lt;LogicStateMachine&gt;</ref>;</highlight></codeline>
<codeline lineno="135" refid="classLogicStateMachineFrontEnd_1a5877b5b19ba413c2b3bb02ee2459d5ec" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classBaseState" kindref="compound">Hovering</ref><sp/>=<sp/><ref refid="classBaseState" kindref="compound">Hovering_&lt;LogicStateMachine&gt;</ref>;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>States<sp/>without<sp/>any<sp/>internal<sp/>actions:</highlight></codeline>
<codeline lineno="140" refid="structLogicStateMachineFrontEnd_1_1Landed" refkind="compound"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structLogicStateMachineFrontEnd_1_1Landed" kindref="compound">Landed</ref><sp/>:<sp/>msmf::state&lt;&gt;<sp/>{</highlight></codeline>
<codeline lineno="144" refid="structLogicStateMachineFrontEnd_1_1Landed_1_1internal__transition__table" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structLogicStateMachineFrontEnd_1_1Landed_1_1internal__transition__table" kindref="compound">internal_transition_table</ref></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>boost::mpl::vector&lt;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msmf::Internal&lt;InternalTransitionEvent,<sp/>msmf::none,<sp/>msmf::none&gt;&gt;<sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="152" refid="classLogicStateMachineFrontEnd_1ae617089cdb6687edc5d27b7f8a546af2" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structLogicStateMachineFrontEnd_1_1Landed" kindref="compound">initial_state</ref><sp/>=<sp/><ref refid="structLogicStateMachineFrontEnd_1_1Landed" kindref="compound">Landed</ref>;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Transition<sp/>Actions</highlight></codeline>
<codeline lineno="158" refid="classLogicStateMachineFrontEnd_1af73bbbe19d413f3786c265fe91a94ffb" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structTakeoffTransitionActionFunctor__" kindref="compound">TakeoffAction</ref><sp/>=<sp/><ref refid="structTakeoffTransitionActionFunctor__" kindref="compound">TakeoffTransitionActionFunctor_&lt;LogicStateMachine&gt;</ref>;</highlight></codeline>
<codeline lineno="162" refid="classLogicStateMachineFrontEnd_1a4660e7e7dbd8bc3f7a379a076999187d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structTakeoffTransitionGuardFunctor__" kindref="compound">TakeoffGuard</ref><sp/>=<sp/><ref refid="structTakeoffTransitionGuardFunctor__" kindref="compound">TakeoffTransitionGuardFunctor_&lt;LogicStateMachine&gt;</ref>;</highlight></codeline>
<codeline lineno="166" refid="classLogicStateMachineFrontEnd_1a26036773cac59b48b9e545acc870a29b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structTakeoffAbortActionFunctor__" kindref="compound">TakeoffAbort</ref><sp/>=<sp/><ref refid="structTakeoffAbortActionFunctor__" kindref="compound">TakeoffAbortActionFunctor_&lt;LogicStateMachine&gt;</ref>;</highlight></codeline>
<codeline lineno="170" refid="classLogicStateMachineFrontEnd_1ad1619c7d43a216eb9238004470389f2e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structLandTransitionActionFunctor__" kindref="compound">LandingAction</ref><sp/>=<sp/><ref refid="structLandTransitionActionFunctor__" kindref="compound">LandTransitionActionFunctor_&lt;LogicStateMachine&gt;</ref>;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structPositionControlTransitionActionFunctor__" kindref="compound">ReachingGoalSet</ref><sp/>=</highlight></codeline>
<codeline lineno="175" refid="classLogicStateMachineFrontEnd_1a39babee29ba680422ea922504a465417" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structPositionControlTransitionActionFunctor__" kindref="compound">PositionControlTransitionActionFunctor_&lt;LogicStateMachine&gt;</ref>;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structPositionControlTransitionGuardFunctor__" kindref="compound">ReachingGoalGuard</ref><sp/>=</highlight></codeline>
<codeline lineno="180" refid="classLogicStateMachineFrontEnd_1a84fe5b03b104adc3c3406bb0b6ffa190" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structPositionControlTransitionGuardFunctor__" kindref="compound">PositionControlTransitionGuardFunctor_&lt;LogicStateMachine&gt;</ref>;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structPositionControlAbortActionFunctor__" kindref="compound">ReachingGoalAbort</ref><sp/>=</highlight></codeline>
<codeline lineno="185" refid="classLogicStateMachineFrontEnd_1a6273a06430b7aa6088e25d9b78805f1a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structPositionControlAbortActionFunctor__" kindref="compound">PositionControlAbortActionFunctor_&lt;LogicStateMachine&gt;</ref>;</highlight></codeline>
<codeline lineno="189" refid="classLogicStateMachineFrontEnd_1a3bec78d997dbc5ae5534c3b49c8127f5" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structLandTransitionActionFunctor__" kindref="compound">ReachingGoalLand</ref><sp/>=<sp/><ref refid="classLogicStateMachineFrontEnd_1ad1619c7d43a216eb9238004470389f2e" kindref="member">LandingAction</ref>;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="194" refid="structLogicStateMachineFrontEnd_1_1transition__table" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structLogicStateMachineFrontEnd_1_1transition__table" kindref="compound">transition_table</ref></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>boost::mpl::vector&lt;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Start<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Event<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Next<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Action<sp/>Guard</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+--------------+-------------+--------------+---------------------+---------------------------+</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msmf::Row&lt;Landed,<sp/>be::Takeoff,<sp/>TakingOff,<sp/>TakeoffAction,</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TakeoffGuard&gt;,</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+--------------+-------------+--------------+---------------------+---------------------------+</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msmf::Row&lt;TakingOff,<sp/>be::Land,<sp/>Landing,<sp/>LandingAction,<sp/>msmf::none&gt;,</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msmf::Row&lt;TakingOff,<sp/>be::Abort,<sp/>Landing,<sp/>TakeoffAbort,<sp/>msmf::none&gt;,</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+--------------+-------------+--------------+---------------------+---------------------------+</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msmf::Row&lt;Hovering,<sp/>PositionYaw,<sp/>ReachingGoal,<sp/>ReachingGoalSet,</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ReachingGoalGuard&gt;,</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msmf::Row&lt;Hovering,<sp/>be::Land,<sp/>Landing,<sp/>LandingAction,<sp/>msmf::none&gt;,</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+--------------+-------------+--------------+---------------------+---------------------------+</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msmf::Row&lt;ReachingGoal,<sp/>be::Abort,<sp/>Hovering,<sp/>ReachingGoalAbort,</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msmf::none&gt;,</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msmf::Row&lt;ReachingGoal,<sp/>be::Land,<sp/>Landing,<sp/>ReachingGoalLand,</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msmf::none&gt;,</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+--------------+-------------+--------------+---------------------+---------------------------+</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msmf::Row&lt;Landing,<sp/>Completed,<sp/>Landed,<sp/>msmf::none,<sp/>msmf::none&gt;,</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msmf::Row&lt;TakingOff,<sp/>Completed,<sp/>Hovering,<sp/>msmf::none,<sp/>msmf::none&gt;,</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msmf::Row&lt;ReachingGoal,<sp/>Completed,<sp/>Hovering,<sp/>msmf::none,<sp/>msmf::none&gt;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+--------------+-------------+--------------+---------------------+---------------------------+</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;<sp/>{};</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>FSM,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Event&gt;</highlight></codeline>
<codeline lineno="227" refid="classLogicStateMachineFrontEnd_1aa75b2a1500d4bfe052c5421aeefbf7ab" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classLogicStateMachineFrontEnd_1aa75b2a1500d4bfe052c5421aeefbf7ab" kindref="member">no_transition</ref>(Event<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;e,<sp/>FSM<sp/>&amp;,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>state_index)<sp/>{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classLogicStateMachineFrontEnd_1a0f19247a261344e58dede909f598677f" kindref="member">no_transition_event_index_</ref><sp/>=<sp/></highlight><highlight class="keyword">typeid</highlight><highlight class="normal">(e);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>LOG(WARNING)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Event<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classLogicStateMachineFrontEnd_1a0f19247a261344e58dede909f598677f" kindref="member">no_transition_event_index_</ref>.name()</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>triggered<sp/>no<sp/>transition&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="232"><highlight class="normal">};</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/>std::array&lt;const<sp/>char<sp/>*,<sp/>5&gt;<sp/>state_names<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Landed&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;TakingOff&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Hovering&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;ReachingGoal&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Landing&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="246" refid="basic__state__machine_8h_1afcac32ee5e97ea2d2557a67769cfeaca" refkind="member"><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="basic__state__machine_8h_1afcac32ee5e97ea2d2557a67769cfeaca" kindref="member">pstate</ref>(<ref refid="classboost_1_1msm_1_1back_1_1thread__safe__state__machine" kindref="compound">LogicStateMachine</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;p)<sp/>{</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>state_names.at(p.current_state()[0]);</highlight></codeline>
<codeline lineno="248"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/gowtham/indigo_workspace/src/aerial_autonomy/include/aerial_autonomy/state_machines/basic_state_machine.h"/>
  </compounddef>
</doxygen>
