<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="closest__tracking__strategy_8h" kind="file">
    <compoundname>closest_tracking_strategy.h</compoundname>
    <includes refid="tracking__strategy_8h" local="yes">aerial_autonomy/trackers/tracking_strategy.h</includes>
    <includedby refid="closest__tracking__strategy_8cpp" local="yes">src/trackers/closest_tracking_strategy.cpp</includedby>
    <includedby refid="alvar__tracker_8h" local="yes">include/aerial_autonomy/trackers/alvar_tracker.h</includedby>
    <incdepgraph>
      <node id="6679">
        <label>cmath</label>
      </node>
      <node id="6680">
        <label>tuple</label>
      </node>
      <node id="6676">
        <label>include/aerial_autonomy/trackers/closest_tracking_strategy.h</label>
        <link refid="closest_tracking_strategy.h"/>
        <childnode refid="6677" relation="include">
        </childnode>
      </node>
      <node id="6681">
        <label>unordered_map</label>
      </node>
      <node id="6677">
        <label>aerial_autonomy/trackers/tracking_strategy.h</label>
        <link refid="tracking__strategy_8h"/>
        <childnode refid="6678" relation="include">
        </childnode>
        <childnode refid="6680" relation="include">
        </childnode>
        <childnode refid="6681" relation="include">
        </childnode>
      </node>
      <node id="6678">
        <label>aerial_autonomy/types/position.h</label>
        <link refid="position_8h"/>
        <childnode refid="6679" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="6685">
        <label>src/trackers/alvar_tracker.cpp</label>
        <link refid="alvar__tracker_8cpp"/>
      </node>
      <node id="6688">
        <label>include/aerial_autonomy/system_handlers/uav_vision_system_handler.h</label>
        <link refid="uav__vision__system__handler_8h"/>
        <childnode refid="6689" relation="include">
        </childnode>
      </node>
      <node id="6689">
        <label>src/system_handler_nodes/uav_vision_system_node.cpp</label>
        <link refid="uav__vision__system__node_8cpp"/>
      </node>
      <node id="6682">
        <label>include/aerial_autonomy/trackers/closest_tracking_strategy.h</label>
        <link refid="closest_tracking_strategy.h"/>
        <childnode refid="6683" relation="include">
        </childnode>
        <childnode refid="6684" relation="include">
        </childnode>
      </node>
      <node id="6684">
        <label>include/aerial_autonomy/trackers/alvar_tracker.h</label>
        <link refid="alvar__tracker_8h"/>
        <childnode refid="6685" relation="include">
        </childnode>
        <childnode refid="6686" relation="include">
        </childnode>
        <childnode refid="6688" relation="include">
        </childnode>
      </node>
      <node id="6683">
        <label>src/trackers/closest_tracking_strategy.cpp</label>
        <link refid="closest__tracking__strategy_8cpp"/>
      </node>
      <node id="6686">
        <label>include/aerial_autonomy/system_handlers/uav_arm_system_handler.h</label>
        <link refid="uav__arm__system__handler_8h"/>
        <childnode refid="6687" relation="include">
        </childnode>
      </node>
      <node id="6687">
        <label>src/system_handler_nodes/uav_arm_system_node.cpp</label>
        <link refid="uav__arm__system__node_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classClosestTrackingStrategy" prot="public">ClosestTrackingStrategy</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight></codeline>
<codeline lineno="2"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="tracking__strategy_8h" kindref="compound">aerial_autonomy/trackers/tracking_strategy.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="9" refid="classClosestTrackingStrategy" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classClosestTrackingStrategy" kindref="compound">ClosestTrackingStrategy</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classTrackingStrategy" kindref="compound">TrackingStrategy</ref><sp/>{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="16" refid="classClosestTrackingStrategy_1ad02150bbcb57ce65ff68cd3cd86fda94" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classClosestTrackingStrategy_1ad02150bbcb57ce65ff68cd3cd86fda94" kindref="member">ClosestTrackingStrategy</ref>(uint32_t<sp/>max_tracking_retries<sp/>=<sp/>20)</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>tracking_locked_(false),<sp/>max_tracking_retries_(max_tracking_retries),</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tracking_retries_(0)<sp/>{}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><ref refid="classClosestTrackingStrategy_1ae828f364f350cb3211319a315df3c96c" kindref="member">initialize</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::unordered_map&lt;uint32_t,<sp/>Position&gt;<sp/>&amp;tracking_vectors);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classClosestTrackingStrategy_1a3b2f62f154bafa7528831f715df918f3" kindref="member">getTrackingVector</ref>(</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::unordered_map&lt;uint32_t,<sp/>Position&gt;<sp/>&amp;tracking_vectors,</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::tuple&lt;uint32_t,<sp/>Position&gt;<sp/>&amp;tracking_vector);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>getClosest(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::unordered_map&lt;uint32_t,<sp/>Position&gt;<sp/>&amp;tracking_vectors,</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::tuple&lt;uint32_t,<sp/>Position&gt;<sp/>&amp;tracking_vector);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>uint32_t<sp/>tracked_id_;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>tracking_locked_;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>max_tracking_retries_;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>uint32_t<sp/>tracking_retries_;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/>std::tuple&lt;uint32_t,<sp/>Position&gt;<sp/>last_tracking_vector_;</highlight></codeline>
<codeline lineno="68"><highlight class="normal">};</highlight></codeline>
    </programlisting>
    <location file="/home/matt/catkin_ws/src/aerial_autonomy/include/aerial_autonomy/trackers/closest_tracking_strategy.h"/>
  </compounddef>
</doxygen>
