<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="base__tracker_8cpp" kind="file">
    <compoundname>base_tracker.cpp</compoundname>
    <includes refid="base__tracker_8h" local="yes">aerial_autonomy/trackers/base_tracker.h</includes>
    <incdepgraph>
      <node id="7775">
        <label>cmath</label>
      </node>
      <node id="7776">
        <label>tuple</label>
      </node>
      <node id="7772">
        <label>aerial_autonomy/trackers/base_tracker.h</label>
        <link refid="base__tracker_8h"/>
        <childnode refid="7773" relation="include">
        </childnode>
        <childnode refid="7774" relation="include">
        </childnode>
        <childnode refid="7778" relation="include">
        </childnode>
        <childnode refid="7776" relation="include">
        </childnode>
        <childnode refid="7777" relation="include">
        </childnode>
      </node>
      <node id="7771">
        <label>src/trackers/base_tracker.cpp</label>
        <link refid="base_tracker.cpp"/>
        <childnode refid="7772" relation="include">
        </childnode>
      </node>
      <node id="7777">
        <label>unordered_map</label>
      </node>
      <node id="7773">
        <label>aerial_autonomy/trackers/tracking_strategy.h</label>
        <link refid="tracking__strategy_8h"/>
        <childnode refid="7774" relation="include">
        </childnode>
        <childnode refid="7776" relation="include">
        </childnode>
        <childnode refid="7777" relation="include">
        </childnode>
      </node>
      <node id="7774">
        <label>aerial_autonomy/types/position.h</label>
        <link refid="position_8h"/>
        <childnode refid="7775" relation="include">
        </childnode>
      </node>
      <node id="7778">
        <label>memory</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="base__tracker_8h" kindref="compound">aerial_autonomy/trackers/base_tracker.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classBaseTracker_1a705369e65f51447798bb19e979de9801" kindref="member">BaseTracker::getTrackingVector</ref>(<ref refid="structPosition" kindref="compound">Position</ref><sp/>&amp;pos)<sp/>{</highlight></codeline>
<codeline lineno="4"><highlight class="normal"><sp/><sp/>std::tuple&lt;uint32_t,<sp/>Position&gt;<sp/>pos_tuple;</highlight></codeline>
<codeline lineno="5"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classBaseTracker_1a705369e65f51447798bb19e979de9801" kindref="member">getTrackingVector</ref>(pos_tuple))<sp/>{</highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/>pos<sp/>=<sp/>std::get&lt;1&gt;(pos_tuple);</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="10"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classBaseTracker_1a705369e65f51447798bb19e979de9801" kindref="member">BaseTracker::getTrackingVector</ref>(std::tuple&lt;uint32_t,<sp/>Position&gt;<sp/>&amp;pos)<sp/>{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classBaseTracker_1aa1ad8436be9476278e78142ee1ab8fd6" kindref="member">trackingIsValid</ref>())<sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/>std::unordered_map&lt;uint32_t,<sp/>Position&gt;<sp/>tracking_vectors;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classBaseTracker_1a20360b084ef9b2df755854c274a73f2b" kindref="member">getTrackingVectors</ref>(tracking_vectors))<sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!tracking_strategy_-&gt;getTrackingVector(tracking_vectors,<sp/>pos))<sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="26"><highlight class="normal">}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classBaseTracker_1ad1a6497933830415ee97d9ea2d2706af" kindref="member">BaseTracker::initialize</ref>()<sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/>std::unordered_map&lt;uint32_t,<sp/>Position&gt;<sp/>tracking_vectors;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classBaseTracker_1a20360b084ef9b2df755854c274a73f2b" kindref="member">getTrackingVectors</ref>(tracking_vectors))<sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tracking_strategy_-&gt;initialize(tracking_vectors);</highlight></codeline>
<codeline lineno="34"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/matt/catkin_ws/src/aerial_autonomy/src/trackers/base_tracker.cpp"/>
  </compounddef>
</doxygen>
