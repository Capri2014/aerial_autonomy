<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="base__controller__hardware__connector_8h" kind="file">
    <compoundname>base_controller_hardware_connector.h</compoundname>
    <includes refid="base__controller_8h" local="no">aerial_autonomy/controllers/base_controller.h</includes>
    <includes local="no">glog/logging.h</includes>
    <includedby refid="builtin__velocity__controller__drone__connector_8h" local="yes">include/aerial_autonomy/controller_hardware_connectors/builtin_velocity_controller_drone_connector.h</includedby>
    <includedby refid="manual__rpyt__controller__drone__connector_8h" local="yes">include/aerial_autonomy/controller_hardware_connectors/manual_rpyt_controller_drone_connector.h</includedby>
    <includedby refid="position__controller__drone__connector_8h" local="yes">include/aerial_autonomy/controller_hardware_connectors/position_controller_drone_connector.h</includedby>
    <includedby refid="visual__servoing__controller__drone__connector_8h" local="yes">include/aerial_autonomy/controller_hardware_connectors/visual_servoing_controller_drone_connector.h</includedby>
    <includedby refid="base__robot__system_8h" local="no">include/aerial_autonomy/robot_systems/base_robot_system.h</includedby>
    <incdepgraph>
      <node id="2824">
        <label>boost/thread/mutex.hpp</label>
      </node>
      <node id="2825">
        <label>glog/logging.h</label>
      </node>
      <node id="2823">
        <label>aerial_autonomy/controllers/base_controller.h</label>
        <link refid="base__controller_8h"/>
        <childnode refid="2824" relation="include">
        </childnode>
      </node>
      <node id="2822">
        <label>include/aerial_autonomy/controller_hardware_connectors/base_controller_hardware_connector.h</label>
        <link refid="base_controller_hardware_connector.h"/>
        <childnode refid="2823" relation="include">
        </childnode>
        <childnode refid="2825" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2829">
        <label>include/aerial_autonomy/controller_hardware_connectors/basic_controller_hardware_connectors.h</label>
        <link refid="basic__controller__hardware__connectors_8h"/>
        <childnode refid="2830" relation="include">
        </childnode>
      </node>
      <node id="2843">
        <label>include/aerial_autonomy/actions_guards/visual_servoing_functors.h</label>
        <link refid="visual__servoing__functors_8h"/>
        <childnode refid="2833" relation="include">
        </childnode>
      </node>
      <node id="2839">
        <label>include/aerial_autonomy/actions_guards/manual_control_functors.h</label>
        <link refid="manual__control__functors_8h"/>
        <childnode refid="2832" relation="include">
        </childnode>
      </node>
      <node id="2847">
        <label>include/aerial_autonomy/system_handlers/uav_system_handler.h</label>
        <link refid="uav__system__handler_8h"/>
        <childnode refid="2837" relation="include">
        </childnode>
      </node>
      <node id="2838">
        <label>include/aerial_autonomy/actions_guards/land_functors.h</label>
        <link refid="land__functors_8h"/>
        <childnode refid="2832" relation="include">
        </childnode>
      </node>
      <node id="2842">
        <label>include/aerial_autonomy/actions_guards/uav_status_functor.h</label>
        <link refid="uav__status__functor_8h"/>
        <childnode refid="2840" relation="include">
        </childnode>
        <childnode refid="2843" relation="include">
        </childnode>
      </node>
      <node id="2849">
        <label>src/controller_hardware_connectors/manual_rpyt_controller_drone_connector.cpp</label>
        <link refid="manual__rpyt__controller__drone__connector_8cpp"/>
      </node>
      <node id="2832">
        <label>include/aerial_autonomy/actions_guards/uav_states_actions.h</label>
        <link refid="uav__states__actions_8h"/>
        <childnode refid="2833" relation="include">
        </childnode>
        <childnode refid="2836" relation="include">
        </childnode>
      </node>
      <node id="2837">
        <label>src/system_handler_nodes/uav_system_node.cpp</label>
        <link refid="uav__system__node_8cpp"/>
      </node>
      <node id="2852">
        <label>include/aerial_autonomy/controller_hardware_connectors/visual_servoing_controller_drone_connector.h</label>
        <link refid="visual__servoing__controller__drone__connector_8h"/>
        <childnode refid="2853" relation="include">
        </childnode>
        <childnode refid="2844" relation="include">
        </childnode>
      </node>
      <node id="2856">
        <label>include/aerial_autonomy/system_handlers/common_system_handler.h</label>
        <link refid="common__system__handler_8h"/>
        <childnode refid="2847" relation="include">
        </childnode>
        <childnode refid="2845" relation="include">
        </childnode>
      </node>
      <node id="2833">
        <label>include/aerial_autonomy/actions_guards/visual_servoing_states_actions.h</label>
        <link refid="visual__servoing__states__actions_8h"/>
        <childnode refid="2834" relation="include">
        </childnode>
      </node>
      <node id="2844">
        <label>include/aerial_autonomy/robot_systems/uav_vision_system.h</label>
        <link refid="uav__vision__system_8h"/>
        <childnode refid="2843" relation="include">
        </childnode>
        <childnode refid="2834" relation="include">
        </childnode>
        <childnode refid="2845" relation="include">
        </childnode>
        <childnode refid="2846" relation="include">
        </childnode>
      </node>
      <node id="2857">
        <label>include/aerial_autonomy/robot_systems/arm_system.h</label>
        <link refid="arm__system_8h"/>
      </node>
      <node id="2840">
        <label>include/aerial_autonomy/actions_guards/position_control_functors.h</label>
        <link refid="position__control__functors_8h"/>
        <childnode refid="2832" relation="include">
        </childnode>
      </node>
      <node id="2828">
        <label>src/controller_hardware_connectors/builtin_velocity_controller_drone_connector.cpp</label>
        <link refid="builtin__velocity__controller__drone__connector_8cpp"/>
      </node>
      <node id="2834">
        <label>include/aerial_autonomy/state_machines/visual_servoing_state_machine.h</label>
        <link refid="visual__servoing__state__machine_8h"/>
        <childnode refid="2835" relation="include">
        </childnode>
      </node>
      <node id="2831">
        <label>include/aerial_autonomy/actions_guards/hovering_functors.h</label>
        <link refid="hovering__functors_8h"/>
        <childnode refid="2832" relation="include">
        </childnode>
      </node>
      <node id="2835">
        <label>src/system_handler_nodes/uav_vision_system_node.cpp</label>
        <link refid="uav__vision__system__node_8cpp"/>
      </node>
      <node id="2850">
        <label>include/aerial_autonomy/controller_hardware_connectors/position_controller_drone_connector.h</label>
        <link refid="position__controller__drone__connector_8h"/>
        <childnode refid="2851" relation="include">
        </childnode>
        <childnode refid="2840" relation="include">
        </childnode>
        <childnode refid="2829" relation="include">
        </childnode>
      </node>
      <node id="2836">
        <label>include/aerial_autonomy/state_machines/uav_state_machine.h</label>
        <link refid="uav__state__machine_8h"/>
        <childnode refid="2837" relation="include">
        </childnode>
      </node>
      <node id="2853">
        <label>src/controller_hardware_connectors/visual_servoing_controller_drone_connector.cpp</label>
        <link refid="visual__servoing__controller__drone__connector_8cpp"/>
      </node>
      <node id="2827">
        <label>include/aerial_autonomy/controller_hardware_connectors/builtin_velocity_controller_drone_connector.h</label>
        <link refid="builtin__velocity__controller__drone__connector_8h"/>
        <childnode refid="2828" relation="include">
        </childnode>
        <childnode refid="2829" relation="include">
        </childnode>
      </node>
      <node id="2848">
        <label>include/aerial_autonomy/controller_hardware_connectors/manual_rpyt_controller_drone_connector.h</label>
        <link refid="manual__rpyt__controller__drone__connector_8h"/>
        <childnode refid="2849" relation="include">
        </childnode>
        <childnode refid="2829" relation="include">
        </childnode>
      </node>
      <node id="2855">
        <label>include/aerial_autonomy/common/system_status_publisher.h</label>
        <link refid="system__status__publisher_8h"/>
        <childnode refid="2856" relation="include">
        </childnode>
      </node>
      <node id="2851">
        <label>src/controller_hardware_connectors/position_controller_drone_connector.cpp</label>
        <link refid="position__controller__drone__connector_8cpp"/>
      </node>
      <node id="2826">
        <label>include/aerial_autonomy/controller_hardware_connectors/base_controller_hardware_connector.h</label>
        <link refid="base_controller_hardware_connector.h"/>
        <childnode refid="2827" relation="include">
        </childnode>
        <childnode refid="2848" relation="include">
        </childnode>
        <childnode refid="2850" relation="include">
        </childnode>
        <childnode refid="2852" relation="include">
        </childnode>
        <childnode refid="2854" relation="include">
        </childnode>
      </node>
      <node id="2830">
        <label>include/aerial_autonomy/robot_systems/uav_system.h</label>
        <link refid="uav__system_8h"/>
        <childnode refid="2831" relation="include">
        </childnode>
        <childnode refid="2838" relation="include">
        </childnode>
        <childnode refid="2839" relation="include">
        </childnode>
        <childnode refid="2840" relation="include">
        </childnode>
        <childnode refid="2841" relation="include">
        </childnode>
        <childnode refid="2842" relation="include">
        </childnode>
        <childnode refid="2844" relation="include">
        </childnode>
        <childnode refid="2836" relation="include">
        </childnode>
        <childnode refid="2847" relation="include">
        </childnode>
        <childnode refid="2846" relation="include">
        </childnode>
      </node>
      <node id="2846">
        <label>include/aerial_autonomy/tests/sample_logic_state_machine.h</label>
        <link refid="sample__logic__state__machine_8h"/>
      </node>
      <node id="2845">
        <label>include/aerial_autonomy/system_handlers/uav_vision_system_handler.h</label>
        <link refid="uav__vision__system__handler_8h"/>
        <childnode refid="2835" relation="include">
        </childnode>
      </node>
      <node id="2854">
        <label>include/aerial_autonomy/robot_systems/base_robot_system.h</label>
        <link refid="base__robot__system_8h"/>
        <childnode refid="2855" relation="include">
        </childnode>
        <childnode refid="2857" relation="include">
        </childnode>
        <childnode refid="2830" relation="include">
        </childnode>
      </node>
      <node id="2841">
        <label>include/aerial_autonomy/actions_guards/takeoff_functors.h</label>
        <link refid="takeoff__functors_8h"/>
        <childnode refid="2832" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structAbstractControllerHardwareConnector" prot="public">AbstractControllerHardwareConnector</innerclass>
    <innerclass refid="classControllerHardwareConnector" prot="public">ControllerHardwareConnector</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="base__controller__hardware__connector_8h_1ae4dfd42394001deb6e8a0e60c81d6f7a" prot="public" static="no">
        <name>HardwareType</name>
        <enumvalue id="base__controller__hardware__connector_8h_1ae4dfd42394001deb6e8a0e60c81d6f7aa6902d76cea698982754404da77e5e08a" prot="public">
          <name>UAV</name>
          <briefdescription>
<para>Only aerial vehicle. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="base__controller__hardware__connector_8h_1ae4dfd42394001deb6e8a0e60c81d6f7aa551c5c03a1a91f2cf90e0d9a9b6dd378" prot="public">
          <name>Arm</name>
          <briefdescription>
<para>Only arm. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="base__controller__hardware__connector_8h_1ae4dfd42394001deb6e8a0e60c81d6f7aa7fb55ed0b7a30342ba6da306428cae04" prot="public">
          <name>First</name>
          <initializer>= UAV</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="base__controller__hardware__connector_8h_1ae4dfd42394001deb6e8a0e60c81d6f7aad55b30607c2a9a2616347d6edb789f6b" prot="public">
          <name>Last</name>
          <initializer>= Arm</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Type of hardware used by <ref refid="classControllerHardwareConnector" kindref="compound">ControllerHardwareConnector</ref>. Enum ID must be contiguous. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/gowtham/indigo_workspace/src/aerial_autonomy/include/aerial_autonomy/controller_hardware_connectors/base_controller_hardware_connector.h" line="9" column="1" bodyfile="/home/gowtham/indigo_workspace/src/aerial_autonomy/include/aerial_autonomy/controller_hardware_connectors/base_controller_hardware_connector.h" bodystart="9" bodyend="14"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight></codeline>
<codeline lineno="2"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="base__controller_8h" kindref="compound">aerial_autonomy/controllers/base_controller.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;glog/logging.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="9" refid="base__controller__hardware__connector_8h_1ae4dfd42394001deb6e8a0e60c81d6f7a" refkind="member"><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/><ref refid="base__controller__hardware__connector_8h_1ae4dfd42394001deb6e8a0e60c81d6f7a" kindref="member">HardwareType</ref><sp/>{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><ref refid="base__controller__hardware__connector_8h_1ae4dfd42394001deb6e8a0e60c81d6f7aa6902d76cea698982754404da77e5e08a" kindref="member">UAV</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><ref refid="base__controller__hardware__connector_8h_1ae4dfd42394001deb6e8a0e60c81d6f7aa551c5c03a1a91f2cf90e0d9a9b6dd378" kindref="member">Arm</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><ref refid="base__controller__hardware__connector_8h_1ae4dfd42394001deb6e8a0e60c81d6f7aa7fb55ed0b7a30342ba6da306428cae04" kindref="member">First</ref><sp/>=<sp/><ref refid="base__controller__hardware__connector_8h_1ae4dfd42394001deb6e8a0e60c81d6f7aa6902d76cea698982754404da77e5e08a" kindref="member">UAV</ref>,<sp/></highlight><highlight class="comment">//<sp/>This<sp/>should<sp/>always<sp/>point<sp/>to<sp/>the<sp/>first<sp/>in<sp/>the<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><ref refid="base__controller__hardware__connector_8h_1ae4dfd42394001deb6e8a0e60c81d6f7aad55b30607c2a9a2616347d6edb789f6b" kindref="member">Last</ref><sp/>=<sp/><ref refid="base__controller__hardware__connector_8h_1ae4dfd42394001deb6e8a0e60c81d6f7aa551c5c03a1a91f2cf90e0d9a9b6dd378" kindref="member">Arm</ref><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>should<sp/>always<sp/>point<sp/>to<sp/>the<sp/>last<sp/>in<sp/>the<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal">};</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="19" refid="structAbstractControllerHardwareConnector" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structAbstractControllerHardwareConnector" kindref="compound">AbstractControllerHardwareConnector</ref><sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structAbstractControllerHardwareConnector_1a0fcf605e19daef2f9f99d4dc2a23feb4" kindref="member">run</ref>()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="31" refid="structAbstractControllerHardwareConnector_1a06f931d74faac604c3ef56cb5ba75399" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="structAbstractControllerHardwareConnector_1a06f931d74faac604c3ef56cb5ba75399" kindref="member">~AbstractControllerHardwareConnector</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="32"><highlight class="normal">};</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>SensorDataType,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>GoalType,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ControlType&gt;</highlight></codeline>
<codeline lineno="43" refid="classControllerHardwareConnector" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classControllerHardwareConnector" kindref="compound">ControllerHardwareConnector</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="structAbstractControllerHardwareConnector" kindref="compound">AbstractControllerHardwareConnector</ref><sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="59" refid="classControllerHardwareConnector_1a6c5d8e5a5ded026ccee3d51f2899ce3e" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classControllerHardwareConnector_1a6c5d8e5a5ded026ccee3d51f2899ce3e" kindref="member">ControllerHardwareConnector</ref>(</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classController" kindref="compound">Controller&lt;SensorDataType, GoalType, ControlType&gt;</ref><sp/>&amp;controller,</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="base__controller__hardware__connector_8h_1ae4dfd42394001deb6e8a0e60c81d6f7a" kindref="member">HardwareType</ref><sp/>hardware_type)</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="structAbstractControllerHardwareConnector" kindref="compound">AbstractControllerHardwareConnector</ref>(),<sp/><ref refid="classControllerHardwareConnector_1a1e47c12f796c9cc2fcb5c2495ede2392" kindref="member">hardware_type_</ref>(hardware_type),</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>controller_(controller),<sp/>status_(<ref refid="base__controller_8h_1addd69ea32460850b571ba88f2a994b73" kindref="member">ControllerStatus</ref>::<ref refid="base__controller_8h_1addd69ea32460850b571ba88f2a994b73a4d3d769b812b6faa6b76e1a8abaece2d" kindref="member">Active</ref>)<sp/>{}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="classControllerHardwareConnector_1afb46464434a3a5881ecc1091f58bbd61" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classControllerHardwareConnector_1afb46464434a3a5881ecc1091f58bbd61" kindref="member">run</ref>()<sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>latest<sp/>sensor<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>run<sp/>the<sp/>controller</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>send<sp/>the<sp/>data<sp/>back<sp/>to<sp/>hardware<sp/>manager</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>SensorDataType<sp/>sensor_data;<sp/></highlight><highlight class="comment">//<sp/>Declare<sp/>sensor<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>ControlType<sp/>control;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Declare<sp/>control<sp/>to<sp/>send<sp/>hardware</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Extract<sp/>Sensor<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classControllerHardwareConnector_1ad241af05eac639961a1b07fe7330f054" kindref="member">extractSensorData</ref>(sensor_data))<sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setStatus(<ref refid="base__controller_8h_1addd69ea32460850b571ba88f2a994b73a278d01e5af56273bae1bb99a98b370cd" kindref="member">ControllerStatus::Critical</ref>);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Run<sp/>controller<sp/>step</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!controller_.run(sensor_data,<sp/>control))<sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setStatus(<ref refid="base__controller_8h_1addd69ea32460850b571ba88f2a994b73a278d01e5af56273bae1bb99a98b370cd" kindref="member">ControllerStatus::Critical</ref>);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Send<sp/>hardware<sp/>commands</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classControllerHardwareConnector_1a5fc86156d5c747aba36497732962d6d0" kindref="member">sendHardwareCommands</ref>(control);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>controller<sp/>converged</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(controller_.isConverged(sensor_data))<sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setStatus(<ref refid="base__controller_8h_1addd69ea32460850b571ba88f2a994b73a07ca5050e697392c9ed47e6453f1453f" kindref="member">ControllerStatus::Completed</ref>);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setStatus(<ref refid="base__controller_8h_1addd69ea32460850b571ba88f2a994b73a4d3d769b812b6faa6b76e1a8abaece2d" kindref="member">ControllerStatus::Active</ref>);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="98" refid="classControllerHardwareConnector_1a14ce51377f80b67796fcb50ce8195efd" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classControllerHardwareConnector_1a14ce51377f80b67796fcb50ce8195efd" kindref="member">setGoal</ref>(GoalType<sp/>goal)<sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>setStatus(<ref refid="base__controller_8h_1addd69ea32460850b571ba88f2a994b73a4d3d769b812b6faa6b76e1a8abaece2d" kindref="member">ControllerStatus::Active</ref>);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>controller_.setGoal(goal);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="107" refid="classControllerHardwareConnector_1adccf30ddf2b8be152e53636b1c2d3ad5" refkind="member"><highlight class="normal"><sp/><sp/>GoalType<sp/><ref refid="classControllerHardwareConnector_1adccf30ddf2b8be152e53636b1c2d3ad5" kindref="member">getGoal</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>controller_.getGoal();<sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="114" refid="classControllerHardwareConnector_1accd0c9bff560fa3c6d1e60d97644415e" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="base__controller__hardware__connector_8h_1ae4dfd42394001deb6e8a0e60c81d6f7a" kindref="member">HardwareType</ref><sp/><ref refid="classControllerHardwareConnector_1accd0c9bff560fa3c6d1e60d97644415e" kindref="member">getHardwareType</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classControllerHardwareConnector_1a1e47c12f796c9cc2fcb5c2495ede2392" kindref="member">hardware_type_</ref>;<sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="121" refid="classControllerHardwareConnector_1a3e69fcccb3826adbd02ea9f7f0740613" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="base__controller_8h_1addd69ea32460850b571ba88f2a994b73" kindref="member">ControllerStatus</ref><sp/><ref refid="classControllerHardwareConnector_1a3e69fcccb3826adbd02ea9f7f0740613" kindref="member">getStatus</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>boost::mutex::scoped_lock<sp/>lock(controller_status_mutex_);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status_;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classControllerHardwareConnector_1ad241af05eac639961a1b07fe7330f054" kindref="member">extractSensorData</ref>(SensorDataType<sp/>&amp;sensor_data)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classControllerHardwareConnector_1a5fc86156d5c747aba36497732962d6d0" kindref="member">sendHardwareCommands</ref>(ControlType<sp/>controls)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="151" refid="classControllerHardwareConnector_1a1e47c12f796c9cc2fcb5c2495ede2392" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="base__controller__hardware__connector_8h_1ae4dfd42394001deb6e8a0e60c81d6f7a" kindref="member">HardwareType</ref><sp/><ref refid="classControllerHardwareConnector_1a1e47c12f796c9cc2fcb5c2495ede2392" kindref="member">hardware_type_</ref>;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><ref refid="classController" kindref="compound">Controller&lt;SensorDataType, GoalType, ControlType&gt;</ref><sp/>&amp;controller_;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">mutable</highlight><highlight class="normal"><sp/>boost::mutex<sp/>controller_status_mutex_;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><ref refid="base__controller_8h_1addd69ea32460850b571ba88f2a994b73" kindref="member">ControllerStatus</ref><sp/>status_;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setStatus(<ref refid="base__controller_8h_1addd69ea32460850b571ba88f2a994b73" kindref="member">ControllerStatus</ref><sp/>status)<sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>boost::mutex::scoped_lock<sp/>lock(controller_status_mutex_);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>status_<sp/>=<sp/>status;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="175"><highlight class="normal">};</highlight></codeline>
    </programlisting>
    <location file="/home/gowtham/indigo_workspace/src/aerial_autonomy/include/aerial_autonomy/controller_hardware_connectors/base_controller_hardware_connector.h"/>
  </compounddef>
</doxygen>
