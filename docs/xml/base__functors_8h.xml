<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="base__functors_8h" kind="file">
    <compoundname>base_functors.h</compoundname>
    <includes local="no">type_traits</includes>
    <includes refid="internal__transition__event_8h" local="no">aerial_autonomy/types/internal_transition_event.h</includes>
    <includedby refid="arm__functors_8h" local="no">include/aerial_autonomy/actions_guards/arm_functors.h</includedby>
    <includedby refid="hovering__functors_8h" local="no">include/aerial_autonomy/actions_guards/hovering_functors.h</includedby>
    <includedby refid="land__functors_8h" local="no">include/aerial_autonomy/actions_guards/land_functors.h</includedby>
    <includedby refid="pick__place__functors_8h" local="no">include/aerial_autonomy/actions_guards/pick_place_functors.h</includedby>
    <includedby refid="position__control__functors_8h" local="no">include/aerial_autonomy/actions_guards/position_control_functors.h</includedby>
    <includedby refid="shorting__action__sequence_8h" local="no">include/aerial_autonomy/actions_guards/shorting_action_sequence.h</includedby>
    <includedby refid="takeoff__functors_8h" local="no">include/aerial_autonomy/actions_guards/takeoff_functors.h</includedby>
    <includedby refid="visual__servoing__functors_8h" local="no">include/aerial_autonomy/actions_guards/visual_servoing_functors.h</includedby>
    <includedby refid="base__state_8h" local="no">include/aerial_autonomy/logic_states/base_state.h</includedby>
    <includedby refid="common__system__handler_8h" local="no">include/aerial_autonomy/system_handlers/common_system_handler.h</includedby>
    <includedby refid="uav__arm__system__handler_8h" local="no">include/aerial_autonomy/system_handlers/uav_arm_system_handler.h</includedby>
    <includedby refid="uav__system__handler_8h" local="no">include/aerial_autonomy/system_handlers/uav_system_handler.h</includedby>
    <includedby refid="uav__vision__system__handler_8h" local="no">include/aerial_autonomy/system_handlers/uav_vision_system_handler.h</includedby>
    <incdepgraph>
      <node id="3958">
        <label>aerial_autonomy/types/internal_transition_event.h</label>
        <link refid="internal__transition__event_8h"/>
      </node>
      <node id="3956">
        <label>include/aerial_autonomy/actions_guards/base_functors.h</label>
        <link refid="base_functors.h"/>
        <childnode refid="3957" relation="include">
        </childnode>
        <childnode refid="3958" relation="include">
        </childnode>
      </node>
      <node id="3957">
        <label>type_traits</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3971">
        <label>include/aerial_autonomy/state_machines/uav_state_machine.h</label>
        <link refid="uav__state__machine_8h"/>
        <childnode refid="3972" relation="include">
        </childnode>
      </node>
      <node id="3965">
        <label>include/aerial_autonomy/actions_guards/pick_place_functors.h</label>
        <link refid="pick__place__functors_8h"/>
        <childnode refid="3961" relation="include">
        </childnode>
      </node>
      <node id="3964">
        <label>include/aerial_autonomy/actions_guards/hovering_functors.h</label>
        <link refid="hovering__functors_8h"/>
        <childnode refid="3965" relation="include">
        </childnode>
        <childnode refid="3966" relation="include">
        </childnode>
        <childnode refid="3967" relation="include">
        </childnode>
        <childnode refid="3973" relation="include">
        </childnode>
      </node>
      <node id="3972">
        <label>src/system_handler_nodes/uav_system_node.cpp</label>
        <link refid="uav__system__node_8cpp"/>
      </node>
      <node id="3976">
        <label>include/aerial_autonomy/actions_guards/takeoff_functors.h</label>
        <link refid="takeoff__functors_8h"/>
        <childnode refid="3967" relation="include">
        </childnode>
      </node>
      <node id="3981">
        <label>include/aerial_autonomy/system_handlers/uav_vision_system_handler.h</label>
        <link refid="uav__vision__system__handler_8h"/>
        <childnode refid="3970" relation="include">
        </childnode>
      </node>
      <node id="3962">
        <label>include/aerial_autonomy/state_machines/pick_place_state_machine.h</label>
        <link refid="pick__place__state__machine_8h"/>
        <childnode refid="3963" relation="include">
        </childnode>
      </node>
      <node id="3977">
        <label>include/aerial_autonomy/logic_states/base_state.h</label>
        <link refid="base__state_8h"/>
        <childnode refid="3960" relation="include">
        </childnode>
        <childnode refid="3964" relation="include">
        </childnode>
        <childnode refid="3974" relation="include">
        </childnode>
        <childnode refid="3965" relation="include">
        </childnode>
        <childnode refid="3966" relation="include">
        </childnode>
        <childnode refid="3976" relation="include">
        </childnode>
        <childnode refid="3973" relation="include">
        </childnode>
      </node>
      <node id="3960">
        <label>include/aerial_autonomy/actions_guards/arm_functors.h</label>
        <link refid="arm__functors_8h"/>
        <childnode refid="3961" relation="include">
        </childnode>
      </node>
      <node id="3975">
        <label>include/aerial_autonomy/actions_guards/shorting_action_sequence.h</label>
        <link refid="shorting__action__sequence_8h"/>
        <childnode refid="3965" relation="include">
        </childnode>
        <childnode refid="3966" relation="include">
        </childnode>
        <childnode refid="3973" relation="include">
        </childnode>
      </node>
      <node id="3961">
        <label>include/aerial_autonomy/actions_guards/pick_place_states_actions.h</label>
        <link refid="pick__place__states__actions_8h"/>
        <childnode refid="3962" relation="include">
        </childnode>
      </node>
      <node id="3970">
        <label>src/system_handler_nodes/uav_vision_system_node.cpp</label>
        <link refid="uav__vision__system__node_8cpp"/>
      </node>
      <node id="3980">
        <label>include/aerial_autonomy/system_handlers/uav_system_handler.h</label>
        <link refid="uav__system__handler_8h"/>
        <childnode refid="3972" relation="include">
        </childnode>
      </node>
      <node id="3968">
        <label>include/aerial_autonomy/actions_guards/visual_servoing_states_actions.h</label>
        <link refid="visual__servoing__states__actions_8h"/>
        <childnode refid="3961" relation="include">
        </childnode>
        <childnode refid="3969" relation="include">
        </childnode>
      </node>
      <node id="3973">
        <label>include/aerial_autonomy/actions_guards/visual_servoing_functors.h</label>
        <link refid="visual__servoing__functors_8h"/>
        <childnode refid="3968" relation="include">
        </childnode>
      </node>
      <node id="3978">
        <label>include/aerial_autonomy/system_handlers/common_system_handler.h</label>
        <link refid="common__system__handler_8h"/>
        <childnode refid="3979" relation="include">
        </childnode>
        <childnode refid="3980" relation="include">
        </childnode>
        <childnode refid="3981" relation="include">
        </childnode>
      </node>
      <node id="3967">
        <label>include/aerial_autonomy/actions_guards/uav_states_actions.h</label>
        <link refid="uav__states__actions_8h"/>
        <childnode refid="3968" relation="include">
        </childnode>
        <childnode refid="3971" relation="include">
        </childnode>
      </node>
      <node id="3966">
        <label>include/aerial_autonomy/actions_guards/position_control_functors.h</label>
        <link refid="position__control__functors_8h"/>
        <childnode refid="3967" relation="include">
        </childnode>
      </node>
      <node id="3974">
        <label>include/aerial_autonomy/actions_guards/land_functors.h</label>
        <link refid="land__functors_8h"/>
        <childnode refid="3967" relation="include">
        </childnode>
      </node>
      <node id="3959">
        <label>include/aerial_autonomy/actions_guards/base_functors.h</label>
        <link refid="base_functors.h"/>
        <childnode refid="3960" relation="include">
        </childnode>
        <childnode refid="3964" relation="include">
        </childnode>
        <childnode refid="3974" relation="include">
        </childnode>
        <childnode refid="3965" relation="include">
        </childnode>
        <childnode refid="3966" relation="include">
        </childnode>
        <childnode refid="3975" relation="include">
        </childnode>
        <childnode refid="3976" relation="include">
        </childnode>
        <childnode refid="3973" relation="include">
        </childnode>
        <childnode refid="3977" relation="include">
        </childnode>
        <childnode refid="3978" relation="include">
        </childnode>
        <childnode refid="3979" relation="include">
        </childnode>
        <childnode refid="3980" relation="include">
        </childnode>
        <childnode refid="3981" relation="include">
        </childnode>
      </node>
      <node id="3979">
        <label>include/aerial_autonomy/system_handlers/uav_arm_system_handler.h</label>
        <link refid="uav__arm__system__handler_8h"/>
        <childnode refid="3963" relation="include">
        </childnode>
      </node>
      <node id="3969">
        <label>include/aerial_autonomy/state_machines/visual_servoing_state_machine.h</label>
        <link refid="visual__servoing__state__machine_8h"/>
        <childnode refid="3970" relation="include">
        </childnode>
      </node>
      <node id="3963">
        <label>src/system_handler_nodes/uav_arm_system_node.cpp</label>
        <link refid="uav__arm__system__node_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structActionFunctor" prot="public">ActionFunctor</innerclass>
    <innerclass refid="structGuardFunctor" prot="public">GuardFunctor</innerclass>
    <innerclass refid="structEventAgnosticActionFunctor" prot="public">EventAgnosticActionFunctor</innerclass>
    <innerclass refid="structEventAgnosticGuardFunctor" prot="public">EventAgnosticGuardFunctor</innerclass>
    <innerclass refid="structInternalActionFunctor" prot="public">InternalActionFunctor</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight></codeline>
<codeline lineno="2"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Static<sp/>asserts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;type_traits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Internal<sp/>Transition<sp/>Event</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="internal__transition__event_8h" kindref="compound">aerial_autonomy/types/internal_transition_event.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>EventT,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>RobotSystemT,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>LogicStateMachineT&gt;</highlight></codeline>
<codeline lineno="20" refid="structActionFunctor" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structActionFunctor" kindref="compound">ActionFunctor</ref><sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structActionFunctor_1aaa710274291fc963032dcb29628781d5" kindref="member">run</ref>(EventT<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;event,<sp/>RobotSystemT<sp/>&amp;robot_system)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>FSM,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>SourceState,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>TargetState&gt;</highlight></codeline>
<codeline lineno="37" refid="structActionFunctor_1adbf24aea135ecf5a0d470b290a5cab02" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structActionFunctor_1adbf24aea135ecf5a0d470b290a5cab02" kindref="member">operator()</ref>(EventT<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;event,<sp/>FSM<sp/>&amp;logic_state_machine,<sp/>SourceState<sp/>&amp;,</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TargetState<sp/>&amp;)<sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>static_assert(</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::is_convertible&lt;decltype(</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logic_state_machine.robot_system_container_()),</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RobotSystemT<sp/>&amp;&gt;::value,</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Robot<sp/>system<sp/>in<sp/>logic<sp/>state<sp/>machine<sp/>is<sp/>not<sp/>the<sp/>same<sp/>as<sp/>one<sp/>used<sp/>in<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;action<sp/>functor&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>static_assert(</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::is_base_of&lt;FSM,<sp/>LogicStateMachineT&gt;::value,</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Template<sp/>Logic<sp/>state<sp/>machine<sp/>arg<sp/>is<sp/>not<sp/>subclass<sp/>of<sp/>provided<sp/>FSM&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structActionFunctor_1aaa710274291fc963032dcb29628781d5" kindref="member">run</ref>(event,<sp/>logic_state_machine.robot_system_container_());</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="structActionFunctor_1aaaa4c1ce7204b370be55f2ef4a618258" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="structActionFunctor_1aaaa4c1ce7204b370be55f2ef4a618258" kindref="member">~ActionFunctor</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="55"><highlight class="normal">};</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>EventT,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>RobotSystemT,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>LogicStateMachineT&gt;</highlight></codeline>
<codeline lineno="68" refid="structGuardFunctor" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structGuardFunctor" kindref="compound">GuardFunctor</ref><sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structGuardFunctor_1afdaf5f7aa07d6fcf2ed6289c799fa25d" kindref="member">guard</ref>(EventT<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;event,<sp/>RobotSystemT<sp/>&amp;robot_system)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>FSM,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>SourceState,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>TargetState&gt;</highlight></codeline>
<codeline lineno="85" refid="structGuardFunctor_1a42b30d1737ceca71bfe47a9bb525ceda" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structGuardFunctor_1a42b30d1737ceca71bfe47a9bb525ceda" kindref="member">operator()</ref>(EventT<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;event,<sp/>FSM<sp/>&amp;logic_state_machine,<sp/>SourceState<sp/>&amp;,</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TargetState<sp/>&amp;)<sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>static_assert(</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::is_convertible&lt;decltype(</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logic_state_machine.robot_system_container_()),</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RobotSystemT<sp/>&amp;&gt;::value,</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Robot<sp/>system<sp/>in<sp/>logic<sp/>state<sp/>machine<sp/>is<sp/>not<sp/>the<sp/>same<sp/>as<sp/>one<sp/>used<sp/>in<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;action<sp/>functor&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>static_assert(</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::is_base_of&lt;FSM,<sp/>LogicStateMachineT&gt;::value,</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Template<sp/>Logic<sp/>state<sp/>machine<sp/>arg<sp/>is<sp/>not<sp/>subclass<sp/>of<sp/>provided<sp/>FSM&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structGuardFunctor_1afdaf5f7aa07d6fcf2ed6289c799fa25d" kindref="member">guard</ref>(event,<sp/>logic_state_machine.robot_system_container_());</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="101" refid="structGuardFunctor_1a3876b6e5028dcdc35ac786322e8afca3" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="structGuardFunctor_1a3876b6e5028dcdc35ac786322e8afca3" kindref="member">~GuardFunctor</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="102"><highlight class="normal">};</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>RobotSystemT,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>LogicStateMachineT&gt;</highlight></codeline>
<codeline lineno="113" refid="structEventAgnosticActionFunctor" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structEventAgnosticActionFunctor" kindref="compound">EventAgnosticActionFunctor</ref><sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structEventAgnosticActionFunctor_1a44caf24e060c264ec6404dd5fc746481" kindref="member">run</ref>(RobotSystemT<sp/>&amp;robot_system)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>EventT,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>FSM,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>SourceState,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>TargetState&gt;</highlight></codeline>
<codeline lineno="128" refid="structEventAgnosticActionFunctor_1a3c0bcfed676d49c725ae987f37922534" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structEventAgnosticActionFunctor_1a3c0bcfed676d49c725ae987f37922534" kindref="member">operator()</ref>(EventT<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;,<sp/>FSM<sp/>&amp;logic_state_machine,<sp/>SourceState<sp/>&amp;,</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TargetState<sp/>&amp;)<sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>static_assert(</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::is_convertible&lt;decltype(</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logic_state_machine.robot_system_container_()),</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RobotSystemT<sp/>&amp;&gt;::value,</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Robot<sp/>system<sp/>in<sp/>logic<sp/>state<sp/>machine<sp/>is<sp/>not<sp/>the<sp/>same<sp/>as<sp/>one<sp/>used<sp/>in<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;action<sp/>functor&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>static_assert(</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::is_base_of&lt;FSM,<sp/>LogicStateMachineT&gt;::value,</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Template<sp/>Logic<sp/>state<sp/>machine<sp/>arg<sp/>is<sp/>not<sp/>subclass<sp/>of<sp/>provided<sp/>FSM&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structEventAgnosticActionFunctor_1a44caf24e060c264ec6404dd5fc746481" kindref="member">run</ref>(logic_state_machine.robot_system_container_());</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="145" refid="structEventAgnosticActionFunctor_1a446e93a5275bb3ba15f7f5577d06a0bf" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="structEventAgnosticActionFunctor_1a446e93a5275bb3ba15f7f5577d06a0bf" kindref="member">~EventAgnosticActionFunctor</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="146"><highlight class="normal">};</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>RobotSystemT,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>LogicStateMachineT&gt;</highlight></codeline>
<codeline lineno="157" refid="structEventAgnosticGuardFunctor" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structEventAgnosticGuardFunctor" kindref="compound">EventAgnosticGuardFunctor</ref><sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structEventAgnosticGuardFunctor_1a780ff422dd77c3091f7459159784d54e" kindref="member">guard</ref>(RobotSystemT<sp/>&amp;robot_system)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>EventT,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>FSM,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>SourceState,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>TargetState&gt;</highlight></codeline>
<codeline lineno="172" refid="structEventAgnosticGuardFunctor_1a775411c4c4e0815298200f895af3c02b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structEventAgnosticGuardFunctor_1a775411c4c4e0815298200f895af3c02b" kindref="member">operator()</ref>(EventT<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;,<sp/>FSM<sp/>&amp;logic_state_machine,<sp/>SourceState<sp/>&amp;,</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TargetState<sp/>&amp;)<sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>static_assert(</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::is_convertible&lt;decltype(</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logic_state_machine.robot_system_container_()),</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RobotSystemT<sp/>&amp;&gt;::value,</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Robot<sp/>system<sp/>in<sp/>logic<sp/>state<sp/>machine<sp/>is<sp/>not<sp/>the<sp/>same<sp/>as<sp/>one<sp/>used<sp/>in<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;action<sp/>functor&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>static_assert(</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::is_base_of&lt;FSM,<sp/>LogicStateMachineT&gt;::value,</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Template<sp/>Logic<sp/>state<sp/>machine<sp/>arg<sp/>is<sp/>not<sp/>subclass<sp/>of<sp/>provided<sp/>FSM&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structEventAgnosticGuardFunctor_1a780ff422dd77c3091f7459159784d54e" kindref="member">guard</ref>(logic_state_machine.robot_system_container_());</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="189" refid="structEventAgnosticGuardFunctor_1aa339ada7b22b27bc6d384445d109f4e6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="structEventAgnosticGuardFunctor_1aa339ada7b22b27bc6d384445d109f4e6" kindref="member">~EventAgnosticGuardFunctor</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="190"><highlight class="normal">};</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>RobotSystemT,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>LogicStateMachineT&gt;</highlight></codeline>
<codeline lineno="208" refid="structInternalActionFunctor" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structInternalActionFunctor" kindref="compound">InternalActionFunctor</ref><sp/>{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structInternalActionFunctor_1acb286e73f21393549a4fff4920c83349" kindref="member">run</ref>(RobotSystemT<sp/>&amp;robot_system,</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogicStateMachineT<sp/>&amp;logic_state_machine)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>EventT,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>FSM,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>SourceState,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>TargetState&gt;</highlight></codeline>
<codeline lineno="229" refid="structInternalActionFunctor_1a08544be6541497aca6b06309312c4bf3" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structInternalActionFunctor_1a08544be6541497aca6b06309312c4bf3" kindref="member">operator()</ref>(EventT<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;,<sp/>FSM<sp/>&amp;logic_state_machine,<sp/>SourceState<sp/>&amp;,</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TargetState<sp/>&amp;)<sp/>{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>static_assert(</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::is_convertible&lt;decltype(</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logic_state_machine.robot_system_container_()),</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RobotSystemT<sp/>&amp;&gt;::value,</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Robot<sp/>system<sp/>in<sp/>logic<sp/>state<sp/>machine<sp/>is<sp/>not<sp/>the<sp/>same<sp/>as<sp/>one<sp/>used<sp/>in<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;action<sp/>functor&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>static_assert(</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::is_base_of&lt;FSM,<sp/>LogicStateMachineT&gt;::value,</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Template<sp/>Logic<sp/>state<sp/>machine<sp/>arg<sp/>is<sp/>not<sp/>subclass<sp/>of<sp/>provided<sp/>FSM&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>LogicStateMachineT<sp/>*logic_state_machine_cast<sp/>=</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">LogicStateMachineT<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(&amp;logic_state_machine);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structInternalActionFunctor_1acb286e73f21393549a4fff4920c83349" kindref="member">run</ref>(logic_state_machine.robot_system_container_(),</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*logic_state_machine_cast);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="249" refid="structInternalActionFunctor_1ac742ec395f7f9251738ab5cb12bd5329" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="structInternalActionFunctor_1ac742ec395f7f9251738ab5cb12bd5329" kindref="member">~InternalActionFunctor</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="250"><highlight class="normal">};</highlight></codeline>
    </programlisting>
    <location file="/home/matt/catkin_ws/src/aerial_autonomy/include/aerial_autonomy/actions_guards/base_functors.h"/>
  </compounddef>
</doxygen>
