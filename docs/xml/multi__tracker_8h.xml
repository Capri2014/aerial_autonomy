<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="multi__tracker_8h" kind="file">
    <compoundname>multi_tracker.h</compoundname>
    <includes refid="base__tracker_8h" local="yes">aerial_autonomy/trackers/base_tracker.h</includes>
    <includes refid="closest__tracking__strategy_8h" local="yes">aerial_autonomy/trackers/closest_tracking_strategy.h</includes>
    <includes local="no">memory</includes>
    <includes local="no">tuple</includes>
    <includes local="no">vector</includes>
    <includedby refid="multi__tracker_8cpp" local="yes">src/trackers/multi_tracker.cpp</includedby>
    <includedby refid="alvar__tracker_8h" local="yes">include/aerial_autonomy/trackers/alvar_tracker.h</includedby>
    <includedby refid="simple__multi__tracker_8h" local="yes">include/aerial_autonomy/trackers/simple_multi_tracker.h</includedby>
    <incdepgraph>
      <node id="5581">
        <label>cmath</label>
      </node>
      <node id="5584">
        <label>tuple</label>
      </node>
      <node id="5585">
        <label>vector</label>
      </node>
      <node id="5582">
        <label>aerial_autonomy/trackers/closest_tracking_strategy.h</label>
        <link refid="closest__tracking__strategy_8h"/>
        <childnode refid="5583" relation="include">
        </childnode>
      </node>
      <node id="5579">
        <label>aerial_autonomy/trackers/base_tracker.h</label>
        <link refid="base__tracker_8h"/>
        <childnode refid="5580" relation="include">
        </childnode>
      </node>
      <node id="5583">
        <label>aerial_autonomy/trackers/tracking_strategy.h</label>
        <link refid="tracking__strategy_8h"/>
        <childnode refid="5580" relation="include">
        </childnode>
        <childnode refid="5584" relation="include">
        </childnode>
        <childnode refid="5585" relation="include">
        </childnode>
      </node>
      <node id="5580">
        <label>aerial_autonomy/types/position.h</label>
        <link refid="position_8h"/>
        <childnode refid="5581" relation="include">
        </childnode>
      </node>
      <node id="5578">
        <label>include/aerial_autonomy/trackers/multi_tracker.h</label>
        <link refid="multi_tracker.h"/>
        <childnode refid="5579" relation="include">
        </childnode>
        <childnode refid="5582" relation="include">
        </childnode>
        <childnode refid="5586" relation="include">
        </childnode>
        <childnode refid="5584" relation="include">
        </childnode>
        <childnode refid="5585" relation="include">
        </childnode>
      </node>
      <node id="5586">
        <label>memory</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="5592">
        <label>src/trackers/simple_multi_tracker.cpp</label>
        <link refid="simple__multi__tracker_8cpp"/>
      </node>
      <node id="5591">
        <label>include/aerial_autonomy/trackers/simple_multi_tracker.h</label>
        <link refid="simple__multi__tracker_8h"/>
        <childnode refid="5592" relation="include">
        </childnode>
      </node>
      <node id="5590">
        <label>src/trackers/alvar_tracker.cpp</label>
        <link refid="alvar__tracker_8cpp"/>
      </node>
      <node id="5588">
        <label>src/trackers/multi_tracker.cpp</label>
        <link refid="multi__tracker_8cpp"/>
      </node>
      <node id="5589">
        <label>include/aerial_autonomy/trackers/alvar_tracker.h</label>
        <link refid="alvar__tracker_8h"/>
        <childnode refid="5590" relation="include">
        </childnode>
      </node>
      <node id="5587">
        <label>include/aerial_autonomy/trackers/multi_tracker.h</label>
        <link refid="multi_tracker.h"/>
        <childnode refid="5588" relation="include">
        </childnode>
        <childnode refid="5589" relation="include">
        </childnode>
        <childnode refid="5591" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classMultiTracker" prot="public">MultiTracker</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight></codeline>
<codeline lineno="2"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="base__tracker_8h" kindref="compound">aerial_autonomy/trackers/base_tracker.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="closest__tracking__strategy_8h" kindref="compound">aerial_autonomy/trackers/closest_tracking_strategy.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;tuple&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="12" refid="classMultiTracker" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classMultiTracker" kindref="compound">MultiTracker</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classBaseTracker" kindref="compound">BaseTracker</ref><sp/>{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="17" refid="classMultiTracker_1a2600241043bf014b1065569e1167f698" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="classMultiTracker_1a2600241043bf014b1065569e1167f698" kindref="member">TrackingStrategyType</ref><sp/>{<sp/><ref refid="classMultiTracker_1a2600241043bf014b1065569e1167f698a3457a7a7ff431a42c5b20e4225d5371b" kindref="member">CLOSEST</ref><sp/>};</highlight></codeline>
<codeline lineno="21" refid="classMultiTracker_1a3df61f3d0a32915e2635549fe4966d6b" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classMultiTracker_1a3df61f3d0a32915e2635549fe4966d6b" kindref="member">MultiTracker</ref>()<sp/>:<sp/>tracking_strategy_(new<sp/><ref refid="classClosestTrackingStrategy" kindref="compound">ClosestTrackingStrategy</ref>())<sp/>{}</highlight></codeline>
<codeline lineno="26" refid="classMultiTracker_1a9d09cc3d5145adfe9cf8e3cbe8f95196" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classMultiTracker_1a9d09cc3d5145adfe9cf8e3cbe8f95196" kindref="member">MultiTracker</ref>(<ref refid="classMultiTracker_1a2600241043bf014b1065569e1167f698" kindref="member">TrackingStrategyType</ref><sp/>tracking_strategy)<sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(tracking_strategy)<sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>(<ref refid="classMultiTracker_1a2600241043bf014b1065569e1167f698a3457a7a7ff431a42c5b20e4225d5371b" kindref="member">CLOSEST</ref>):</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tracking_strategy_.reset(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classClosestTrackingStrategy" kindref="compound">ClosestTrackingStrategy</ref>());</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classMultiTracker_1a2339f56422e36670157fc054635491d4" kindref="member">getTrackingVector</ref>(<ref refid="structPosition" kindref="compound">Position</ref><sp/>&amp;pos);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classMultiTracker_1a2339f56422e36670157fc054635491d4" kindref="member">getTrackingVector</ref>(std::tuple&lt;uint32_t,<sp/>Position&gt;<sp/>&amp;pos);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><ref refid="classMultiTracker_1a370e7d1b955e703e47745843ea23065c" kindref="member">getTrackingVectors</ref>(std::vector&lt;std::tuple&lt;uint32_t,<sp/>Position&gt;&gt;<sp/>&amp;pos)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classMultiTracker_1a1e8b12d365afae30d55cb69cb08384ec" kindref="member">trackingIsValid</ref>()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classMultiTracker_1a466d37ddae888b987be680585aff72b0" kindref="member">initialize</ref>();</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>std::unique_ptr&lt;TrackingStrategy&gt;<sp/>tracking_strategy_;</highlight></codeline>
<codeline lineno="69"><highlight class="normal">};</highlight></codeline>
    </programlisting>
    <location file="/home/matt/catkin_ws/src/aerial_autonomy/include/aerial_autonomy/trackers/multi_tracker.h"/>
  </compounddef>
</doxygen>
