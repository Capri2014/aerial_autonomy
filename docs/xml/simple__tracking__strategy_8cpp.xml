<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="simple__tracking__strategy_8cpp" kind="file">
    <compoundname>simple_tracking_strategy.cpp</compoundname>
    <includes refid="simple__tracking__strategy_8h" local="yes">aerial_autonomy/trackers/simple_tracking_strategy.h</includes>
    <incdepgraph>
      <node id="7836">
        <label>src/trackers/simple_tracking_strategy.cpp</label>
        <link refid="simple_tracking_strategy.cpp"/>
        <childnode refid="7837" relation="include">
        </childnode>
      </node>
      <node id="7840">
        <label>cmath</label>
      </node>
      <node id="7841">
        <label>tuple</label>
      </node>
      <node id="7837">
        <label>aerial_autonomy/trackers/simple_tracking_strategy.h</label>
        <link refid="simple__tracking__strategy_8h"/>
        <childnode refid="7838" relation="include">
        </childnode>
      </node>
      <node id="7842">
        <label>unordered_map</label>
      </node>
      <node id="7838">
        <label>aerial_autonomy/trackers/tracking_strategy.h</label>
        <link refid="tracking__strategy_8h"/>
        <childnode refid="7839" relation="include">
        </childnode>
        <childnode refid="7841" relation="include">
        </childnode>
        <childnode refid="7842" relation="include">
        </childnode>
      </node>
      <node id="7839">
        <label>aerial_autonomy/types/position.h</label>
        <link refid="position_8h"/>
        <childnode refid="7840" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="simple__tracking__strategy_8h" kindref="compound">aerial_autonomy/trackers/simple_tracking_strategy.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classSimpleTrackingStrategy_1a56888cb26db19a19a6de55910fd4e2de" kindref="member">SimpleTrackingStrategy::initialize</ref>(</highlight></codeline>
<codeline lineno="4"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::unordered_map&lt;uint32_t,<sp/>Position&gt;<sp/>&amp;tracking_vectors)<sp/>{</highlight></codeline>
<codeline lineno="5"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classSimpleTrackingStrategy_1a42d2ba4f7c7fbfe7c3041fc351ce7f55" kindref="member">SimpleTrackingStrategy::getTrackingVector</ref>(</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::unordered_map&lt;uint32_t,<sp/>Position&gt;<sp/>&amp;tracking_vectors,</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/>std::tuple&lt;uint32_t,<sp/>Position&gt;<sp/>&amp;tracking_vector)<sp/>{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tracking_vectors.empty())<sp/>{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>first_vector<sp/>=<sp/>tracking_vectors.begin();</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/>tracking_vector<sp/>=<sp/>std::make_tuple(first_vector-&gt;first,<sp/>first_vector-&gt;second);</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="18"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/matt/catkin_ws/src/aerial_autonomy/src/trackers/simple_tracking_strategy.cpp"/>
  </compounddef>
</doxygen>
