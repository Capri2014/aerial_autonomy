<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="takeoff__functors_8h" kind="file">
    <compoundname>takeoff_functors.h</compoundname>
    <includes refid="base__functors_8h" local="no">aerial_autonomy/actions_guards/base_functors.h</includes>
    <includes refid="base__state_8h" local="no">aerial_autonomy/logic_states/base_state.h</includes>
    <includes refid="uav__system_8h" local="no">aerial_autonomy/robot_systems/uav_system.h</includes>
    <includes refid="completed__event_8h" local="no">aerial_autonomy/types/completed_event.h</includes>
    <includes local="no">aerial_autonomy/uav_basic_events.h</includes>
    <includes local="no">glog/logging.h</includes>
    <includes local="no">parsernode/common.h</includes>
    <includedby refid="uav__states__actions_8h" local="no">include/aerial_autonomy/actions_guards/uav_states_actions.h</includedby>
    <incdepgraph>
      <node id="1119">
        <label>boost/thread/mutex.hpp</label>
      </node>
      <node id="1128">
        <label>aerial_autonomy/controller_hardware_connectors/basic_controller_hardware_connectors.h</label>
        <link refid="basic__controller__hardware__connectors_8h"/>
        <childnode refid="1129" relation="include">
        </childnode>
        <childnode refid="1133" relation="include">
        </childnode>
        <childnode refid="1134" relation="include">
        </childnode>
      </node>
      <node id="1135">
        <label>aerial_autonomy/types/position_yaw.h</label>
        <link refid="position__yaw_8h"/>
        <childnode refid="1136" relation="include">
        </childnode>
      </node>
      <node id="1143">
        <label>glog/logging.h</label>
      </node>
      <node id="1112">
        <label>aerial_autonomy/logic_states/base_state.h</label>
        <link refid="base__state_8h"/>
        <childnode refid="1113" relation="include">
        </childnode>
        <childnode refid="1114" relation="include">
        </childnode>
        <childnode refid="1110" relation="include">
        </childnode>
        <childnode refid="1111" relation="include">
        </childnode>
      </node>
      <node id="1126">
        <label>aerial_autonomy/types/joysticks.h</label>
        <link refid="joysticks_8h"/>
      </node>
      <node id="1118">
        <label>aerial_autonomy/controllers/base_controller.h</label>
        <link refid="base__controller_8h"/>
        <childnode refid="1119" relation="include">
        </childnode>
      </node>
      <node id="1114">
        <label>boost/msm/front/state_machine_def.hpp</label>
      </node>
      <node id="1110">
        <label>aerial_autonomy/actions_guards/base_functors.h</label>
        <link refid="base__functors_8h"/>
        <childnode refid="1111" relation="include">
        </childnode>
      </node>
      <node id="1120">
        <label>aerial_autonomy/controllers/basic_controllers.h</label>
        <link refid="basic__controllers_8h"/>
        <childnode refid="1121" relation="include">
        </childnode>
        <childnode refid="1123" relation="include">
        </childnode>
      </node>
      <node id="1121">
        <label>aerial_autonomy/controllers/builtin_controller.h</label>
        <link refid="builtin__controller_8h"/>
        <childnode refid="1118" relation="include">
        </childnode>
        <childnode refid="1122" relation="include">
        </childnode>
      </node>
      <node id="1141">
        <label>aerial_autonomy/types/completed_event.h</label>
        <link refid="completed__event_8h"/>
      </node>
      <node id="1144">
        <label>parsernode/common.h</label>
      </node>
      <node id="1137">
        <label>aerial_autonomy/common/type_map.h</label>
        <link refid="type__map_8h"/>
        <childnode refid="1138" relation="include">
        </childnode>
        <childnode refid="1139" relation="include">
        </childnode>
      </node>
      <node id="1124">
        <label>aerial_autonomy/types/empty_goal.h</label>
        <link refid="empty__goal_8h"/>
      </node>
      <node id="1134">
        <label>aerial_autonomy/controller_hardware_connectors/position_controller_drone_connector.h</label>
        <link refid="position__controller__drone__connector_8h"/>
        <childnode refid="1117" relation="include">
        </childnode>
        <childnode refid="1122" relation="include">
        </childnode>
        <childnode refid="1135" relation="include">
        </childnode>
        <childnode refid="1132" relation="include">
        </childnode>
      </node>
      <node id="1130">
        <label>aerial_autonomy/types/velocity_yaw.h</label>
        <link refid="velocity__yaw_8h"/>
        <childnode refid="1131" relation="include">
        </childnode>
      </node>
      <node id="1122">
        <label>aerial_autonomy/types/empty_sensor.h</label>
        <link refid="empty__sensor_8h"/>
      </node>
      <node id="1129">
        <label>aerial_autonomy/controller_hardware_connectors/builtin_velocity_controller_drone_connector.h</label>
        <link refid="builtin__velocity__controller__drone__connector_8h"/>
        <childnode refid="1117" relation="include">
        </childnode>
        <childnode refid="1122" relation="include">
        </childnode>
        <childnode refid="1130" relation="include">
        </childnode>
        <childnode refid="1132" relation="include">
        </childnode>
      </node>
      <node id="1131">
        <label>aerial_autonomy/types/velocity.h</label>
        <link refid="velocity_8h"/>
      </node>
      <node id="1123">
        <label>aerial_autonomy/controllers/manual_rpyt_controller.h</label>
        <link refid="manual__rpyt__controller_8h"/>
        <childnode refid="1118" relation="include">
        </childnode>
        <childnode refid="1124" relation="include">
        </childnode>
        <childnode refid="1125" relation="include">
        </childnode>
        <childnode refid="1127" relation="include">
        </childnode>
      </node>
      <node id="1133">
        <label>aerial_autonomy/controller_hardware_connectors/manual_rpyt_controller_drone_connector.h</label>
        <link refid="manual__rpyt__controller__drone__connector_8h"/>
        <childnode refid="1117" relation="include">
        </childnode>
        <childnode refid="1124" relation="include">
        </childnode>
        <childnode refid="1125" relation="include">
        </childnode>
        <childnode refid="1127" relation="include">
        </childnode>
        <childnode refid="1132" relation="include">
        </childnode>
      </node>
      <node id="1113">
        <label>boost/msm/front/functor_row.hpp</label>
      </node>
      <node id="1125">
        <label>aerial_autonomy/types/joysticks_yaw.h</label>
        <link refid="joysticks__yaw_8h"/>
        <childnode refid="1126" relation="include">
        </childnode>
      </node>
      <node id="1139">
        <label>unordered_map</label>
      </node>
      <node id="1117">
        <label>aerial_autonomy/controller_hardware_connectors/base_controller_hardware_connector.h</label>
        <link refid="base__controller__hardware__connector_8h"/>
        <childnode refid="1118" relation="include">
        </childnode>
      </node>
      <node id="1127">
        <label>aerial_autonomy/types/roll_pitch_yaw_thrust.h</label>
        <link refid="roll__pitch__yaw__thrust_8h"/>
      </node>
      <node id="1111">
        <label>type_traits</label>
      </node>
      <node id="1136">
        <label>aerial_autonomy/types/position.h</label>
        <link refid="position_8h"/>
      </node>
      <node id="1115">
        <label>aerial_autonomy/robot_systems/uav_system.h</label>
        <link refid="uav__system_8h"/>
        <childnode refid="1116" relation="include">
        </childnode>
        <childnode refid="1117" relation="include">
        </childnode>
        <childnode refid="1120" relation="include">
        </childnode>
        <childnode refid="1128" relation="include">
        </childnode>
        <childnode refid="1137" relation="include">
        </childnode>
        <childnode refid="1119" relation="include">
        </childnode>
        <childnode refid="1140" relation="include">
        </childnode>
      </node>
      <node id="1116">
        <label>uav_system_config.pb.h</label>
      </node>
      <node id="1132">
        <label>parsernode/parser.h</label>
      </node>
      <node id="1142">
        <label>aerial_autonomy/uav_basic_events.h</label>
      </node>
      <node id="1140">
        <label>memory</label>
      </node>
      <node id="1138">
        <label>typeindex</label>
      </node>
      <node id="1109">
        <label>include/aerial_autonomy/actions_guards/takeoff_functors.h</label>
        <link refid="takeoff_functors.h"/>
        <childnode refid="1110" relation="include">
        </childnode>
        <childnode refid="1112" relation="include">
        </childnode>
        <childnode refid="1115" relation="include">
        </childnode>
        <childnode refid="1141" relation="include">
        </childnode>
        <childnode refid="1142" relation="include">
        </childnode>
        <childnode refid="1143" relation="include">
        </childnode>
        <childnode refid="1144" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1146">
        <label>include/aerial_autonomy/actions_guards/uav_states_actions.h</label>
        <link refid="uav__states__actions_8h"/>
        <childnode refid="1147" relation="include">
        </childnode>
      </node>
      <node id="1148">
        <label>src/system_handler_nodes/uav_system_node.cpp</label>
        <link refid="uav__system__node_8cpp"/>
      </node>
      <node id="1147">
        <label>include/aerial_autonomy/state_machines/uav_state_machine.h</label>
        <link refid="uav__state__machine_8h"/>
        <childnode refid="1148" relation="include">
        </childnode>
      </node>
      <node id="1145">
        <label>include/aerial_autonomy/actions_guards/takeoff_functors.h</label>
        <link refid="takeoff_functors.h"/>
        <childnode refid="1146" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structTakeoffTransitionActionFunctor__" prot="public">TakeoffTransitionActionFunctor_</innerclass>
    <innerclass refid="structTakeoffAbortActionFunctor__" prot="public">TakeoffAbortActionFunctor_</innerclass>
    <innerclass refid="structTakeoffTransitionGuardFunctor__" prot="public">TakeoffTransitionGuardFunctor_</innerclass>
    <innerclass refid="structTakeoffInternalActionFunctor__" prot="public">TakeoffInternalActionFunctor_</innerclass>
    <innernamespace refid="namespaceuav__basic__events">uav_basic_events</innernamespace>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="takeoff__functors_8h_1ab6710f3cb12b7653eedcd3a2215d3228" prot="public" static="no">
        <type><ref refid="classBaseState" kindref="compound">BaseState</ref>&lt; <ref refid="classUAVSystem" kindref="compound">UAVSystem</ref>, LogicStateMachineT, <ref refid="structTakeoffInternalActionFunctor__" kindref="compound">TakeoffInternalActionFunctor_</ref>&lt; LogicStateMachineT &gt;&gt;</type>
        <definition>using TakingOff_ =  BaseState&lt;UAVSystem, LogicStateMachineT, TakeoffInternalActionFunctor_&lt;LogicStateMachineT&gt;&gt;</definition>
        <argsstring></argsstring>
        <name>TakingOff_</name>
        <briefdescription>
<para>Taking off state that uses the internal action functor. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>LogicStateMachineT</parametername>
</parameternamelist>
<parameterdescription>
<para>Logic state machine used to process events </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/gowtham/indigo_workspace/src/aerial_autonomy/include/aerial_autonomy/actions_guards/takeoff_functors.h" line="107" column="1" bodyfile="/home/gowtham/indigo_workspace/src/aerial_autonomy/include/aerial_autonomy/actions_guards/takeoff_functors.h" bodystart="108" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight></codeline>
<codeline lineno="2"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="base__functors_8h" kindref="compound">aerial_autonomy/actions_guards/base_functors.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="base__state_8h" kindref="compound">aerial_autonomy/logic_states/base_state.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="uav__system_8h" kindref="compound">aerial_autonomy/robot_systems/uav_system.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="completed__event_8h" kindref="compound">aerial_autonomy/types/completed_event.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;aerial_autonomy/uav_basic_events.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;glog/logging.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;parsernode/common.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">uav_basic_events;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>LogicStateMachineT&gt;</highlight></codeline>
<codeline lineno="21" refid="structTakeoffTransitionActionFunctor__" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structTakeoffTransitionActionFunctor__" kindref="compound">TakeoffTransitionActionFunctor_</ref></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="structEventAgnosticActionFunctor" kindref="compound">EventAgnosticActionFunctor</ref>&lt;UAVSystem,<sp/>LogicStateMachineT&gt;<sp/>{</highlight></codeline>
<codeline lineno="23" refid="structTakeoffTransitionActionFunctor___1aaf8ba8ac8cf0f07e2978da244b5efb2b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structTakeoffTransitionActionFunctor___1aaf8ba8ac8cf0f07e2978da244b5efb2b" kindref="member">run</ref>(<ref refid="classUAVSystem" kindref="compound">UAVSystem</ref><sp/>&amp;robot_system,<sp/>LogicStateMachineT<sp/>&amp;)<sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>VLOG(1)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Takingoff!&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>robot_system.<ref refid="classUAVSystem_1a7f010477b67bfeb5d6d32c0f10630b8e" kindref="member">takeOff</ref>();</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="27"><highlight class="normal">};</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>LogicStateMachineT&gt;</highlight></codeline>
<codeline lineno="35" refid="structTakeoffAbortActionFunctor__" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structTakeoffAbortActionFunctor__" kindref="compound">TakeoffAbortActionFunctor_</ref></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="structEventAgnosticActionFunctor" kindref="compound">EventAgnosticActionFunctor</ref>&lt;UAVSystem,<sp/>LogicStateMachineT&gt;<sp/>{</highlight></codeline>
<codeline lineno="37" refid="structTakeoffAbortActionFunctor___1a8366919888a54d029b3856c3a433843d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structTakeoffAbortActionFunctor___1a8366919888a54d029b3856c3a433843d" kindref="member">run</ref>(<ref refid="classUAVSystem" kindref="compound">UAVSystem</ref><sp/>&amp;robot_system,<sp/>LogicStateMachineT<sp/>&amp;)<sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>VLOG(1)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Aborting<sp/>Takeoff!&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>robot_system.<ref refid="classUAVSystem_1ae1bac31ca121a54cb1e3ed7fac322993" kindref="member">land</ref>();</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="41"><highlight class="normal">};</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>LogicStateMachineT&gt;</highlight></codeline>
<codeline lineno="49" refid="structTakeoffTransitionGuardFunctor__" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structTakeoffTransitionGuardFunctor__" kindref="compound">TakeoffTransitionGuardFunctor_</ref></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="structEventAgnosticGuardFunctor" kindref="compound">EventAgnosticGuardFunctor</ref>&lt;UAVSystem,<sp/>LogicStateMachineT&gt;<sp/>{</highlight></codeline>
<codeline lineno="51" refid="structTakeoffTransitionGuardFunctor___1abef370db0002076671a6f9c2adb9bbaa" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structTakeoffTransitionGuardFunctor___1abef370db0002076671a6f9c2adb9bbaa" kindref="member">guard</ref>(<ref refid="classUAVSystem" kindref="compound">UAVSystem</ref><sp/>&amp;robot_system,<sp/>LogicStateMachineT<sp/>&amp;)<sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>parsernode::common::quaddata<sp/>data<sp/>=<sp/>robot_system.<ref refid="classUAVSystem_1a8a1cbcd8770841ee2a30365f4a75bf34" kindref="member">getUAVData</ref>();</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>for<sp/>voltage</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data.batterypercent<sp/>&gt;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>robot_system.<ref refid="classUAVSystem_1a89d67e42aec09dd65a23f39462a8202e" kindref="member">getConfiguration</ref>().minimum_battery_percent())<sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LOG(WARNING)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Battery<sp/>too<sp/>low!<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>data.batterypercent</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\%<sp/>SoCannot<sp/>takeoff&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal">};</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>LogicStateMachineT&gt;</highlight></codeline>
<codeline lineno="72" refid="structTakeoffInternalActionFunctor__" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structTakeoffInternalActionFunctor__" kindref="compound">TakeoffInternalActionFunctor_</ref></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="structEventAgnosticActionFunctor" kindref="compound">EventAgnosticActionFunctor</ref>&lt;UAVSystem,<sp/>LogicStateMachineT&gt;<sp/>{</highlight></codeline>
<codeline lineno="84" refid="structTakeoffInternalActionFunctor___1a2118df6e326662cd0088344499e49696" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structTakeoffInternalActionFunctor___1a2118df6e326662cd0088344499e49696" kindref="member">run</ref>(<ref refid="classUAVSystem" kindref="compound">UAVSystem</ref><sp/>&amp;robot_system,<sp/>LogicStateMachineT<sp/>&amp;logic_state_machine)<sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>parsernode::common::quaddata<sp/>data<sp/>=<sp/>robot_system.<ref refid="classUAVSystem_1a8a1cbcd8770841ee2a30365f4a75bf34" kindref="member">getUAVData</ref>();</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>battery<sp/>too<sp/>low<sp/>abort<sp/>and<sp/>goto<sp/>landed<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data.batterypercent<sp/>&lt;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>robot_system.<ref refid="classUAVSystem_1a89d67e42aec09dd65a23f39462a8202e" kindref="member">getConfiguration</ref>().minimum_battery_percent())<sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LOG(WARNING)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Battery<sp/>too<sp/>low!<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>data.batterypercent</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\%<sp/>Aborting<sp/>takeoff&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>logic_state_machine.process_event(Land());</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data.localpos.z<sp/>&gt;=</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Transition<sp/>to<sp/>hovering<sp/>state<sp/>once<sp/>reached<sp/>high<sp/>altitude</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>robot_system.<ref refid="classUAVSystem_1a89d67e42aec09dd65a23f39462a8202e" kindref="member">getConfiguration</ref>().minimum_takeoff_height())<sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>VLOG(1)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Completed<sp/>Takeoff&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>logic_state_machine.process_event(<ref refid="structCompleted" kindref="compound">Completed</ref>());</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal">};</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>LogicStateMachineT&gt;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classBaseState" kindref="compound">TakingOff_</ref><sp/>=<sp/><ref refid="classBaseState" kindref="compound">BaseState</ref>&lt;<ref refid="classUAVSystem" kindref="compound">UAVSystem</ref>,<sp/>LogicStateMachineT,</highlight></codeline>
<codeline lineno="108" refid="takeoff__functors_8h_1ab6710f3cb12b7653eedcd3a2215d3228" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structTakeoffInternalActionFunctor__" kindref="compound">TakeoffInternalActionFunctor_&lt;LogicStateMachineT&gt;</ref>&gt;;</highlight></codeline>
    </programlisting>
    <location file="/home/gowtham/indigo_workspace/src/aerial_autonomy/include/aerial_autonomy/actions_guards/takeoff_functors.h"/>
  </compounddef>
</doxygen>
