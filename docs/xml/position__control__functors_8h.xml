<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="position__control__functors_8h" kind="file">
    <compoundname>position_control_functors.h</compoundname>
    <includes refid="base__functors_8h" local="no">aerial_autonomy/actions_guards/base_functors.h</includes>
    <includes refid="position__controller__drone__connector_8h" local="no">aerial_autonomy/controller_hardware_connectors/position_controller_drone_connector.h</includes>
    <includes refid="base__state_8h" local="no">aerial_autonomy/logic_states/base_state.h</includes>
    <includes refid="uav__system_8h" local="no">aerial_autonomy/robot_systems/uav_system.h</includes>
    <includes refid="completed__event_8h" local="no">aerial_autonomy/types/completed_event.h</includes>
    <includes local="no">aerial_autonomy/uav_basic_events.h</includes>
    <includes local="no">glog/logging.h</includes>
    <includes local="no">parsernode/common.h</includes>
    <includedby refid="uav__states__actions_8h" local="no">include/aerial_autonomy/actions_guards/uav_states_actions.h</includedby>
    <incdepgraph>
      <node id="1075">
        <label>boost/thread/mutex.hpp</label>
      </node>
      <node id="1092">
        <label>aerial_autonomy/controller_hardware_connectors/basic_controller_hardware_connectors.h</label>
        <link refid="basic__controller__hardware__connectors_8h"/>
        <childnode refid="1093" relation="include">
        </childnode>
        <childnode refid="1096" relation="include">
        </childnode>
        <childnode refid="1072" relation="include">
        </childnode>
      </node>
      <node id="1077">
        <label>aerial_autonomy/types/position_yaw.h</label>
        <link refid="position__yaw_8h"/>
        <childnode refid="1078" relation="include">
        </childnode>
      </node>
      <node id="1103">
        <label>glog/logging.h</label>
      </node>
      <node id="1080">
        <label>aerial_autonomy/logic_states/base_state.h</label>
        <link refid="base__state_8h"/>
        <childnode refid="1081" relation="include">
        </childnode>
        <childnode refid="1082" relation="include">
        </childnode>
        <childnode refid="1070" relation="include">
        </childnode>
        <childnode refid="1071" relation="include">
        </childnode>
      </node>
      <node id="1090">
        <label>aerial_autonomy/types/joysticks.h</label>
        <link refid="joysticks_8h"/>
      </node>
      <node id="1074">
        <label>aerial_autonomy/controllers/base_controller.h</label>
        <link refid="base__controller_8h"/>
        <childnode refid="1075" relation="include">
        </childnode>
      </node>
      <node id="1082">
        <label>boost/msm/front/state_machine_def.hpp</label>
      </node>
      <node id="1070">
        <label>aerial_autonomy/actions_guards/base_functors.h</label>
        <link refid="base__functors_8h"/>
        <childnode refid="1071" relation="include">
        </childnode>
      </node>
      <node id="1085">
        <label>aerial_autonomy/controllers/basic_controllers.h</label>
        <link refid="basic__controllers_8h"/>
        <childnode refid="1086" relation="include">
        </childnode>
        <childnode refid="1087" relation="include">
        </childnode>
      </node>
      <node id="1069">
        <label>include/aerial_autonomy/actions_guards/position_control_functors.h</label>
        <link refid="position_control_functors.h"/>
        <childnode refid="1070" relation="include">
        </childnode>
        <childnode refid="1072" relation="include">
        </childnode>
        <childnode refid="1080" relation="include">
        </childnode>
        <childnode refid="1083" relation="include">
        </childnode>
        <childnode refid="1101" relation="include">
        </childnode>
        <childnode refid="1102" relation="include">
        </childnode>
        <childnode refid="1103" relation="include">
        </childnode>
        <childnode refid="1104" relation="include">
        </childnode>
      </node>
      <node id="1086">
        <label>aerial_autonomy/controllers/builtin_controller.h</label>
        <link refid="builtin__controller_8h"/>
        <childnode refid="1074" relation="include">
        </childnode>
        <childnode refid="1076" relation="include">
        </childnode>
      </node>
      <node id="1101">
        <label>aerial_autonomy/types/completed_event.h</label>
        <link refid="completed__event_8h"/>
      </node>
      <node id="1104">
        <label>parsernode/common.h</label>
      </node>
      <node id="1097">
        <label>aerial_autonomy/common/type_map.h</label>
        <link refid="type__map_8h"/>
        <childnode refid="1098" relation="include">
        </childnode>
        <childnode refid="1099" relation="include">
        </childnode>
      </node>
      <node id="1088">
        <label>aerial_autonomy/types/empty_goal.h</label>
        <link refid="empty__goal_8h"/>
      </node>
      <node id="1072">
        <label>aerial_autonomy/controller_hardware_connectors/position_controller_drone_connector.h</label>
        <link refid="position__controller__drone__connector_8h"/>
        <childnode refid="1073" relation="include">
        </childnode>
        <childnode refid="1076" relation="include">
        </childnode>
        <childnode refid="1077" relation="include">
        </childnode>
        <childnode refid="1079" relation="include">
        </childnode>
      </node>
      <node id="1094">
        <label>aerial_autonomy/types/velocity_yaw.h</label>
        <link refid="velocity__yaw_8h"/>
        <childnode refid="1095" relation="include">
        </childnode>
      </node>
      <node id="1076">
        <label>aerial_autonomy/types/empty_sensor.h</label>
        <link refid="empty__sensor_8h"/>
      </node>
      <node id="1093">
        <label>aerial_autonomy/controller_hardware_connectors/builtin_velocity_controller_drone_connector.h</label>
        <link refid="builtin__velocity__controller__drone__connector_8h"/>
        <childnode refid="1073" relation="include">
        </childnode>
        <childnode refid="1076" relation="include">
        </childnode>
        <childnode refid="1094" relation="include">
        </childnode>
        <childnode refid="1079" relation="include">
        </childnode>
      </node>
      <node id="1095">
        <label>aerial_autonomy/types/velocity.h</label>
        <link refid="velocity_8h"/>
      </node>
      <node id="1087">
        <label>aerial_autonomy/controllers/manual_rpyt_controller.h</label>
        <link refid="manual__rpyt__controller_8h"/>
        <childnode refid="1074" relation="include">
        </childnode>
        <childnode refid="1088" relation="include">
        </childnode>
        <childnode refid="1089" relation="include">
        </childnode>
        <childnode refid="1091" relation="include">
        </childnode>
      </node>
      <node id="1096">
        <label>aerial_autonomy/controller_hardware_connectors/manual_rpyt_controller_drone_connector.h</label>
        <link refid="manual__rpyt__controller__drone__connector_8h"/>
        <childnode refid="1073" relation="include">
        </childnode>
        <childnode refid="1088" relation="include">
        </childnode>
        <childnode refid="1089" relation="include">
        </childnode>
        <childnode refid="1091" relation="include">
        </childnode>
        <childnode refid="1079" relation="include">
        </childnode>
      </node>
      <node id="1081">
        <label>boost/msm/front/functor_row.hpp</label>
      </node>
      <node id="1089">
        <label>aerial_autonomy/types/joysticks_yaw.h</label>
        <link refid="joysticks__yaw_8h"/>
        <childnode refid="1090" relation="include">
        </childnode>
      </node>
      <node id="1099">
        <label>unordered_map</label>
      </node>
      <node id="1073">
        <label>aerial_autonomy/controller_hardware_connectors/base_controller_hardware_connector.h</label>
        <link refid="base__controller__hardware__connector_8h"/>
        <childnode refid="1074" relation="include">
        </childnode>
      </node>
      <node id="1091">
        <label>aerial_autonomy/types/roll_pitch_yaw_thrust.h</label>
        <link refid="roll__pitch__yaw__thrust_8h"/>
      </node>
      <node id="1071">
        <label>type_traits</label>
      </node>
      <node id="1078">
        <label>aerial_autonomy/types/position.h</label>
        <link refid="position_8h"/>
      </node>
      <node id="1083">
        <label>aerial_autonomy/robot_systems/uav_system.h</label>
        <link refid="uav__system_8h"/>
        <childnode refid="1084" relation="include">
        </childnode>
        <childnode refid="1073" relation="include">
        </childnode>
        <childnode refid="1085" relation="include">
        </childnode>
        <childnode refid="1092" relation="include">
        </childnode>
        <childnode refid="1097" relation="include">
        </childnode>
        <childnode refid="1075" relation="include">
        </childnode>
        <childnode refid="1100" relation="include">
        </childnode>
      </node>
      <node id="1084">
        <label>uav_system_config.pb.h</label>
      </node>
      <node id="1079">
        <label>parsernode/parser.h</label>
      </node>
      <node id="1102">
        <label>aerial_autonomy/uav_basic_events.h</label>
      </node>
      <node id="1100">
        <label>memory</label>
      </node>
      <node id="1098">
        <label>typeindex</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1106">
        <label>include/aerial_autonomy/actions_guards/uav_states_actions.h</label>
        <link refid="uav__states__actions_8h"/>
        <childnode refid="1107" relation="include">
        </childnode>
      </node>
      <node id="1108">
        <label>src/system_handler_nodes/uav_system_node.cpp</label>
        <link refid="uav__system__node_8cpp"/>
      </node>
      <node id="1105">
        <label>include/aerial_autonomy/actions_guards/position_control_functors.h</label>
        <link refid="position_control_functors.h"/>
        <childnode refid="1106" relation="include">
        </childnode>
      </node>
      <node id="1107">
        <label>include/aerial_autonomy/state_machines/uav_state_machine.h</label>
        <link refid="uav__state__machine_8h"/>
        <childnode refid="1108" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structPositionControlTransitionActionFunctor__" prot="public">PositionControlTransitionActionFunctor_</innerclass>
    <innerclass refid="structPositionControlAbortActionFunctor__" prot="public">PositionControlAbortActionFunctor_</innerclass>
    <innerclass refid="structPositionControlTransitionGuardFunctor__" prot="public">PositionControlTransitionGuardFunctor_</innerclass>
    <innerclass refid="structPositionControlInternalActionFunctor__" prot="public">PositionControlInternalActionFunctor_</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="position__control__functors_8h_1af380346c24b534da18813f70217ea50f" prot="public" static="no">
        <type><ref refid="classBaseState" kindref="compound">BaseState</ref>&lt; <ref refid="classUAVSystem" kindref="compound">UAVSystem</ref>, LogicStateMachineT, <ref refid="structPositionControlInternalActionFunctor__" kindref="compound">PositionControlInternalActionFunctor_</ref>&lt; LogicStateMachineT &gt;&gt;</type>
        <definition>using ReachingGoal_ =  BaseState&lt;UAVSystem, LogicStateMachineT, PositionControlInternalActionFunctor_&lt;LogicStateMachineT&gt;&gt;</definition>
        <argsstring></argsstring>
        <name>ReachingGoal_</name>
        <briefdescription>
<para>State that uses position control functor to reach a desired goal. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>LogicStateMachineT</parametername>
</parameternamelist>
<parameterdescription>
<para>Logic state machine used to process events </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/gowtham/indigo_workspace/src/aerial_autonomy/include/aerial_autonomy/actions_guards/position_control_functors.h" line="118" column="1" bodyfile="/home/gowtham/indigo_workspace/src/aerial_autonomy/include/aerial_autonomy/actions_guards/position_control_functors.h" bodystart="120" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight></codeline>
<codeline lineno="2"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="base__functors_8h" kindref="compound">aerial_autonomy/actions_guards/base_functors.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="position__controller__drone__connector_8h" kindref="compound">aerial_autonomy/controller_hardware_connectors/position_controller_drone_connector.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="base__state_8h" kindref="compound">aerial_autonomy/logic_states/base_state.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="uav__system_8h" kindref="compound">aerial_autonomy/robot_systems/uav_system.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="completed__event_8h" kindref="compound">aerial_autonomy/types/completed_event.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;aerial_autonomy/uav_basic_events.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;glog/logging.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;parsernode/common.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">be<sp/>=<sp/>uav_basic_events;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>LogicStateMachineT&gt;</highlight></codeline>
<codeline lineno="19" refid="structPositionControlTransitionActionFunctor__" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structPositionControlTransitionActionFunctor__" kindref="compound">PositionControlTransitionActionFunctor_</ref></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="structActionFunctor" kindref="compound">ActionFunctor</ref>&lt;PositionYaw,<sp/>UAVSystem,<sp/>LogicStateMachineT&gt;<sp/>{</highlight></codeline>
<codeline lineno="21" refid="structPositionControlTransitionActionFunctor___1a4970bb461809ffa30984e16902bb8aaa" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structPositionControlTransitionActionFunctor___1a4970bb461809ffa30984e16902bb8aaa" kindref="member">run</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structPositionYaw" kindref="compound">PositionYaw</ref><sp/>&amp;goal,<sp/><ref refid="classUAVSystem" kindref="compound">UAVSystem</ref><sp/>&amp;robot_system,</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogicStateMachineT<sp/>&amp;)<sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>robot_system.<ref refid="classUAVSystem_1a6aae5b94424be17ed6bafeaa4f64f416" kindref="member">setGoal</ref>&lt;<ref refid="classPositionControllerDroneConnector" kindref="compound">PositionControllerDroneConnector</ref>,<sp/><ref refid="structPositionYaw" kindref="compound">PositionYaw</ref>&gt;(goal);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="25"><highlight class="normal">};</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>LogicStateMachineT&gt;</highlight></codeline>
<codeline lineno="33" refid="structPositionControlAbortActionFunctor__" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structPositionControlAbortActionFunctor__" kindref="compound">PositionControlAbortActionFunctor_</ref></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="structEventAgnosticActionFunctor" kindref="compound">EventAgnosticActionFunctor</ref>&lt;UAVSystem,<sp/>LogicStateMachineT&gt;<sp/>{</highlight></codeline>
<codeline lineno="35" refid="structPositionControlAbortActionFunctor___1a04152d311e51abb5b330ee74b3c29702" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structPositionControlAbortActionFunctor___1a04152d311e51abb5b330ee74b3c29702" kindref="member">run</ref>(<ref refid="classUAVSystem" kindref="compound">UAVSystem</ref><sp/>&amp;robot_system,<sp/>LogicStateMachineT<sp/>&amp;)<sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>LOG(WARNING)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Aborting<sp/>Position<sp/>Controller&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>robot_system.<ref refid="classUAVSystem_1a90634eb2ac4c515c9065ce85cc21dc19" kindref="member">abortController</ref>(<ref refid="base__controller__hardware__connector_8h_1ae4dfd42394001deb6e8a0e60c81d6f7aa6902d76cea698982754404da77e5e08a" kindref="member">HardwareType::UAV</ref>);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="39"><highlight class="normal">};</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>LogicStateMachineT&gt;</highlight></codeline>
<codeline lineno="50" refid="structPositionControlTransitionGuardFunctor__" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structPositionControlTransitionGuardFunctor__" kindref="compound">PositionControlTransitionGuardFunctor_</ref></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="structGuardFunctor" kindref="compound">GuardFunctor</ref>&lt;PositionYaw,<sp/>UAVSystem,<sp/>LogicStateMachineT&gt;<sp/>{</highlight></codeline>
<codeline lineno="52" refid="structPositionControlTransitionGuardFunctor___1ad0334337a349f9964d0ba781e995dad6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structPositionControlTransitionGuardFunctor___1ad0334337a349f9964d0ba781e995dad6" kindref="member">guard</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structPositionYaw" kindref="compound">PositionYaw</ref><sp/>&amp;goal,<sp/><ref refid="classUAVSystem" kindref="compound">UAVSystem</ref><sp/>&amp;robot_system,</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogicStateMachineT<sp/>&amp;)<sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>parsernode::common::quaddata<sp/>data<sp/>=<sp/>robot_system.<ref refid="classUAVSystem_1a8a1cbcd8770841ee2a30365f4a75bf34" kindref="member">getUAVData</ref>();</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>geometry_msgs::Vector3<sp/>current_position<sp/>=<sp/>data.localpos;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>goal<sp/>is<sp/>close<sp/>to<sp/>position<sp/>before<sp/>sending<sp/>goal<sp/>(Can<sp/>use<sp/>a<sp/>geofence</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>here)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;tolerance_pos<sp/>=</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>robot_system.<ref refid="classUAVSystem_1a89d67e42aec09dd65a23f39462a8202e" kindref="member">getConfiguration</ref>().max_goal_distance();</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::abs(current_position.x<sp/>-<sp/>goal.<ref refid="structPosition_1a9abbe738bad177de91fe4774099c1260" kindref="member">x</ref>)<sp/>&gt;<sp/>tolerance_pos<sp/>||</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::abs(current_position.y<sp/>-<sp/>goal.<ref refid="structPosition_1a75f48c2a1d2c7131b8be1a0687ae72c8" kindref="member">y</ref>)<sp/>&gt;<sp/>tolerance_pos<sp/>||</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::abs(current_position.z<sp/>-<sp/>goal.<ref refid="structPosition_1ab26043bc2f8f6094818c17dd44e43228" kindref="member">z</ref>)<sp/>&gt;<sp/>tolerance_pos)<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LOG(WARNING)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Goal<sp/>not<sp/>within<sp/>the<sp/>position<sp/>tolerance&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal">};</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>LogicStateMachineT&gt;</highlight></codeline>
<codeline lineno="77" refid="structPositionControlInternalActionFunctor__" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structPositionControlInternalActionFunctor__" kindref="compound">PositionControlInternalActionFunctor_</ref></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="structEventAgnosticActionFunctor" kindref="compound">EventAgnosticActionFunctor</ref>&lt;UAVSystem,<sp/>LogicStateMachineT&gt;<sp/>{</highlight></codeline>
<codeline lineno="85" refid="structPositionControlInternalActionFunctor___1a81589e5ecfba853969942b9842ac1563" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structPositionControlInternalActionFunctor___1a81589e5ecfba853969942b9842ac1563" kindref="member">run</ref>(<ref refid="classUAVSystem" kindref="compound">UAVSystem</ref><sp/>&amp;robot_system,</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogicStateMachineT<sp/>&amp;logic_state_machine)<sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>current<sp/>goal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structPositionYaw" kindref="compound">PositionYaw</ref><sp/>goal<sp/>=</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>robot_system.<ref refid="classUAVSystem_1a5381ca45049c8c92e872a80a2974339b" kindref="member">getGoal</ref>&lt;<ref refid="classPositionControllerDroneConnector" kindref="compound">PositionControllerDroneConnector</ref>,<sp/><ref refid="structPositionYaw" kindref="compound">PositionYaw</ref>&gt;();</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>current<sp/>position,<sp/>yaw</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>parsernode::common::quaddata<sp/>data<sp/>=<sp/>robot_system.<ref refid="classUAVSystem_1a8a1cbcd8770841ee2a30365f4a75bf34" kindref="member">getUAVData</ref>();</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>geometry_msgs::Vector3<sp/>current_position<sp/>=<sp/>data.localpos;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>yaw<sp/>=<sp/>data.rpydata.z;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Define<sp/>tolerance<sp/>and<sp/>check<sp/>if<sp/>reached<sp/>goal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;robot_config<sp/>=<sp/>robot_system.<ref refid="classUAVSystem_1a89d67e42aec09dd65a23f39462a8202e" kindref="member">getConfiguration</ref>();</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;tolerance_pos<sp/>=<sp/>robot_config.goal_position_tolerance();<sp/></highlight><highlight class="comment">//<sp/>m</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;tolerance_yaw<sp/>=<sp/>robot_config.goal_yaw_tolerance();<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>m</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data.batterypercent<sp/>&lt;<sp/>robot_config.minimum_battery_percent())<sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LOG(WARNING)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Battery<sp/>too<sp/>low<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>data.batterypercent</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\%<sp/>Landing!&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>logic_state_machine.process_event(be::Land());</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::abs(current_position.x<sp/>-<sp/>goal.<ref refid="structPosition_1a9abbe738bad177de91fe4774099c1260" kindref="member">x</ref>)<sp/>&lt;<sp/>tolerance_pos<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::abs(current_position.y<sp/>-<sp/>goal.<ref refid="structPosition_1a75f48c2a1d2c7131b8be1a0687ae72c8" kindref="member">y</ref>)<sp/>&lt;<sp/>tolerance_pos<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::abs(current_position.z<sp/>-<sp/>goal.<ref refid="structPosition_1ab26043bc2f8f6094818c17dd44e43228" kindref="member">z</ref>)<sp/>&lt;<sp/>tolerance_pos<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::abs(yaw<sp/>-<sp/>goal.<ref refid="structPositionYaw_1a712a15ba9739cb5f4e31ea973074b8bf" kindref="member">yaw</ref>)<sp/>&lt;<sp/>tolerance_yaw)<sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>VLOG(1)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Reached<sp/>goal&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>logic_state_machine.process_event(<ref refid="structCompleted" kindref="compound">Completed</ref>());</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal">};</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>LogicStateMachineT&gt;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classBaseState" kindref="compound">ReachingGoal_</ref><sp/>=</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classBaseState" kindref="compound">BaseState</ref>&lt;<ref refid="classUAVSystem" kindref="compound">UAVSystem</ref>,<sp/>LogicStateMachineT,</highlight></codeline>
<codeline lineno="120" refid="position__control__functors_8h_1af380346c24b534da18813f70217ea50f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structPositionControlInternalActionFunctor__" kindref="compound">PositionControlInternalActionFunctor_&lt;LogicStateMachineT&gt;</ref>&gt;;</highlight></codeline>
    </programlisting>
    <location file="/home/gowtham/indigo_workspace/src/aerial_autonomy/include/aerial_autonomy/actions_guards/position_control_functors.h"/>
  </compounddef>
</doxygen>
