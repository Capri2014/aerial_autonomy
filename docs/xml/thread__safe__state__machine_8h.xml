<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="thread__safe__state__machine_8h" kind="file">
    <compoundname>thread_safe_state_machine.h</compoundname>
    <includes local="no">boost/msm/back/state_machine.hpp</includes>
    <includes local="no">boost/thread/recursive_mutex.hpp</includes>
    <includedby refid="basic__state__machine_8h" local="no">include/aerial_autonomy/state_machines/basic_state_machine.h</includedby>
    <incdepgraph>
      <node id="1196">
        <label>boost/thread/recursive_mutex.hpp</label>
      </node>
      <node id="1195">
        <label>boost/msm/back/state_machine.hpp</label>
      </node>
      <node id="1194">
        <label>include/aerial_autonomy/common/thread_safe_state_machine.h</label>
        <link refid="thread_safe_state_machine.h"/>
        <childnode refid="1195" relation="include">
        </childnode>
        <childnode refid="1196" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1199">
        <label>src/aerial_autonomy_node.cpp</label>
        <link refid="aerial__autonomy__node_8cpp"/>
      </node>
      <node id="1198">
        <label>include/aerial_autonomy/state_machines/basic_state_machine.h</label>
        <link refid="basic__state__machine_8h"/>
        <childnode refid="1199" relation="include">
        </childnode>
      </node>
      <node id="1197">
        <label>include/aerial_autonomy/common/thread_safe_state_machine.h</label>
        <link refid="thread_safe_state_machine.h"/>
        <childnode refid="1198" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classboost_1_1msm_1_1back_1_1thread__safe__state__machine" prot="public">boost::msm::back::thread_safe_state_machine</innerclass>
    <innernamespace refid="namespaceboost">boost</innernamespace>
    <innernamespace refid="namespaceboost_1_1msm">boost::msm</innernamespace>
    <innernamespace refid="namespaceboost_1_1msm_1_1back">boost::msm::back</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight></codeline>
<codeline lineno="2"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/msm/back/state_machine.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/thread/recursive_mutex.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="9" refid="namespaceboost" refkind="compound"><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">boost<sp/>{</highlight></codeline>
<codeline lineno="13" refid="namespaceboost_1_1msm" refkind="compound"><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">msm<sp/>{</highlight></codeline>
<codeline lineno="17" refid="namespaceboost_1_1msm_1_1back" refkind="compound"><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">back<sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">A0,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">A1<sp/>=<sp/>parameter::void_,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">A2<sp/>=<sp/>parameter::void_,</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">A3<sp/>=<sp/>parameter::void_,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">A4<sp/>=<sp/>parameter::void_&gt;</highlight></codeline>
<codeline lineno="24" refid="classboost_1_1msm_1_1back_1_1thread__safe__state__machine" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classboost_1_1msm_1_1back_1_1thread__safe__state__machine" kindref="compound">thread_safe_state_machine</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>state_machine&lt;A0,<sp/>A1,<sp/>A2,<sp/>A3,<sp/>A4&gt;<sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/>boost::recursive_mutex</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>process_event_mutex_;<sp/></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="30" refid="classboost_1_1msm_1_1back_1_1thread__safe__state__machine_1a5b5a31229aed12a1f7036b8b46de0884" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classboost_1_1msm_1_1back_1_1thread__safe__state__machine" kindref="compound">thread_safe_state_machine&lt;A0, A1, A2, A3, A4&gt;</ref>()</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>state_machine&lt;A0,<sp/>A1,<sp/>A2,<sp/>A3,<sp/>A4&gt;()<sp/>{}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Expr&gt;</highlight></codeline>
<codeline lineno="34" refid="classboost_1_1msm_1_1back_1_1thread__safe__state__machine_1ad8d554411680bddd9959406c42407c25" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classboost_1_1msm_1_1back_1_1thread__safe__state__machine" kindref="compound">thread_safe_state_machine&lt;A0, A1, A2, A3, A4&gt;</ref>(Expr<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;expr)</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>state_machine&lt;A0,<sp/>A1,<sp/>A2,<sp/>A3,<sp/>A4&gt;(expr)<sp/>{}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>all<sp/>state<sp/>machines<sp/>are<sp/>friend<sp/>with<sp/>each<sp/>other<sp/>to<sp/>allow<sp/>embedding<sp/>any<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>them<sp/>in<sp/>another<sp/>fsm</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="40" refid="classboost_1_1msm_1_1back_1_1thread__safe__state__machine_1a83a2deae1f2169f1234e430beb3b8a95" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classboost_1_1msm_1_1back_1_1thread__safe__state__machine_1a83a2deae1f2169f1234e430beb3b8a95" kindref="member">boost::msm::back::state_machine</ref>;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="43" refid="classboost_1_1msm_1_1back_1_1thread__safe__state__machine_1a3306dad625847fa2192b045a7789ca5f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classboost_1_1msm_1_1back_1_1thread__safe__state__machine" kindref="compound">boost::msm::back::thread_safe_state_machine</ref>;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="classboost_1_1msm_1_1back_1_1thread__safe__state__machine_1a9f38e619a54ce414c4ef737e8873928d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Event&gt;<sp/>execute_return<sp/><ref refid="classboost_1_1msm_1_1back_1_1thread__safe__state__machine_1a9f38e619a54ce414c4ef737e8873928d" kindref="member">process_event</ref>(Event<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;evt)<sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>recursive_mutex::scoped_lock<sp/>lock(process_event_mutex_);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;process_event_internal(evt,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal">};</highlight></codeline>
<codeline lineno="61"><highlight class="normal">}</highlight></codeline>
<codeline lineno="62"><highlight class="normal">}</highlight></codeline>
<codeline lineno="63"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>boost::msm::back</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/gowtham/indigo_workspace/src/aerial_autonomy/include/aerial_autonomy/common/thread_safe_state_machine.h"/>
  </compounddef>
</doxygen>
