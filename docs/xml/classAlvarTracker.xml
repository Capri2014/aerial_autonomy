<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="classAlvarTracker" kind="class" prot="public">
    <compoundname>AlvarTracker</compoundname>
    <basecompoundref refid="classBaseTracker" prot="public" virt="non-virtual">BaseTracker</basecompoundref>
    <includes refid="alvar__tracker_8h" local="no">alvar_tracker.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classAlvarTracker_1a1b9a1115a5ded2c72adfd9f02fbf6563" prot="private" static="no" mutable="no">
        <type>ros::NodeHandle</type>
        <definition>ros::NodeHandle AlvarTracker::nh_</definition>
        <argsstring></argsstring>
        <name>nh_</name>
        <briefdescription>
<para>ROS node handle for communication. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/matt/catkin_ws/src/aerial_autonomy/include/aerial_autonomy/trackers/alvar_tracker.h" line="52" column="1" bodyfile="/home/matt/catkin_ws/src/aerial_autonomy/include/aerial_autonomy/trackers/alvar_tracker.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classAlvarTracker_1ac1af099e1aee5c179eb0b2c6fda8de5f" prot="private" static="no" mutable="no">
        <type>ros::Subscriber</type>
        <definition>ros::Subscriber AlvarTracker::alvar_sub_</definition>
        <argsstring></argsstring>
        <name>alvar_sub_</name>
        <briefdescription>
<para>Marker subscriber. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/matt/catkin_ws/src/aerial_autonomy/include/aerial_autonomy/trackers/alvar_tracker.h" line="56" column="1" bodyfile="/home/matt/catkin_ws/src/aerial_autonomy/include/aerial_autonomy/trackers/alvar_tracker.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classAlvarTracker_1aad756e21998359504b60cbfa376afabc" prot="private" static="no" mutable="no">
        <type><ref refid="classAtomic" kindref="compound">Atomic</ref>&lt; ros::Time &gt;</type>
        <definition>Atomic&lt;ros::Time&gt; AlvarTracker::last_valid_time_</definition>
        <argsstring></argsstring>
        <name>last_valid_time_</name>
        <briefdescription>
<para>Last time we received a non-empty Alvar message. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/matt/catkin_ws/src/aerial_autonomy/include/aerial_autonomy/trackers/alvar_tracker.h" line="60" column="1" bodyfile="/home/matt/catkin_ws/src/aerial_autonomy/include/aerial_autonomy/trackers/alvar_tracker.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classAlvarTracker_1aee75d15858bd109b202d4a9b45fb1be7" prot="private" static="no" mutable="no">
        <type><ref refid="classAtomic" kindref="compound">Atomic</ref>&lt; std::unordered_map&lt; uint32_t, <ref refid="structPosition" kindref="compound">Position</ref> &gt; &gt;</type>
        <definition>Atomic&lt;std::unordered_map&lt;uint32_t, Position&gt; &gt; AlvarTracker::object_positions_</definition>
        <argsstring></argsstring>
        <name>object_positions_</name>
        <briefdescription>
<para>Stored tracking position. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/matt/catkin_ws/src/aerial_autonomy/include/aerial_autonomy/trackers/alvar_tracker.h" line="64" column="1" bodyfile="/home/matt/catkin_ws/src/aerial_autonomy/include/aerial_autonomy/trackers/alvar_tracker.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classAlvarTracker_1ae249591754389cb67e72f89829689aac" prot="private" static="no" mutable="no">
        <type>const double</type>
        <definition>const double AlvarTracker::timeout_</definition>
        <argsstring></argsstring>
        <name>timeout_</name>
        <briefdescription>
<para>Timeout for valid update. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/matt/catkin_ws/src/aerial_autonomy/include/aerial_autonomy/trackers/alvar_tracker.h" line="68" column="1" bodyfile="/home/matt/catkin_ws/src/aerial_autonomy/include/aerial_autonomy/trackers/alvar_tracker.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classAlvarTracker_1a711f920384bcfbddf8a8788ce0970fd4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>AlvarTracker::AlvarTracker</definition>
        <argsstring>(ros::NodeHandle &amp;nh)</argsstring>
        <name>AlvarTracker</name>
        <param>
          <type>ros::NodeHandle &amp;</type>
          <declname>nh</declname>
        </param>
        <briefdescription>
<para>Constructor. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>nh</parametername>
</parameternamelist>
<parameterdescription>
<para>ROS node handle for comms </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/matt/catkin_ws/src/aerial_autonomy/include/aerial_autonomy/trackers/alvar_tracker.h" line="19" column="1" bodyfile="/home/matt/catkin_ws/src/aerial_autonomy/include/aerial_autonomy/trackers/alvar_tracker.h" bodystart="19" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="classAlvarTracker_1ad062d376d6795020d712f4cf4bfffeaf" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool AlvarTracker::getTrackingVectors</definition>
        <argsstring>(std::unordered_map&lt; uint32_t, Position &gt; &amp;pos)</argsstring>
        <name>getTrackingVectors</name>
        <reimplements refid="classBaseTracker_1a20360b084ef9b2df755854c274a73f2b">getTrackingVectors</reimplements>
        <param>
          <type>std::unordered_map&lt; uint32_t, <ref refid="structPosition" kindref="compound">Position</ref> &gt; &amp;</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
<para>Get the tracking vectors. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>Returned tracking vectors </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if successful, false otherwise </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/matt/catkin_ws/src/aerial_autonomy/include/aerial_autonomy/trackers/alvar_tracker.h" line="29" column="1" bodyfile="/home/matt/catkin_ws/src/aerial_autonomy/src/trackers/alvar_tracker.cpp" bodystart="5" bodyend="12"/>
      </memberdef>
      <memberdef kind="function" id="classAlvarTracker_1aacf6b19dbc6100dc4ee5f367b744c91d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool AlvarTracker::trackingIsValid</definition>
        <argsstring>()</argsstring>
        <name>trackingIsValid</name>
        <reimplements refid="classBaseTracker_1aa1ad8436be9476278e78142ee1ab8fd6">trackingIsValid</reimplements>
        <briefdescription>
<para>Check whether tracking is valid. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>True if the tracking is valid, false otherwise </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/matt/catkin_ws/src/aerial_autonomy/include/aerial_autonomy/trackers/alvar_tracker.h" line="34" column="1" bodyfile="/home/matt/catkin_ws/src/aerial_autonomy/src/trackers/alvar_tracker.cpp" bodystart="14" bodyend="19"/>
      </memberdef>
      <memberdef kind="function" id="classAlvarTracker_1ada5aac5daf5800a4e21d42e7c20b7e52" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool AlvarTracker::isConnected</definition>
        <argsstring>()</argsstring>
        <name>isConnected</name>
        <briefdescription>
<para>Check if subscriber is connected. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>True if connected, false otherwise </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/matt/catkin_ws/src/aerial_autonomy/include/aerial_autonomy/trackers/alvar_tracker.h" line="40" column="1" bodyfile="/home/matt/catkin_ws/src/aerial_autonomy/src/trackers/alvar_tracker.cpp" bodystart="36" bodyend="36"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classAlvarTracker_1a354d2d82541ab8c3eab428c17445dccf" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void AlvarTracker::markerCallback</definition>
        <argsstring>(const ar_track_alvar_msgs::AlvarMarkers &amp;marker_msg)</argsstring>
        <name>markerCallback</name>
        <param>
          <type>const ar_track_alvar_msgs::AlvarMarkers &amp;</type>
          <declname>marker_msg</declname>
        </param>
        <briefdescription>
<para>Marker subscriber callback. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>marker_msg</parametername>
</parameternamelist>
<parameterdescription>
<para>Marker message </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/matt/catkin_ws/src/aerial_autonomy/include/aerial_autonomy/trackers/alvar_tracker.h" line="47" column="1" bodyfile="/home/matt/catkin_ws/src/aerial_autonomy/src/trackers/alvar_tracker.cpp" bodystart="21" bodyend="34"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Provides vector to a tracked object based on output from alvar. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="524">
        <label>AlvarTracker</label>
        <link refid="classAlvarTracker"/>
        <childnode refid="525" relation="public-inheritance">
        </childnode>
      </node>
      <node id="525">
        <label>BaseTracker</label>
        <link refid="classBaseTracker"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="526">
        <label>AlvarTracker</label>
        <link refid="classAlvarTracker"/>
        <childnode refid="527" relation="public-inheritance">
        </childnode>
      </node>
      <node id="527">
        <label>BaseTracker</label>
        <link refid="classBaseTracker"/>
      </node>
    </collaborationgraph>
    <location file="/home/matt/catkin_ws/src/aerial_autonomy/include/aerial_autonomy/trackers/alvar_tracker.h" line="13" column="1" bodyfile="/home/matt/catkin_ws/src/aerial_autonomy/include/aerial_autonomy/trackers/alvar_tracker.h" bodystart="13" bodyend="69"/>
    <listofallmembers>
      <member refid="classAlvarTracker_1ac1af099e1aee5c179eb0b2c6fda8de5f" prot="private" virt="non-virtual"><scope>AlvarTracker</scope><name>alvar_sub_</name></member>
      <member refid="classAlvarTracker_1a711f920384bcfbddf8a8788ce0970fd4" prot="public" virt="non-virtual"><scope>AlvarTracker</scope><name>AlvarTracker</name></member>
      <member refid="classBaseTracker_1a49ac5731fce16acb5ca1fb069d2a0091" prot="public" virt="non-virtual"><scope>AlvarTracker</scope><name>BaseTracker</name></member>
      <member refid="classBaseTracker_1a705369e65f51447798bb19e979de9801" prot="public" virt="virtual"><scope>AlvarTracker</scope><name>getTrackingVector</name></member>
      <member refid="classBaseTracker_1a931a8c84fc6245d3d6cb3ef9967032a5" prot="public" virt="virtual"><scope>AlvarTracker</scope><name>getTrackingVector</name></member>
      <member refid="classAlvarTracker_1ad062d376d6795020d712f4cf4bfffeaf" prot="public" virt="virtual"><scope>AlvarTracker</scope><name>getTrackingVectors</name></member>
      <member refid="classBaseTracker_1ad1a6497933830415ee97d9ea2d2706af" prot="public" virt="virtual"><scope>AlvarTracker</scope><name>initialize</name></member>
      <member refid="classAlvarTracker_1ada5aac5daf5800a4e21d42e7c20b7e52" prot="public" virt="non-virtual"><scope>AlvarTracker</scope><name>isConnected</name></member>
      <member refid="classAlvarTracker_1aad756e21998359504b60cbfa376afabc" prot="private" virt="non-virtual"><scope>AlvarTracker</scope><name>last_valid_time_</name></member>
      <member refid="classAlvarTracker_1a354d2d82541ab8c3eab428c17445dccf" prot="private" virt="non-virtual"><scope>AlvarTracker</scope><name>markerCallback</name></member>
      <member refid="classAlvarTracker_1a1b9a1115a5ded2c72adfd9f02fbf6563" prot="private" virt="non-virtual"><scope>AlvarTracker</scope><name>nh_</name></member>
      <member refid="classAlvarTracker_1aee75d15858bd109b202d4a9b45fb1be7" prot="private" virt="non-virtual"><scope>AlvarTracker</scope><name>object_positions_</name></member>
      <member refid="classAlvarTracker_1ae249591754389cb67e72f89829689aac" prot="private" virt="non-virtual"><scope>AlvarTracker</scope><name>timeout_</name></member>
      <member refid="classAlvarTracker_1aacf6b19dbc6100dc4ee5f367b744c91d" prot="public" virt="virtual"><scope>AlvarTracker</scope><name>trackingIsValid</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
