<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="todo" kind="page">
    <compoundname>todo</compoundname>
    <title>Todo List</title>
    <detaileddescription>
<para><variablelist>
<varlistentry><term><anchor id="todo_1_todo000001"/>Member <ref refid="classaerial__autonomy_1_1aerial__autonomy__gui_1_1EventTransmissionGUI_1a6118098a267761831ef8d83cbf2a78bd" kindref="member">aerial_autonomy.aerial_autonomy_gui.EventTransmissionGUI.height_slider</ref>  </term></varlistentry>
<listitem><para>Matt: Load slider settings from param file  </para></listitem>
<varlistentry><term><anchor id="todo_1_todo000002"/>Member <ref refid="classaerial__autonomy_1_1aerial__autonomy__gui_1_1EventTransmissionGUI_1af611df98da28aba90ce5fcbea285603a" kindref="member">aerial_autonomy.aerial_autonomy_gui.EventTransmissionGUI.pose_command_container</ref>  </term></varlistentry>
<listitem><para>Matt: Reset slider value based on current quad height  </para></listitem>
<varlistentry><term><anchor id="todo_1_todo000014"/>Class <ref refid="classArmSystem" kindref="compound">ArmSystem</ref>  </term></varlistentry>
<listitem><para>Add controllers and controller connectors for visual servoing  </para></listitem>
<varlistentry><term><anchor id="todo_1_todo000015"/>Member <ref refid="classArmSystem_1a582fe1e1dc69a555a61418a39c6428ed" kindref="member">ArmSystem::ArmSystem</ref>  (ros::NodeHandle &amp;nh)</term></varlistentry>
<listitem><para>Add controllers, controller connectors, config if needed  </para></listitem>
<varlistentry><term><anchor id="todo_1_todo000016"/>Member <ref refid="classArmSystem_1ac050d7d49cc7416d5992f102ff2bdc3d" kindref="member">ArmSystem::getSystemStatus</ref>  () const </term></varlistentry>
<listitem><para>Add status about arm powered on/off, and any error messages can also add arm end effector pose if useful </para></listitem>
<varlistentry><term><anchor id="todo_1_todo000009"/>Class <ref refid="structLandInternalActionFunctor__" kindref="compound">LandInternalActionFunctor_&lt; LogicStateMachineT &gt;</ref>  </term></varlistentry>
<listitem><para>(Gowtham) How to abort Land?? </para></listitem>
<varlistentry><term><anchor id="todo_1_todo000011"/>Member <ref refid="structLandInternalActionFunctor___1a4557b02d6cfa6712b610337cb606f54b" kindref="member">LandInternalActionFunctor_&lt; LogicStateMachineT &gt;::run</ref>  (<ref refid="classUAVSystem" kindref="compound">UAVSystem</ref> &amp;robot_system, LogicStateMachineT &amp;logic_state_machine)</term></varlistentry>
<listitem><para>(Gowtham) Can also use uav status here  </para></listitem>
<varlistentry><term><anchor id="todo_1_todo000010"/>Member <ref refid="structLandTransitionActionFunctor___1ae91b354f041edda283e306fa312e1213" kindref="member">LandTransitionActionFunctor_&lt; LogicStateMachineT &gt;::run</ref>  (<ref refid="classUAVSystem" kindref="compound">UAVSystem</ref> &amp;robot_system, LogicStateMachineT &amp;)</term></varlistentry>
<listitem><para>Have to abort all hardware controllers not just UAV.  </para></listitem>
<varlistentry><term><anchor id="todo_1_todo000020"/>page <ref refid="index" kindref="compound">Main Page</ref>  </term></varlistentry>
<listitem><para>Add picture of latest GUI with quad status etc </para></listitem>
<varlistentry><term><anchor id="todo_1_todo000003"/>Member <ref refid="classManualRPYTController_1a37e85721f5e631d01eef12decb771c90" kindref="member">ManualRPYTController::runImplementation</ref>  (<ref refid="structJoysticksYaw" kindref="compound">JoysticksYaw</ref> sensor_data, <ref refid="structEmptyGoal" kindref="compound">EmptyGoal</ref> goal, <ref refid="structRollPitchYawThrust" kindref="compound">RollPitchYawThrust</ref> &amp;control)</term></varlistentry>
<listitem><para>(matt): need to pass RC mapping as parameter </para><para>(matt): need to pass in frequency as a parameter  </para></listitem>
<varlistentry><term><anchor id="todo_1_todo000007"/>Member <ref refid="classRoiToPositionConverter_1a5384fe4584c3a0dc654eb0e6b9d8a73d" kindref="member">RoiToPositionConverter::computeTrackingVector</ref>  (const sensor_msgs::RegionOfInterest &amp;roi, const cv::Mat &amp;depth, const sensor_msgs::CameraInfo &amp;cam_info, double max_distance, double foreground_percent, <ref refid="structPosition" kindref="compound">Position</ref> &amp;pos)</term></varlistentry>
<listitem><para>(Matt) make perc configurable </para><para>Matt Perform foreground/background clustering with k-means  </para></listitem>
<varlistentry><term><anchor id="todo_1_todo000012"/>Member <ref refid="classSystemStatusPublisher_1a66f73a2e489face69d6f9fc16abb15aa" kindref="member">SystemStatusPublisher&lt; LogicStateMachineT &gt;::publishSystemStatus</ref>  ()</term></varlistentry>
<listitem><para>Replace status text with html script. Need a html manager to automatically add table lines </para></listitem>
</variablelist>
</para>    </detaileddescription>
  </compounddef>
</doxygen>
