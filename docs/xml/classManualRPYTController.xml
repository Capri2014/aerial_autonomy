<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="classManualRPYTController" kind="class" prot="public">
    <compoundname>ManualRPYTController</compoundname>
    <basecompoundref refid="classController" prot="public" virt="non-virtual">Controller&lt; JoysticksYaw, EmptyGoal, RollPitchYawThrust &gt;</basecompoundref>
    <includes refid="manual__rpyt__controller_8h" local="no">manual_rpyt_controller.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classManualRPYTController_1ac85b5cc721914cb7d265a35b155037af" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual ManualRPYTController::~ManualRPYTController</definition>
        <argsstring>()</argsstring>
        <name>~ManualRPYTController</name>
        <briefdescription>
<para>Destructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/gowtham/indigo_workspace/src/aerial_autonomy/include/aerial_autonomy/controllers/manual_rpyt_controller.h" line="17" column="1" bodyfile="/home/gowtham/indigo_workspace/src/aerial_autonomy/include/aerial_autonomy/controllers/manual_rpyt_controller.h" bodystart="17" bodyend="17"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classManualRPYTController_1a37e85721f5e631d01eef12decb771c90" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool ManualRPYTController::runImplementation</definition>
        <argsstring>(JoysticksYaw sensor_data, EmptyGoal goal, RollPitchYawThrust &amp;control)</argsstring>
        <name>runImplementation</name>
        <reimplements refid="classController_1a25a24fe858c6d5a0e1a1475073475a4d">runImplementation</reimplements>
        <param>
          <type><ref refid="structJoysticksYaw" kindref="compound">JoysticksYaw</ref></type>
          <declname>sensor_data</declname>
        </param>
        <param>
          <type><ref refid="structEmptyGoal" kindref="compound">EmptyGoal</ref></type>
          <declname>goal</declname>
        </param>
        <param>
          <type><ref refid="structRollPitchYawThrust" kindref="compound">RollPitchYawThrust</ref> &amp;</type>
          <declname>control</declname>
        </param>
        <briefdescription>
<para>Run the control loop. Converts Joystick commands to RPYT. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sensor_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Joystick commands to be converted into RPYT. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>goal</parametername>
</parameternamelist>
<parameterdescription>
<para>Goal is not used here </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>control</parametername>
</parameternamelist>
<parameterdescription>
<para>RPYT to send to hardware return True if successfully converted sensor data to control </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
<para><xrefsect id="todo_1_todo000003"><xreftitle>Todo</xreftitle><xrefdescription><para>(matt): need to pass RC mapping as parameter </para></xrefdescription></xrefsect></para><para><xrefsect id="todo_1_todo000004"><xreftitle>Todo</xreftitle><xrefdescription><para>(matt): need to pass in frequency as a parameter </para></xrefdescription></xrefsect></para>        </inbodydescription>
        <location file="/home/gowtham/indigo_workspace/src/aerial_autonomy/include/aerial_autonomy/controllers/manual_rpyt_controller.h" line="27" column="1" bodyfile="/home/gowtham/indigo_workspace/src/aerial_autonomy/src/controllers/manual_rpyt_controller.cpp" bodystart="3" bodyend="20"/>
      </memberdef>
      <memberdef kind="function" id="classManualRPYTController_1a828067d46cbaff43131c4a7c8129b569" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool ManualRPYTController::isConvergedImplementation</definition>
        <argsstring>(JoysticksYaw, EmptyGoal)</argsstring>
        <name>isConvergedImplementation</name>
        <reimplements refid="classController_1ada247bf6a611958743df418250d5b454">isConvergedImplementation</reimplements>
        <param>
          <type><ref refid="structJoysticksYaw" kindref="compound">JoysticksYaw</ref></type>
        </param>
        <param>
          <type><ref refid="structEmptyGoal" kindref="compound">EmptyGoal</ref></type>
        </param>
        <briefdescription>
<para>Default implementation since there is no concept of convergence for manual rpyt controller. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>True always </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/gowtham/indigo_workspace/src/aerial_autonomy/include/aerial_autonomy/controllers/manual_rpyt_controller.h" line="34" column="1" bodyfile="/home/gowtham/indigo_workspace/src/aerial_autonomy/include/aerial_autonomy/controllers/manual_rpyt_controller.h" bodystart="34" bodyend="36"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classManualRPYTController_1a6c7f02df3c78f7ba63049c13aff65032" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double ManualRPYTController::map</definition>
        <argsstring>(double input, double input_min, double input_max, double output_min, double output_max)</argsstring>
        <name>map</name>
        <param>
          <type>double</type>
          <declname>input</declname>
        </param>
        <param>
          <type>double</type>
          <declname>input_min</declname>
        </param>
        <param>
          <type>double</type>
          <declname>input_max</declname>
        </param>
        <param>
          <type>double</type>
          <declname>output_min</declname>
        </param>
        <param>
          <type>double</type>
          <declname>output_max</declname>
        </param>
        <briefdescription>
<para>Generic map function to map input range to output range. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>input</parametername>
</parameternamelist>
<parameterdescription>
<para>Input value to map </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>input_min</parametername>
</parameternamelist>
<parameterdescription>
<para>Min for input </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>input_max</parametername>
</parameternamelist>
<parameterdescription>
<para>Max for input </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>output_min</parametername>
</parameternamelist>
<parameterdescription>
<para>Min for output </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>output_max</parametername>
</parameternamelist>
<parameterdescription>
<para>Max for output</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Map the input based on input range to output in output range </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/gowtham/indigo_workspace/src/aerial_autonomy/include/aerial_autonomy/controllers/manual_rpyt_controller.h" line="50" column="1" bodyfile="/home/gowtham/indigo_workspace/src/aerial_autonomy/src/controllers/manual_rpyt_controller.cpp" bodystart="22" bodyend="32"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A controller that passes joystick commands to a drone&apos;s RPYT controller. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="489">
        <label>ManualRPYTController</label>
        <link refid="classManualRPYTController"/>
        <childnode refid="490" relation="public-inheritance">
        </childnode>
      </node>
      <node id="490">
        <label>Controller&lt; JoysticksYaw, EmptyGoal, RollPitchYawThrust &gt;</label>
        <link refid="classController"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="491">
        <label>ManualRPYTController</label>
        <link refid="classManualRPYTController"/>
        <childnode refid="492" relation="public-inheritance">
        </childnode>
      </node>
      <node id="492">
        <label>Controller&lt; JoysticksYaw, EmptyGoal, RollPitchYawThrust &gt;</label>
        <link refid="classController"/>
      </node>
    </collaborationgraph>
    <location file="/home/gowtham/indigo_workspace/src/aerial_autonomy/include/aerial_autonomy/controllers/manual_rpyt_controller.h" line="12" column="1" bodyfile="/home/gowtham/indigo_workspace/src/aerial_autonomy/include/aerial_autonomy/controllers/manual_rpyt_controller.h" bodystart="11" bodyend="52"/>
    <listofallmembers>
      <member refid="classController_1a287a48298ec6f08e36ac3d72a2e6de34" prot="public" virt="virtual"><scope>ManualRPYTController</scope><name>getGoal</name></member>
      <member refid="classController_1ab25282f175c8eaa2b132b4a80b61f7ae" prot="public" virt="non-virtual"><scope>ManualRPYTController</scope><name>isConverged</name></member>
      <member refid="classManualRPYTController_1a828067d46cbaff43131c4a7c8129b569" prot="protected" virt="virtual"><scope>ManualRPYTController</scope><name>isConvergedImplementation</name></member>
      <member refid="classManualRPYTController_1a6c7f02df3c78f7ba63049c13aff65032" prot="private" virt="non-virtual"><scope>ManualRPYTController</scope><name>map</name></member>
      <member refid="classController_1a973e1525b28d50ab77303e2f80c5c706" prot="public" virt="virtual"><scope>ManualRPYTController</scope><name>run</name></member>
      <member refid="classManualRPYTController_1a37e85721f5e631d01eef12decb771c90" prot="protected" virt="virtual"><scope>ManualRPYTController</scope><name>runImplementation</name></member>
      <member refid="classController_1a172aae7e2475b72fb2eb469ccd198387" prot="public" virt="virtual"><scope>ManualRPYTController</scope><name>setGoal</name></member>
      <member refid="classController_1a86c5dbf78d3d948228c7c629e885151c" prot="public" virt="virtual"><scope>ManualRPYTController</scope><name>~Controller</name></member>
      <member refid="classManualRPYTController_1ac85b5cc721914cb7d265a35b155037af" prot="public" virt="virtual"><scope>ManualRPYTController</scope><name>~ManualRPYTController</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
