<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="system__status__publisher_8h" kind="file">
    <compoundname>system_status_publisher.h</compoundname>
    <includes local="no">ros/ros.h</includes>
    <includedby refid="common__system__handler_8h" local="no">include/aerial_autonomy/system_handlers/common_system_handler.h</includedby>
    <incdepgraph>
      <node id="1209">
        <label>ros/ros.h</label>
      </node>
      <node id="1208">
        <label>include/aerial_autonomy/common/system_status_publisher.h</label>
        <link refid="system_status_publisher.h"/>
        <childnode refid="1209" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1212">
        <label>include/aerial_autonomy/system_handlers/uav_system_handler.h</label>
        <link refid="uav__system__handler_8h"/>
        <childnode refid="1213" relation="include">
        </childnode>
      </node>
      <node id="1213">
        <label>src/system_handler_nodes/uav_system_node.cpp</label>
        <link refid="uav__system__node_8cpp"/>
      </node>
      <node id="1211">
        <label>include/aerial_autonomy/system_handlers/common_system_handler.h</label>
        <link refid="common__system__handler_8h"/>
        <childnode refid="1212" relation="include">
        </childnode>
      </node>
      <node id="1210">
        <label>include/aerial_autonomy/common/system_status_publisher.h</label>
        <link refid="system_status_publisher.h"/>
        <childnode refid="1211" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classSystemStatusPublisher" prot="public">SystemStatusPublisher</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight></codeline>
<codeline lineno="2"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ros/ros.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>LogicStateMachineT,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>RobotSystemT&gt;</highlight></codeline>
<codeline lineno="10" refid="classSystemStatusPublisher" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classSystemStatusPublisher" kindref="compound">SystemStatusPublisher</ref><sp/>{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="18" refid="classSystemStatusPublisher_1a31a5a8a30b246edb129aeccb36865384" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classSystemStatusPublisher_1a31a5a8a30b246edb129aeccb36865384" kindref="member">SystemStatusPublisher</ref>(ros::NodeHandle<sp/>&amp;nh,<sp/>RobotSystemT<sp/>&amp;robot_system,</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogicStateMachineT<sp/>&amp;logic_state_machine)</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>nh_(nh),</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>system_status_pub_(nh.advertise&lt;std_msgs::String&gt;(</highlight><highlight class="stringliteral">&quot;system_status&quot;</highlight><highlight class="normal">,<sp/>1)),</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>robot_system_(robot_system),<sp/>logic_state_machine_(logic_state_machine)<sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="classSystemStatusPublisher_1a4166ea629c3c5a06b89830dd04f2091f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classSystemStatusPublisher_1a4166ea629c3c5a06b89830dd04f2091f" kindref="member">publishSystemStatus</ref>()<sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>robot_system_status<sp/>=<sp/>robot_system_.getSystemStatus();</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>current_state_name<sp/>=<sp/><ref refid="uav__state__machine_8h_1a72b959b4319f55f2ef58b9c96fb66a23" kindref="member">pstate</ref>(logic_state_machine_);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>no_transition_event_name<sp/>=</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logic_state_machine_.get_no_transition_event_index().name();</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>std_msgs::String<sp/>status;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>status.data<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Robot<sp/>System<sp/>Status:\n&quot;</highlight><highlight class="normal"><sp/>+<sp/>robot_system_status<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>status.data<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\n\n========================\n\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>status.data<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Logic<sp/>State<sp/>Machine<sp/>Status:<sp/>\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>status.data<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Current<sp/>state:\t&quot;</highlight><highlight class="normal"><sp/>+<sp/>current_state_name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>status.data<sp/>+=</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Last<sp/>event<sp/>without<sp/>transition:\t&quot;</highlight><highlight class="normal"><sp/>+<sp/>no_transition_event_name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>system_status_pub_.publish(status);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>ros::NodeHandle<sp/>&amp;nh_;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>ros::Publisher<sp/>system_status_pub_;<sp/></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>RobotSystemT<sp/>&amp;robot_system_;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>LogicStateMachineT</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;logic_state_machine_;<sp/></highlight></codeline>
<codeline lineno="51"><highlight class="normal">};</highlight></codeline>
    </programlisting>
    <location file="/home/gowtham/indigo_workspace/src/aerial_autonomy/include/aerial_autonomy/common/system_status_publisher.h"/>
  </compounddef>
</doxygen>
