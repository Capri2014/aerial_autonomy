<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="async__timer_8h" kind="file">
    <compoundname>async_timer.h</compoundname>
    <includes local="no">atomic</includes>
    <includes local="no">chrono</includes>
    <includes local="no">functional</includes>
    <includes local="no">thread</includes>
    <includedby refid="async__timer_8cpp" local="no">src/common/async_timer.cpp</includedby>
    <includedby refid="onboard__system__handler_8h" local="no">include/aerial_autonomy/onboard_system_handler.h</includedby>
    <incdepgraph>
      <node id="1184">
        <label>atomic</label>
      </node>
      <node id="1186">
        <label>functional</label>
      </node>
      <node id="1183">
        <label>include/aerial_autonomy/common/async_timer.h</label>
        <link refid="async_timer.h"/>
        <childnode refid="1184" relation="include">
        </childnode>
        <childnode refid="1185" relation="include">
        </childnode>
        <childnode refid="1186" relation="include">
        </childnode>
        <childnode refid="1187" relation="include">
        </childnode>
      </node>
      <node id="1185">
        <label>chrono</label>
      </node>
      <node id="1187">
        <label>thread</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1191">
        <label>src/aerial_autonomy_node.cpp</label>
        <link refid="aerial__autonomy__node_8cpp"/>
      </node>
      <node id="1189">
        <label>src/common/async_timer.cpp</label>
        <link refid="async__timer_8cpp"/>
      </node>
      <node id="1190">
        <label>include/aerial_autonomy/onboard_system_handler.h</label>
        <link refid="onboard__system__handler_8h"/>
        <childnode refid="1191" relation="include">
        </childnode>
      </node>
      <node id="1188">
        <label>include/aerial_autonomy/common/async_timer.h</label>
        <link refid="async_timer.h"/>
        <childnode refid="1189" relation="include">
        </childnode>
        <childnode refid="1190" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classAsyncTimer" prot="public">AsyncTimer</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight></codeline>
<codeline lineno="2"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;atomic&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;chrono&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;functional&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;thread&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="11" refid="classAsyncTimer" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classAsyncTimer" kindref="compound">AsyncTimer</ref><sp/>{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><ref refid="classAsyncTimer_1a8509db3cc448bd8f313435150baf434d" kindref="member">AsyncTimer</ref>(std::function&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">()&gt;<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::chrono::duration&lt;double&gt;<sp/>timer_duration);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classAsyncTimer_1a92781264c62bcbad0b9ffd447d0cb3fd" kindref="member">~AsyncTimer</ref>();</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classAsyncTimer_1ab058544794ccb0310eb5a803458de860" kindref="member">start</ref>();</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>functionTimer();</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/>std::thread<sp/>timer_thread_;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/>std::function&lt;void()&gt;<sp/>function_;<sp/></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>std::chrono::duration&lt;double&gt;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>timer_duration_;<sp/></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>std::atomic_bool<sp/>running_;<sp/></highlight></codeline>
<codeline lineno="41"><highlight class="normal">};</highlight></codeline>
    </programlisting>
    <location file="/home/gowtham/indigo_workspace/src/aerial_autonomy/include/aerial_autonomy/common/async_timer.h"/>
  </compounddef>
</doxygen>
