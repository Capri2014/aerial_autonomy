<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="background_8md" kind="file">
    <compoundname>background.md</compoundname>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#<sp/>Aerial<sp/>Autonomy<sp/>Introduction<sp/></highlight></codeline>
<codeline lineno="2"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>Background</highlight></codeline>
<codeline lineno="4"><highlight class="preprocessor"></highlight><highlight class="preprocessor">##<sp/>Goal</highlight></codeline>
<codeline lineno="5"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal">Easily<sp/>create<sp/>autonomy<sp/>applications<sp/>by<sp/>combining<sp/>modular<sp/>state<sp/>behaviors<sp/>into<sp/>domain-specific<sp/>state<sp/>machines.<sp/><sp/>Use<sp/></highlight><highlight class="keyword">generic</highlight><highlight class="normal"><sp/>interfaces<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>quadcopter<sp/>and<sp/>manipulator<sp/>hardware<sp/>which<sp/>allow<sp/>users<sp/>to<sp/>adapt<sp/>existing<sp/>hardware<sp/>drivers<sp/>to<sp/>the<sp/>framework.</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal">#<sp/>Project</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal">The<sp/>goal<sp/>of<sp/>the<sp/>project<sp/>is<sp/>to<sp/>create<sp/>a<sp/></highlight><highlight class="keyword">generic</highlight><highlight class="normal"><sp/>state<sp/>machine<sp/></highlight><highlight class="keyword">interface<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>the<sp/>quadrotor<sp/>and<sp/>arm<sp/>to<sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>different<sp/>tasks<sp/>such<sp/>as<sp/>“pick<sp/>and<sp/>place”,<sp/>“screwing<sp/>a<sp/>lightbulb”,<sp/>“AR<sp/>manipulation”,<sp/>etc.<sp/>This<sp/>requires<sp/>different<sp/>types<sp/>of<sp/>controllers,<sp/>estimators<sp/>and<sp/>state<sp/>logic<sp/>based<sp/>on<sp/>the<sp/>task<sp/>at<sp/>hand.<sp/>The<sp/>framework<sp/>consists<sp/>of<sp/>the<sp/>following<sp/><ref refid="aerial__autonomy__node_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" kindref="member">main</ref><sp/>components:</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal">1.<sp/>Robot<sp/>System</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/>1.<sp/>Controllers</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/>2.<sp/>Hardware<sp/>Plugins</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/>3.<sp/>Estimators</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/>4.<sp/>ControllerHardwareInterfaces</highlight></codeline>
<codeline lineno="17"><highlight class="normal">2.<sp/><ref refid="classLogicStateMachineFrontEnd" kindref="compound">LogicStateMachineFrontEnd</ref></highlight></codeline>
<codeline lineno="18"><highlight class="normal">3.<sp/><ref refid="classStateMachineGUIConnector" kindref="compound">StateMachineGUIConnector</ref></highlight></codeline>
<codeline lineno="19"><highlight class="normal">4.<sp/>GUIFrontEnd</highlight></codeline>
<codeline lineno="20"><highlight class="normal">5.<sp/><ref refid="classOnboardSystemHandler" kindref="compound">OnboardSystemHandler</ref></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>Setup</highlight></codeline>
<codeline lineno="23"><highlight class="preprocessor"></highlight><highlight class="normal">The<sp/>setup<sp/>and<sp/>brief<sp/>README<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>the<sp/>project<sp/>is<sp/>presented<sp/>[here](README.md)</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal">#<sp/>Components</highlight></codeline>
<codeline lineno="26"><highlight class="normal">##<sp/>Robot<sp/>System</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal">The<sp/>robot<sp/>system<sp/>owns<sp/>privately<sp/>the<sp/>hardware,<sp/>controllers,<sp/>estimators<sp/>and<sp/>controller-hardware<sp/>interfaces.<sp/>For<sp/>the<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>interface<sp/>it<sp/>provides<sp/>methods<sp/>to<sp/>retrieve<sp/>sensor/estimator<sp/>data,<sp/>and<sp/>select<sp/>and<sp/>set<sp/>controller<sp/>goals<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>the<sp/>robot.</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal">|<sp/>Component<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>Description<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/>Link<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="31"><highlight class="normal">|<sp/>------------------------------<sp/>|<sp/>---------------------------------------------------------------------------------------------------------------------------------------------------------------------<sp/>|<sp/>-------------------<sp/>|</highlight></codeline>
<codeline lineno="32"><highlight class="normal">|<sp/>Hardware<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>Send<sp/>commands<sp/>to<sp/>hardware<sp/>and<sp/>retrieve<sp/>raw<sp/>sensor<sp/>data<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><ref refid="classUAVSystem" kindref="compound">UAVSystem</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="33"><highlight class="normal">|<sp/>Controllers<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>Provide<sp/>run<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>that<sp/>returns<sp/>the<sp/>controls<sp/>to<sp/>send<sp/>back<sp/>to<sp/>hardware<sp/>based<sp/>on<sp/>sensor<sp/>data<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><ref refid="classBuiltInController" kindref="compound">BuiltInController</ref><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="34"><highlight class="normal">|<sp/>Estimators<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>Compute<sp/>the<sp/>robot<sp/>state/parameters<sp/>based<sp/>on<sp/>raw<sp/>sensor<sp/>data<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>None<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="35"><highlight class="normal">|<sp/><ref refid="classController" kindref="compound">Controller</ref>-Hardware<sp/>Interfaces<sp/>|<sp/>For<sp/>a<sp/>single<sp/>controller,<sp/>extracts<sp/>sensor/estimator<sp/>data<sp/>from<sp/>hardware,<sp/>passes<sp/>it<sp/>to<sp/>the<sp/>controller<sp/>run<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">,<sp/>and<sp/>sends<sp/>the<sp/>resulting<sp/>control<sp/>commands<sp/>to<sp/>hardware<sp/>|<sp/><ref refid="classControllerHardwareConnector" kindref="compound">ControllerHardwareConnector</ref><sp/>|</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal">##<sp/>Logic<sp/>State<sp/>Machine<sp/>(<ref refid="classLogicStateMachineFrontEnd" kindref="compound">LogicStateMachineFrontEnd</ref>)</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal">The<sp/>Logic<sp/>State<sp/>Machine<sp/>(LSM)<sp/>contains<sp/>the<sp/>behavior<sp/>necessary<sp/>to<sp/>achieve<sp/>a<sp/>desired<sp/>task.<sp/>Each<sp/>state<sp/>in<sp/>a<sp/>logic<sp/>state<sp/>machine<sp/>contains<sp/>a<sp/>`run`<sp/>function<sp/>that<sp/>executes<sp/>state-specific<sp/>behaviors<sp/>and<sp/>triggers<sp/>appropriate<sp/>state<sp/>transitions.<sp/><sp/>The<sp/>LSM<sp/>behavior<sp/>is<sp/>executed<sp/>at<sp/>a<sp/>user-defined<sp/>frequency</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal">![Example<sp/>logic<sp/>state<sp/>machine](https:</highlight><highlight class="comment">//www.dropbox.com/s/m07i1fi6vwc67mw/Untitled%20Diagram.png?dl=1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal">The<sp/>LSM<sp/>also<sp/>provides<sp/>a<sp/>sub<sp/>state<sp/>machine<sp/>for<sp/>checking<sp/>the<sp/>health<sp/>of<sp/>the<sp/>hardware<sp/>based<sp/>on<sp/>sensor<sp/>data,<sp/>and<sp/>health<sp/>reported<sp/>by<sp/>the<sp/>hardware<sp/>plugins.<sp/>The<sp/>state<sp/>of<sp/>this<sp/>submachine<sp/>is<sp/>used<sp/>to<sp/>guard<sp/>the<sp/>transitions<sp/>between<sp/>different<sp/>states.<sp/>For<sp/>example,<sp/>if<sp/>the<sp/>quadrotor<sp/>has<sp/>a<sp/>low<sp/>battery<sp/>warning,<sp/>the<sp/>quadrotor<sp/>will<sp/>not<sp/>accept<sp/>a<sp/>goal<sp/>command<sp/>to<sp/>fly<sp/>to<sp/>a<sp/>goal<sp/>far<sp/>away.<sp/>If<sp/>the<sp/>battery<sp/>level<sp/>is<sp/>critical,<sp/>the<sp/>health<sp/>sub<sp/>machine<sp/>may<sp/>trigger<sp/>a<sp/>land<sp/>event<sp/>automatically.</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">##<sp/>StateMachineGUIConnector</highlight></codeline>
<codeline lineno="47"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal">The<sp/><ref refid="classStateMachineGUIConnector" kindref="compound">StateMachineGUIConnector</ref><sp/>connects<sp/>the<sp/>GUI<sp/></highlight><highlight class="keyword">interface<sp/></highlight><highlight class="normal">to<sp/>the<sp/>state<sp/>machine.<sp/>It<sp/>provides<sp/>a<sp/>message<sp/>based<sp/></highlight><highlight class="keyword">interface<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>triggering<sp/>manual<sp/>state<sp/>transitions<sp/>through<sp/>the<sp/>GUI.<sp/>These<sp/>actions<sp/>can<sp/>be<sp/>very<sp/></highlight><highlight class="keyword">generic</highlight><highlight class="normal"><sp/>-<sp/>such<sp/>as<sp/>buttons<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>“start<sp/>mission”<sp/>and<sp/>“start<sp/>tracking”<sp/>-<sp/>and<sp/>can<sp/>be<sp/>specific<sp/>such<sp/>as<sp/>“land”.</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal">##<sp/>GUIFrontEnd<sp/>(aerial_autonomy.aerial_autonomy_gui.EventTransmissionGUI)</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal">The<sp/>GUI<sp/>contains<sp/>a<sp/>text<sp/>box<sp/>that<sp/>updates<sp/>the<sp/>status<sp/>of<sp/>all<sp/>the<sp/>hardware<sp/>plugins<sp/>and<sp/>the<sp/>state<sp/>machine.<sp/>The<sp/>status<sp/>of<sp/>the<sp/>hardware<sp/>plugins<sp/>include<sp/>the<sp/>health<sp/>information<sp/>of<sp/>the<sp/>hardware<sp/>and<sp/>the<sp/>state<sp/>of<sp/>the<sp/>hardware<sp/>in<sp/>the<sp/>world.<sp/>The<sp/>state<sp/>machine<sp/>status<sp/>includes<sp/>information<sp/>about<sp/>the<sp/>current<sp/>state<sp/>and<sp/>any<sp/>events<sp/>that<sp/>are<sp/>not<sp/>accepted<sp/>by<sp/>the<sp/>state<sp/>machine.<sp/>In<sp/>addition,<sp/>the<sp/>GUI<sp/>should<sp/>be<sp/>able<sp/>to<sp/>send<sp/>manual<sp/>triggers<sp/>to<sp/>the<sp/>state<sp/>machine<sp/>that<sp/>are<sp/>generated<sp/>by<sp/>the<sp/>user.<sp/>Here<sp/>is<sp/>an<sp/>example<sp/>GUI<sp/>FrontEnd:</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal">\todo<sp/>Add<sp/>picture<sp/>of<sp/>latest<sp/>GUI<sp/>with<sp/>quad<sp/>status<sp/>etc</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal">The<sp/>Triggers<sp/>should<sp/>be<sp/>connected<sp/>to<sp/>the<sp/>`StateMachine`<sp/>using<sp/>`<ref refid="classStateMachineGUIConnector" kindref="compound">StateMachineGUIConnector</ref>`<sp/>class.</highlight></codeline>
<codeline lineno="57"><highlight class="normal">The<sp/>triggers<sp/>are<sp/>events<sp/>without<sp/>any<sp/>information.<sp/>There<sp/>can<sp/>also<sp/>be<sp/>commands<sp/>with<sp/>information<sp/>using<sp/>`Rviz`<sp/><sp/>goalpose<sp/>callbacks<sp/>to<sp/>send<sp/>the<sp/>drone<sp/>to<sp/>a<sp/>specific<sp/>location.</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">##<sp/><sp/>Event<sp/>Generation</highlight></codeline>
<codeline lineno="60"><highlight class="preprocessor"></highlight><highlight class="normal">The<sp/>events<sp/>that<sp/>trigger<sp/>state<sp/>machine<sp/>transitions<sp/>are<sp/>created<sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>event<sp/>files<sp/>in<sp/>the<sp/>`events`<sp/>folder.<sp/>The<sp/>event<sp/>header<sp/>files<sp/>are<sp/>generated<sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>CMakeLists<sp/>similar<sp/>to<sp/>ros<sp/>messages.<sp/>The<sp/>syntax<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>the<sp/>event<sp/>files<sp/>is<sp/>as<sp/>follows:</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>EventManager:<sp/><sp/>#<sp/>Event<sp/>manager<sp/>name</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>event1<sp/>#<sp/>Event<sp/>name</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>event2<sp/>#<sp/>Event<sp/>name</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal">The<sp/>event<sp/>files<sp/>can<sp/>also<sp/>include<sp/>other<sp/>event<sp/>file<sp/>as<sp/>shown<sp/>in<sp/>[visual_servoing_events](https:</highlight><highlight class="comment">//github.com/jhu-asco/aerial_autonomy/blob/master/events/visual_servoing_events)<sp/>file.<sp/>The<sp/>event<sp/>manager<sp/>class<sp/>provides<sp/>a<sp/>function<sp/>to<sp/>trigger<sp/>events<sp/>for<sp/>the<sp/>state<sp/>machine<sp/>by<sp/>name.<sp/>The<sp/>GUI<sp/>takes<sp/>in<sp/>an<sp/>event<sp/>file<sp/>and<sp/>automatically<sp/>creates<sp/>buttons<sp/>corresponding<sp/>to<sp/>events.<sp/>The<sp/>user<sp/>can<sp/>then<sp/>trigger<sp/>the<sp/>events<sp/>by<sp/>pressing<sp/>buttons<sp/>in<sp/>GUI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor">##<sp/>Classes<sp/>segregated<sp/>into<sp/>groups</highlight></codeline>
<codeline lineno="69"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal">The<sp/>classes<sp/>created<sp/>in<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>project<sp/>can<sp/>be<sp/>found<sp/>[here](markdown/class_groups.md)</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal">##<sp/>Additional<sp/>Resources</highlight></codeline>
<codeline lineno="73"><highlight class="normal">-<sp/>[Creating<sp/>a<sp/>State<sp/>Machine](markdown/creating_state_machine.md)</highlight></codeline>
<codeline lineno="74"><highlight class="normal">-<sp/>[Classes<sp/>by<sp/>group](markdown/class_groups.md)</highlight></codeline>
<codeline lineno="75"><highlight class="normal">-<sp/>[Setup<sp/>and<sp/>README](README.md)</highlight></codeline>
    </programlisting>
    <location file="/home/gowtham/indigo_workspace/src/aerial_autonomy/markdown/background.md"/>
  </compounddef>
</doxygen>
