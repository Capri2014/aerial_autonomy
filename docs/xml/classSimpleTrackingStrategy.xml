<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="classSimpleTrackingStrategy" kind="class" prot="public">
    <compoundname>SimpleTrackingStrategy</compoundname>
    <basecompoundref refid="classTrackingStrategy" prot="public" virt="non-virtual">TrackingStrategy</basecompoundref>
    <includes refid="simple__tracking__strategy_8h" local="no">simple_tracking_strategy.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classSimpleTrackingStrategy_1a56888cb26db19a19a6de55910fd4e2de" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool SimpleTrackingStrategy::initialize</definition>
        <argsstring>(const std::unordered_map&lt; uint32_t, Position &gt; &amp;tracking_vectors)</argsstring>
        <name>initialize</name>
        <reimplements refid="classTrackingStrategy_1a5c84999d7135376575a6f6f7992d209f">initialize</reimplements>
        <param>
          <type>const std::unordered_map&lt; uint32_t, <ref refid="structPosition" kindref="compound">Position</ref> &gt; &amp;</type>
          <declname>tracking_vectors</declname>
        </param>
        <briefdescription>
<para>Does nothing here since we are always initialized. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tracking_vectors</parametername>
</parameternamelist>
<parameterdescription>
<para>The vectors to the tracked targets </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Always returns true </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/matt/catkin_ws/src/aerial_autonomy/include/aerial_autonomy/trackers/simple_tracking_strategy.h" line="18" column="1" bodyfile="/home/matt/catkin_ws/src/aerial_autonomy/src/trackers/simple_tracking_strategy.cpp" bodystart="3" bodyend="6"/>
      </memberdef>
      <memberdef kind="function" id="classSimpleTrackingStrategy_1a42d2ba4f7c7fbfe7c3041fc351ce7f55" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool SimpleTrackingStrategy::getTrackingVector</definition>
        <argsstring>(const std::unordered_map&lt; uint32_t, Position &gt; &amp;tracking_vectors, std::tuple&lt; uint32_t, Position &gt; &amp;tracking_vector)</argsstring>
        <name>getTrackingVector</name>
        <reimplements refid="classTrackingStrategy_1ae2dea239beba8bb03f9c785972238b46">getTrackingVector</reimplements>
        <param>
          <type>const std::unordered_map&lt; uint32_t, <ref refid="structPosition" kindref="compound">Position</ref> &gt; &amp;</type>
          <declname>tracking_vectors</declname>
        </param>
        <param>
          <type>std::tuple&lt; uint32_t, <ref refid="structPosition" kindref="compound">Position</ref> &gt; &amp;</type>
          <declname>tracking_vector</declname>
        </param>
        <briefdescription>
<para>Get the first tracking vector. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tracking_vectors</parametername>
</parameternamelist>
<parameterdescription>
<para>The vectors to the tracked targets </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tracking_vector</parametername>
</parameternamelist>
<parameterdescription>
<para>First tracking vector </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if successful, false otherwise </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/matt/catkin_ws/src/aerial_autonomy/include/aerial_autonomy/trackers/simple_tracking_strategy.h" line="25" column="1" bodyfile="/home/matt/catkin_ws/src/aerial_autonomy/src/trackers/simple_tracking_strategy.cpp" bodystart="7" bodyend="18"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A strategy that simply returns the first element in the list of tracking vectors Should be used if you expect your tracker to only return a single element. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="848">
        <label>SimpleTrackingStrategy</label>
        <link refid="classSimpleTrackingStrategy"/>
        <childnode refid="849" relation="public-inheritance">
        </childnode>
      </node>
      <node id="849">
        <label>TrackingStrategy</label>
        <link refid="classTrackingStrategy"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="850">
        <label>SimpleTrackingStrategy</label>
        <link refid="classSimpleTrackingStrategy"/>
        <childnode refid="851" relation="public-inheritance">
        </childnode>
      </node>
      <node id="851">
        <label>TrackingStrategy</label>
        <link refid="classTrackingStrategy"/>
      </node>
    </collaborationgraph>
    <location file="/home/matt/catkin_ws/src/aerial_autonomy/include/aerial_autonomy/trackers/simple_tracking_strategy.h" line="10" column="1" bodyfile="/home/matt/catkin_ws/src/aerial_autonomy/include/aerial_autonomy/trackers/simple_tracking_strategy.h" bodystart="10" bodyend="28"/>
    <listofallmembers>
      <member refid="classSimpleTrackingStrategy_1a42d2ba4f7c7fbfe7c3041fc351ce7f55" prot="public" virt="virtual"><scope>SimpleTrackingStrategy</scope><name>getTrackingVector</name></member>
      <member refid="classSimpleTrackingStrategy_1a56888cb26db19a19a6de55910fd4e2de" prot="public" virt="virtual"><scope>SimpleTrackingStrategy</scope><name>initialize</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
