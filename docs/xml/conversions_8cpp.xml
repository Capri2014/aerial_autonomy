<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="conversions_8cpp" kind="file">
    <compoundname>conversions.cpp</compoundname>
    <includes refid="conversions_8h" local="yes">aerial_autonomy/common/conversions.h</includes>
    <incdepgraph>
      <node id="7211">
        <label>tf_conversions/tf_eigen.h</label>
      </node>
      <node id="7210">
        <label>aerial_autonomy/common/conversions.h</label>
        <link refid="conversions_8h"/>
        <childnode refid="7211" relation="include">
        </childnode>
      </node>
      <node id="7209">
        <label>src/common/conversions.cpp</label>
        <link refid="conversions.cpp"/>
        <childnode refid="7210" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespaceconversions">conversions</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="conversions_8h" kindref="compound">aerial_autonomy/common/conversions.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="6" refid="namespaceconversions" refkind="compound"><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">conversions<sp/>{</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceconversions_1acda31d5dfcff323b07c276899c2f74b9" kindref="member">transformMatrix4dToTf</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Matrix4d<sp/>&amp;e,<sp/>tf::Transform<sp/>&amp;tf)<sp/>{</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/>Eigen::Affine3d<sp/>e_affine;</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/>e_affine.matrix()<sp/>=<sp/>e;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/>tf::transformEigenToTF(e_affine,<sp/>tf);</highlight></codeline>
<codeline lineno="11"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceconversions_1a2c3d31bf3e2dfb156045f1baf58ceace" kindref="member">transformRPYToTf</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>r,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>p,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y,<sp/>tf::Transform<sp/>&amp;tf)<sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/>tf.setIdentity();</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/>tf.setRotation(tf::createQuaternionFromRPY(r,<sp/>p,<sp/>y));</highlight></codeline>
<codeline lineno="16"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/matt/catkin_ws/src/aerial_autonomy/src/common/conversions.cpp"/>
  </compounddef>
</doxygen>
