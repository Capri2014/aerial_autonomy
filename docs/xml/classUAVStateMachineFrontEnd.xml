<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="classUAVStateMachineFrontEnd" kind="class" prot="public">
    <compoundname>UAVStateMachineFrontEnd</compoundname>
    <basecompoundref prot="public" virt="non-virtual">boost::msm::front::state_machine_def&lt; UAVStateMachineFrontEnd &gt;</basecompoundref>
    <basecompoundref refid="classBaseStateMachine" prot="public" virt="non-virtual">BaseStateMachine&lt; UAVSystem &gt;</basecompoundref>
    <includes refid="uav__state__machine_8h" local="no">uav_state_machine.h</includes>
    <innerclass refid="structUAVStateMachineFrontEnd_1_1transition__table" prot="public">UAVStateMachineFrontEnd::transition_table</innerclass>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classUAVStateMachineFrontEnd_1a7f894e8e7f5925472704c7467bbc7963" prot="public" static="no">
        <type><ref refid="structUAVStatesActions_1ad12379ab87f454043ca0c96dac85fef5" kindref="member">usa::ManualControlState</ref></type>
        <definition>using UAVStateMachineFrontEnd::initial_state =  usa::ManualControlState</definition>
        <argsstring></argsstring>
        <name>initial_state</name>
        <briefdescription>
<para>Initial state for state machine. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/matt/catkin_ws/src/aerial_autonomy/include/aerial_autonomy/state_machines/uav_state_machine.h" line="95" column="1" bodyfile="/home/matt/catkin_ws/src/aerial_autonomy/include/aerial_autonomy/state_machines/uav_state_machine.h" bodystart="95" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classUAVStateMachineFrontEnd_1a098d07c51f56d8a961a23df9d4b2c67b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Event</type>
          </param>
          <param>
            <type>class FSM</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void UAVStateMachineFrontEnd::on_entry</definition>
        <argsstring>(Event const &amp;, FSM &amp;)</argsstring>
        <name>on_entry</name>
        <param>
          <type>Event const &amp;</type>
        </param>
        <param>
          <type>FSM &amp;</type>
        </param>
        <briefdescription>
<para>Action to take on entering state machine. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Event</parametername>
</parameternamelist>
<parameterdescription>
<para>type of event causing state machine to enter </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FSM</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend finite state machine type to trigger events </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/matt/catkin_ws/src/aerial_autonomy/include/aerial_autonomy/state_machines/uav_state_machine.h" line="70" column="1" bodyfile="/home/matt/catkin_ws/src/aerial_autonomy/include/aerial_autonomy/state_machines/uav_state_machine.h" bodystart="70" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="classUAVStateMachineFrontEnd_1a8699918ab41569ac9ce0fa458b770522" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Event</type>
          </param>
          <param>
            <type>class FSM</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void UAVStateMachineFrontEnd::on_exit</definition>
        <argsstring>(Event const &amp;, FSM &amp;)</argsstring>
        <name>on_exit</name>
        <param>
          <type>Event const &amp;</type>
        </param>
        <param>
          <type>FSM &amp;</type>
        </param>
        <briefdescription>
<para>Action to take on leaving state machine. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Event</parametername>
</parameternamelist>
<parameterdescription>
<para>type of event causing state machine to enter </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FSM</parametername>
</parameternamelist>
<parameterdescription>
<para>Backend finite state machine type to trigger events </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/matt/catkin_ws/src/aerial_autonomy/include/aerial_autonomy/state_machines/uav_state_machine.h" line="79" column="1" bodyfile="/home/matt/catkin_ws/src/aerial_autonomy/include/aerial_autonomy/state_machines/uav_state_machine.h" bodystart="79" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="classUAVStateMachineFrontEnd_1a35e3cdf694f700caef50c019599d1a5f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>UAVStateMachineFrontEnd::UAVStateMachineFrontEnd</definition>
        <argsstring>(UAVSystem &amp;uav_system)</argsstring>
        <name>UAVStateMachineFrontEnd</name>
        <param>
          <type><ref refid="classUAVSystem" kindref="compound">UAVSystem</ref> &amp;</type>
          <declname>uav_system</declname>
        </param>
        <briefdescription>
<para>Constructor with arguments to store robot system. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>uav_system</parametername>
</parameternamelist>
<parameterdescription>
<para>robot system that is stored internally and shared with events </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/matt/catkin_ws/src/aerial_autonomy/include/aerial_autonomy/state_machines/uav_state_machine.h" line="89" column="1" bodyfile="/home/matt/catkin_ws/src/aerial_autonomy/include/aerial_autonomy/state_machines/uav_state_machine.h" bodystart="89" bodyend="90"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>front-end: define the FSM structure </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="916">
        <label>msmf::state_machine_def&lt; UAVStateMachineFrontEnd &gt;</label>
      </node>
      <node id="915">
        <label>UAVStateMachineFrontEnd</label>
        <link refid="classUAVStateMachineFrontEnd"/>
        <childnode refid="916" relation="public-inheritance">
        </childnode>
        <childnode refid="917" relation="public-inheritance">
        </childnode>
      </node>
      <node id="917">
        <label>BaseStateMachine&lt; UAVSystem &gt;</label>
        <link refid="classBaseStateMachine"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="924">
        <label>TypeMap&lt; AbstractControllerHardwareConnector &gt;</label>
        <link refid="classTypeMap"/>
      </node>
      <node id="923">
        <label>BaseRobotSystem</label>
        <link refid="classBaseRobotSystem"/>
        <childnode refid="924" relation="usage">
          <edgelabel>controller_hardware_connector_container_</edgelabel>
        </childnode>
      </node>
      <node id="919">
        <label>msmf::state_machine_def&lt; UAVStateMachineFrontEnd &gt;</label>
      </node>
      <node id="918">
        <label>UAVStateMachineFrontEnd</label>
        <link refid="classUAVStateMachineFrontEnd"/>
        <childnode refid="919" relation="public-inheritance">
        </childnode>
        <childnode refid="920" relation="public-inheritance">
        </childnode>
      </node>
      <node id="920">
        <label>BaseStateMachine&lt; UAVSystem &gt;</label>
        <link refid="classBaseStateMachine"/>
        <childnode refid="921" relation="usage">
          <edgelabel>robot_system_container_</edgelabel>
        </childnode>
      </node>
      <node id="921">
        <label>RobotSystemContainer&lt; UAVSystem &gt;</label>
        <link refid="classRobotSystemContainer"/>
        <childnode refid="922" relation="usage">
          <edgelabel>robot_system_</edgelabel>
        </childnode>
      </node>
      <node id="922">
        <label>UAVSystem</label>
        <link refid="classUAVSystem"/>
        <childnode refid="923" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/matt/catkin_ws/src/aerial_autonomy/include/aerial_autonomy/state_machines/uav_state_machine.h" line="62" column="1" bodyfile="/home/matt/catkin_ws/src/aerial_autonomy/include/aerial_autonomy/state_machines/uav_state_machine.h" bodystart="60" bodyend="140"/>
    <listofallmembers>
      <member refid="classBaseStateMachine_1a2cb25947ca74c77568736975125aed44" prot="public" virt="non-virtual"><scope>UAVStateMachineFrontEnd</scope><name>BaseStateMachine</name></member>
      <member refid="classBaseStateMachine_1a286ff1d9af1151821ed44842a5e4fb8c" prot="public" virt="non-virtual"><scope>UAVStateMachineFrontEnd</scope><name>get_no_transition_event_index</name></member>
      <member refid="classUAVStateMachineFrontEnd_1a7f894e8e7f5925472704c7467bbc7963" prot="public" virt="non-virtual"><scope>UAVStateMachineFrontEnd</scope><name>initial_state</name></member>
      <member refid="classBaseStateMachine_1ab047241678b8eba01f428ef1af5c055f" prot="public" virt="non-virtual"><scope>UAVStateMachineFrontEnd</scope><name>no_transition</name></member>
      <member refid="classBaseStateMachine_1ac261a6e2f6829dd213d58e690093c192" prot="protected" virt="non-virtual"><scope>UAVStateMachineFrontEnd</scope><name>no_transition_event_index_</name></member>
      <member refid="classUAVStateMachineFrontEnd_1a098d07c51f56d8a961a23df9d4b2c67b" prot="public" virt="non-virtual"><scope>UAVStateMachineFrontEnd</scope><name>on_entry</name></member>
      <member refid="classUAVStateMachineFrontEnd_1a8699918ab41569ac9ce0fa458b770522" prot="public" virt="non-virtual"><scope>UAVStateMachineFrontEnd</scope><name>on_exit</name></member>
      <member refid="classBaseStateMachine_1a75dfc85f8804c2579ad9dc8c2239aba1" prot="public" virt="non-virtual"><scope>UAVStateMachineFrontEnd</scope><name>robot_system_container_</name></member>
      <member refid="classUAVStateMachineFrontEnd_1a35e3cdf694f700caef50c019599d1a5f" prot="public" virt="non-virtual"><scope>UAVStateMachineFrontEnd</scope><name>UAVStateMachineFrontEnd</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
