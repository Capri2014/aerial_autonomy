<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="classPositionControllerDroneConnector" kind="class" prot="public">
    <compoundname>PositionControllerDroneConnector</compoundname>
    <basecompoundref refid="classControllerHardwareConnector" prot="public" virt="non-virtual">ControllerHardwareConnector&lt; PositionYaw, PositionYaw, PositionYaw &gt;</basecompoundref>
    <includes refid="position__controller__drone__connector_8h" local="no">position_controller_drone_connector.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classPositionControllerDroneConnector_1a977de12cad1986c769b2641384b85aea" prot="private" static="no" mutable="no">
        <type>parsernode::Parser &amp;</type>
        <definition>parsernode::Parser&amp; PositionControllerDroneConnector::drone_hardware_</definition>
        <argsstring></argsstring>
        <name>drone_hardware_</name>
        <briefdescription>
<para>Quad hardware to send commands. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/gowtham/indigo_workspace/src/aerial_autonomy/include/aerial_autonomy/controller_hardware_connectors/position_controller_drone_connector.h" line="54" column="1" bodyfile="/home/gowtham/indigo_workspace/src/aerial_autonomy/include/aerial_autonomy/controller_hardware_connectors/position_controller_drone_connector.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classPositionControllerDroneConnector_1a1a7d452378884ee619d826edfe8b165b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>PositionControllerDroneConnector::PositionControllerDroneConnector</definition>
        <argsstring>(parsernode::Parser &amp;drone_hardware, Controller&lt; PositionYaw, PositionYaw, PositionYaw &gt; &amp;controller)</argsstring>
        <name>PositionControllerDroneConnector</name>
        <param>
          <type>parsernode::Parser &amp;</type>
          <declname>drone_hardware</declname>
        </param>
        <param>
          <type><ref refid="classController" kindref="compound">Controller</ref>&lt; <ref refid="structPositionYaw" kindref="compound">PositionYaw</ref>, <ref refid="structPositionYaw" kindref="compound">PositionYaw</ref>, <ref refid="structPositionYaw" kindref="compound">PositionYaw</ref> &gt; &amp;</type>
          <declname>controller</declname>
        </param>
        <briefdescription>
<para>Constructor. </para>        </briefdescription>
        <detaileddescription>
<para>Store drone hardware with hardware type as UAV. Uses parsernode::Parser::cmdwaypoint function.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>drone_hardware</parametername>
</parameternamelist>
<parameterdescription>
<para>Drone hardware used to send commands </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>controller</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structPosition" kindref="compound">Position</ref> controller that achieves a desired position, yaw </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/gowtham/indigo_workspace/src/aerial_autonomy/include/aerial_autonomy/controller_hardware_connectors/position_controller_drone_connector.h" line="27" column="1" bodyfile="/home/gowtham/indigo_workspace/src/aerial_autonomy/include/aerial_autonomy/controller_hardware_connectors/position_controller_drone_connector.h" bodystart="27" bodyend="31"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classPositionControllerDroneConnector_1a813874b7b677580fc6b5a9a995e79017" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool PositionControllerDroneConnector::extractSensorData</definition>
        <argsstring>(PositionYaw &amp;sensor_data)</argsstring>
        <name>extractSensorData</name>
        <reimplements refid="classControllerHardwareConnector_1ad241af05eac639961a1b07fe7330f054">extractSensorData</reimplements>
        <param>
          <type><ref refid="structPositionYaw" kindref="compound">PositionYaw</ref> &amp;</type>
          <declname>sensor_data</declname>
        </param>
        <briefdescription>
<para>does not extract any data since nothing is needed </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sensor_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Current position and yaw of UAV</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if position and yaw can be extracted </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/gowtham/indigo_workspace/src/aerial_autonomy/include/aerial_autonomy/controller_hardware_connectors/position_controller_drone_connector.h" line="41" column="1" bodyfile="/home/gowtham/indigo_workspace/src/aerial_autonomy/src/controller_hardware_connectors/position_controller_drone_connector.cpp" bodystart="3" bodyend="10"/>
      </memberdef>
      <memberdef kind="function" id="classPositionControllerDroneConnector_1a826092eadfbbf9442fa1869fea98070d" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void PositionControllerDroneConnector::sendHardwareCommands</definition>
        <argsstring>(PositionYaw controls)</argsstring>
        <name>sendHardwareCommands</name>
        <reimplements refid="classControllerHardwareConnector_1a5fc86156d5c747aba36497732962d6d0">sendHardwareCommands</reimplements>
        <param>
          <type><ref refid="structPositionYaw" kindref="compound">PositionYaw</ref></type>
          <declname>controls</declname>
        </param>
        <briefdescription>
<para>Send position commands to hardware. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>controls</parametername>
</parameternamelist>
<parameterdescription>
<para>position command to send to UAV </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/gowtham/indigo_workspace/src/aerial_autonomy/include/aerial_autonomy/controller_hardware_connectors/position_controller_drone_connector.h" line="48" column="1" bodyfile="/home/gowtham/indigo_workspace/src/aerial_autonomy/src/controller_hardware_connectors/position_controller_drone_connector.cpp" bodystart="12" bodyend="19"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Manages communication between a drone plugin and a position controller that outputs position commands. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="509">
        <label>ControllerHardwareConnector&lt; PositionYaw, PositionYaw, PositionYaw &gt;</label>
        <link refid="classControllerHardwareConnector"/>
        <childnode refid="510" relation="public-inheritance">
        </childnode>
      </node>
      <node id="510">
        <label>AbstractControllerHardwareConnector</label>
        <link refid="structAbstractControllerHardwareConnector"/>
      </node>
      <node id="508">
        <label>PositionControllerDroneConnector</label>
        <link refid="classPositionControllerDroneConnector"/>
        <childnode refid="509" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="512">
        <label>ControllerHardwareConnector&lt; PositionYaw, PositionYaw, PositionYaw &gt;</label>
        <link refid="classControllerHardwareConnector"/>
        <childnode refid="513" relation="public-inheritance">
        </childnode>
      </node>
      <node id="513">
        <label>AbstractControllerHardwareConnector</label>
        <link refid="structAbstractControllerHardwareConnector"/>
      </node>
      <node id="511">
        <label>PositionControllerDroneConnector</label>
        <link refid="classPositionControllerDroneConnector"/>
        <childnode refid="512" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/gowtham/indigo_workspace/src/aerial_autonomy/include/aerial_autonomy/controller_hardware_connectors/position_controller_drone_connector.h" line="16" column="1" bodyfile="/home/gowtham/indigo_workspace/src/aerial_autonomy/include/aerial_autonomy/controller_hardware_connectors/position_controller_drone_connector.h" bodystart="14" bodyend="55"/>
    <listofallmembers>
      <member refid="classControllerHardwareConnector_1a6c5d8e5a5ded026ccee3d51f2899ce3e" prot="public" virt="non-virtual"><scope>PositionControllerDroneConnector</scope><name>ControllerHardwareConnector</name></member>
      <member refid="classPositionControllerDroneConnector_1a977de12cad1986c769b2641384b85aea" prot="private" virt="non-virtual"><scope>PositionControllerDroneConnector</scope><name>drone_hardware_</name></member>
      <member refid="classPositionControllerDroneConnector_1a813874b7b677580fc6b5a9a995e79017" prot="protected" virt="virtual"><scope>PositionControllerDroneConnector</scope><name>extractSensorData</name></member>
      <member refid="classControllerHardwareConnector_1adccf30ddf2b8be152e53636b1c2d3ad5" prot="public" virt="non-virtual"><scope>PositionControllerDroneConnector</scope><name>getGoal</name></member>
      <member refid="classControllerHardwareConnector_1accd0c9bff560fa3c6d1e60d97644415e" prot="public" virt="non-virtual"><scope>PositionControllerDroneConnector</scope><name>getHardwareType</name></member>
      <member refid="classControllerHardwareConnector_1a3e69fcccb3826adbd02ea9f7f0740613" prot="public" virt="non-virtual"><scope>PositionControllerDroneConnector</scope><name>getStatus</name></member>
      <member refid="classControllerHardwareConnector_1a1e47c12f796c9cc2fcb5c2495ede2392" prot="protected" virt="non-virtual"><scope>PositionControllerDroneConnector</scope><name>hardware_type_</name></member>
      <member refid="classPositionControllerDroneConnector_1a1a7d452378884ee619d826edfe8b165b" prot="public" virt="non-virtual"><scope>PositionControllerDroneConnector</scope><name>PositionControllerDroneConnector</name></member>
      <member refid="classControllerHardwareConnector_1afb46464434a3a5881ecc1091f58bbd61" prot="public" virt="virtual"><scope>PositionControllerDroneConnector</scope><name>run</name></member>
      <member refid="classPositionControllerDroneConnector_1a826092eadfbbf9442fa1869fea98070d" prot="protected" virt="virtual"><scope>PositionControllerDroneConnector</scope><name>sendHardwareCommands</name></member>
      <member refid="classControllerHardwareConnector_1a14ce51377f80b67796fcb50ce8195efd" prot="public" virt="non-virtual"><scope>PositionControllerDroneConnector</scope><name>setGoal</name></member>
      <member refid="structAbstractControllerHardwareConnector_1a06f931d74faac604c3ef56cb5ba75399" prot="public" virt="virtual"><scope>PositionControllerDroneConnector</scope><name>~AbstractControllerHardwareConnector</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
