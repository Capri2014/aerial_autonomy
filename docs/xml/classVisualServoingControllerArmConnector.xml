<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="classVisualServoingControllerArmConnector" kind="class" prot="public">
    <compoundname>VisualServoingControllerArmConnector</compoundname>
    <basecompoundref refid="classControllerHardwareConnector" prot="public" virt="non-virtual">ControllerHardwareConnector&lt; std::tuple&lt; tf::Transform, tf::Transform &gt;, tf::Transform, tf::Transform &gt;</basecompoundref>
    <includes refid="visual__servoing__controller__arm__connector_8h" local="no">visual_servoing_controller_arm_connector.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classVisualServoingControllerArmConnector_1a61112ececb95b7215eeaf6d26cc835d9" prot="private" static="no" mutable="no">
        <type>parsernode::Parser &amp;</type>
        <definition>parsernode::Parser&amp; VisualServoingControllerArmConnector::drone_hardware_</definition>
        <argsstring></argsstring>
        <name>drone_hardware_</name>
        <briefdescription>
<para>Drone hardware to send commands. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/matt/catkin_ws/src/aerial_autonomy/include/aerial_autonomy/controller_hardware_connectors/visual_servoing_controller_arm_connector.h" line="70" column="1" bodyfile="/home/matt/catkin_ws/src/aerial_autonomy/include/aerial_autonomy/controller_hardware_connectors/visual_servoing_controller_arm_connector.h" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classVisualServoingControllerArmConnector_1a7bca55d895ed6445506ee10a8e05c347" prot="private" static="no" mutable="no">
        <type>ArmParser &amp;</type>
        <definition>ArmParser&amp; VisualServoingControllerArmConnector::arm_hardware_</definition>
        <argsstring></argsstring>
        <name>arm_hardware_</name>
        <briefdescription>
<para>Arm hardware to send commands. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/matt/catkin_ws/src/aerial_autonomy/include/aerial_autonomy/controller_hardware_connectors/visual_servoing_controller_arm_connector.h" line="74" column="1" bodyfile="/home/matt/catkin_ws/src/aerial_autonomy/include/aerial_autonomy/controller_hardware_connectors/visual_servoing_controller_arm_connector.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classVisualServoingControllerArmConnector_1ae72cea2e086b51ee897bb8bbd7f0c376" prot="private" static="no" mutable="no">
        <type><ref refid="classBaseTracker" kindref="compound">BaseTracker</ref> &amp;</type>
        <definition>BaseTracker&amp; VisualServoingControllerArmConnector::tracker_</definition>
        <argsstring></argsstring>
        <name>tracker_</name>
        <briefdescription>
<para>Tracks whatever we are servoing to. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/matt/catkin_ws/src/aerial_autonomy/include/aerial_autonomy/controller_hardware_connectors/visual_servoing_controller_arm_connector.h" line="78" column="1" bodyfile="/home/matt/catkin_ws/src/aerial_autonomy/include/aerial_autonomy/controller_hardware_connectors/visual_servoing_controller_arm_connector.h" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classVisualServoingControllerArmConnector_1a3242f9abf48318f151202f5cb6bc2422" prot="private" static="no" mutable="no">
        <type>tf::Transform</type>
        <definition>tf::Transform VisualServoingControllerArmConnector::camera_transform_</definition>
        <argsstring></argsstring>
        <name>camera_transform_</name>
        <briefdescription>
<para>camera transform with respect to body </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/matt/catkin_ws/src/aerial_autonomy/include/aerial_autonomy/controller_hardware_connectors/visual_servoing_controller_arm_connector.h" line="82" column="1" bodyfile="/home/matt/catkin_ws/src/aerial_autonomy/include/aerial_autonomy/controller_hardware_connectors/visual_servoing_controller_arm_connector.h" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classVisualServoingControllerArmConnector_1a9812e36bce12018ab0920512b3a0d736" prot="private" static="no" mutable="no">
        <type>tf::Transform</type>
        <definition>tf::Transform VisualServoingControllerArmConnector::arm_transform_</definition>
        <argsstring></argsstring>
        <name>arm_transform_</name>
        <briefdescription>
<para>arm transform with respect to body </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/matt/catkin_ws/src/aerial_autonomy/include/aerial_autonomy/controller_hardware_connectors/visual_servoing_controller_arm_connector.h" line="86" column="1" bodyfile="/home/matt/catkin_ws/src/aerial_autonomy/include/aerial_autonomy/controller_hardware_connectors/visual_servoing_controller_arm_connector.h" bodystart="86" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classVisualServoingControllerArmConnector_1a46daa6b43a0d1c12a6a95560b4861a29" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>VisualServoingControllerArmConnector::VisualServoingControllerArmConnector</definition>
        <argsstring>(BaseTracker &amp;tracker, parsernode::Parser &amp;drone_hardware, ArmParser &amp;arm_hardware, RelativePoseController &amp;controller, tf::Transform camera_transform, tf::Transform arm_transform)</argsstring>
        <name>VisualServoingControllerArmConnector</name>
        <param>
          <type><ref refid="classBaseTracker" kindref="compound">BaseTracker</ref> &amp;</type>
          <declname>tracker</declname>
        </param>
        <param>
          <type>parsernode::Parser &amp;</type>
          <declname>drone_hardware</declname>
        </param>
        <param>
          <type>ArmParser &amp;</type>
          <declname>arm_hardware</declname>
        </param>
        <param>
          <type><ref refid="classRelativePoseController" kindref="compound">RelativePoseController</ref> &amp;</type>
          <declname>controller</declname>
        </param>
        <param>
          <type>tf::Transform</type>
          <declname>camera_transform</declname>
        </param>
        <param>
          <type>tf::Transform</type>
          <declname>arm_transform</declname>
        </param>
        <briefdescription>
<para>Constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/matt/catkin_ws/src/aerial_autonomy/include/aerial_autonomy/controller_hardware_connectors/visual_servoing_controller_arm_connector.h" line="24" column="1" bodyfile="/home/matt/catkin_ws/src/aerial_autonomy/include/aerial_autonomy/controller_hardware_connectors/visual_servoing_controller_arm_connector.h" bodystart="24" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="classVisualServoingControllerArmConnector_1a99354b311a1a74419c5e19c689ff0ecb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual VisualServoingControllerArmConnector::~VisualServoingControllerArmConnector</definition>
        <argsstring>()</argsstring>
        <name>~VisualServoingControllerArmConnector</name>
        <briefdescription>
<para>Destructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/matt/catkin_ws/src/aerial_autonomy/include/aerial_autonomy/controller_hardware_connectors/visual_servoing_controller_arm_connector.h" line="37" column="1" bodyfile="/home/matt/catkin_ws/src/aerial_autonomy/include/aerial_autonomy/controller_hardware_connectors/visual_servoing_controller_arm_connector.h" bodystart="37" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="classVisualServoingControllerArmConnector_1afa3195d11275bd3266169933a088d047" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool VisualServoingControllerArmConnector::getTrackingPoseArmFrame</definition>
        <argsstring>(tf::Transform &amp;tracking_pose)</argsstring>
        <name>getTrackingPoseArmFrame</name>
        <param>
          <type>tf::Transform &amp;</type>
          <declname>tracking_pose</declname>
        </param>
        <briefdescription>
<para>Get the tracking pose of the tracker in the arm frame. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tracking_vector</parametername>
</parameternamelist>
<parameterdescription>
<para>Returned tracking pose </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if successful and false otherwise </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/matt/catkin_ws/src/aerial_autonomy/include/aerial_autonomy/controller_hardware_connectors/visual_servoing_controller_arm_connector.h" line="45" column="1" bodyfile="/home/matt/catkin_ws/src/aerial_autonomy/src/controller_hardware_connectors/visual_servoing_controller_arm_connector.cpp" bodystart="30" bodyend="65"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classVisualServoingControllerArmConnector_1a68607930eb73573347a259580b22b94d" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool VisualServoingControllerArmConnector::extractSensorData</definition>
        <argsstring>(std::tuple&lt; tf::Transform, tf::Transform &gt; &amp;sensor_data)</argsstring>
        <name>extractSensorData</name>
        <reimplements refid="classControllerHardwareConnector_1ad241af05eac639961a1b07fe7330f054">extractSensorData</reimplements>
        <param>
          <type>std::tuple&lt; tf::Transform, tf::Transform &gt; &amp;</type>
          <declname>sensor_data</declname>
        </param>
        <briefdescription>
<para>Extracts pose data from ROI. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sensor_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pose of arm end effector and pose of tracked object in arm frame</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if able to extract ROI position </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/matt/catkin_ws/src/aerial_autonomy/include/aerial_autonomy/controller_hardware_connectors/visual_servoing_controller_arm_connector.h" line="57" column="1" bodyfile="/home/matt/catkin_ws/src/aerial_autonomy/src/controller_hardware_connectors/visual_servoing_controller_arm_connector.cpp" bodystart="4" bodyend="19"/>
      </memberdef>
      <memberdef kind="function" id="classVisualServoingControllerArmConnector_1a01f0218d6f53ab5cbed8d6494224db7f" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void VisualServoingControllerArmConnector::sendHardwareCommands</definition>
        <argsstring>(tf::Transform controls)</argsstring>
        <name>sendHardwareCommands</name>
        <reimplements refid="classControllerHardwareConnector_1a5fc86156d5c747aba36497732962d6d0">sendHardwareCommands</reimplements>
        <param>
          <type>tf::Transform</type>
          <declname>controls</declname>
        </param>
        <briefdescription>
<para>Send position commands to hardware. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>controls</parametername>
</parameternamelist>
<parameterdescription>
<para>position command to send to arm </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/matt/catkin_ws/src/aerial_autonomy/include/aerial_autonomy/controller_hardware_connectors/visual_servoing_controller_arm_connector.h" line="64" column="1" bodyfile="/home/matt/catkin_ws/src/aerial_autonomy/src/controller_hardware_connectors/visual_servoing_controller_arm_connector.cpp" bodystart="21" bodyend="28"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A visual servoing controller that uses a tracker output as feedback and moves the arm to a goal pose relative to the tracked target. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="974">
        <label>AbstractControllerHardwareConnector</label>
        <link refid="structAbstractControllerHardwareConnector"/>
      </node>
      <node id="973">
        <label>ControllerHardwareConnector&lt; std::tuple&lt; tf::Transform, tf::Transform &gt;, tf::Transform, tf::Transform &gt;</label>
        <link refid="classControllerHardwareConnector"/>
        <childnode refid="974" relation="public-inheritance">
        </childnode>
      </node>
      <node id="972">
        <label>VisualServoingControllerArmConnector</label>
        <link refid="classVisualServoingControllerArmConnector"/>
        <childnode refid="973" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="977">
        <label>AbstractControllerHardwareConnector</label>
        <link refid="structAbstractControllerHardwareConnector"/>
      </node>
      <node id="976">
        <label>ControllerHardwareConnector&lt; std::tuple&lt; tf::Transform, tf::Transform &gt;, tf::Transform, tf::Transform &gt;</label>
        <link refid="classControllerHardwareConnector"/>
        <childnode refid="977" relation="public-inheritance">
        </childnode>
      </node>
      <node id="975">
        <label>VisualServoingControllerArmConnector</label>
        <link refid="classVisualServoingControllerArmConnector"/>
        <childnode refid="976" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/matt/catkin_ws/src/aerial_autonomy/include/aerial_autonomy/controller_hardware_connectors/visual_servoing_controller_arm_connector.h" line="19" column="1" bodyfile="/home/matt/catkin_ws/src/aerial_autonomy/include/aerial_autonomy/controller_hardware_connectors/visual_servoing_controller_arm_connector.h" bodystart="16" bodyend="87"/>
    <listofallmembers>
      <member refid="classVisualServoingControllerArmConnector_1a7bca55d895ed6445506ee10a8e05c347" prot="private" virt="non-virtual"><scope>VisualServoingControllerArmConnector</scope><name>arm_hardware_</name></member>
      <member refid="classVisualServoingControllerArmConnector_1a9812e36bce12018ab0920512b3a0d736" prot="private" virt="non-virtual"><scope>VisualServoingControllerArmConnector</scope><name>arm_transform_</name></member>
      <member refid="classVisualServoingControllerArmConnector_1a3242f9abf48318f151202f5cb6bc2422" prot="private" virt="non-virtual"><scope>VisualServoingControllerArmConnector</scope><name>camera_transform_</name></member>
      <member refid="classControllerHardwareConnector_1a6c5d8e5a5ded026ccee3d51f2899ce3e" prot="public" virt="non-virtual"><scope>VisualServoingControllerArmConnector</scope><name>ControllerHardwareConnector</name></member>
      <member refid="classVisualServoingControllerArmConnector_1a61112ececb95b7215eeaf6d26cc835d9" prot="private" virt="non-virtual"><scope>VisualServoingControllerArmConnector</scope><name>drone_hardware_</name></member>
      <member refid="classVisualServoingControllerArmConnector_1a68607930eb73573347a259580b22b94d" prot="protected" virt="virtual"><scope>VisualServoingControllerArmConnector</scope><name>extractSensorData</name></member>
      <member refid="classControllerHardwareConnector_1adccf30ddf2b8be152e53636b1c2d3ad5" prot="public" virt="non-virtual"><scope>VisualServoingControllerArmConnector</scope><name>getGoal</name></member>
      <member refid="classControllerHardwareConnector_1accd0c9bff560fa3c6d1e60d97644415e" prot="public" virt="non-virtual"><scope>VisualServoingControllerArmConnector</scope><name>getHardwareType</name></member>
      <member refid="classControllerHardwareConnector_1a3e69fcccb3826adbd02ea9f7f0740613" prot="public" virt="virtual"><scope>VisualServoingControllerArmConnector</scope><name>getStatus</name></member>
      <member refid="classVisualServoingControllerArmConnector_1afa3195d11275bd3266169933a088d047" prot="public" virt="non-virtual"><scope>VisualServoingControllerArmConnector</scope><name>getTrackingPoseArmFrame</name></member>
      <member refid="classControllerHardwareConnector_1a1e47c12f796c9cc2fcb5c2495ede2392" prot="protected" virt="non-virtual"><scope>VisualServoingControllerArmConnector</scope><name>hardware_type_</name></member>
      <member refid="classControllerHardwareConnector_1afb46464434a3a5881ecc1091f58bbd61" prot="public" virt="virtual"><scope>VisualServoingControllerArmConnector</scope><name>run</name></member>
      <member refid="classVisualServoingControllerArmConnector_1a01f0218d6f53ab5cbed8d6494224db7f" prot="protected" virt="virtual"><scope>VisualServoingControllerArmConnector</scope><name>sendHardwareCommands</name></member>
      <member refid="classControllerHardwareConnector_1a14ce51377f80b67796fcb50ce8195efd" prot="public" virt="non-virtual"><scope>VisualServoingControllerArmConnector</scope><name>setGoal</name></member>
      <member refid="classVisualServoingControllerArmConnector_1ae72cea2e086b51ee897bb8bbd7f0c376" prot="private" virt="non-virtual"><scope>VisualServoingControllerArmConnector</scope><name>tracker_</name></member>
      <member refid="classVisualServoingControllerArmConnector_1a46daa6b43a0d1c12a6a95560b4861a29" prot="public" virt="non-virtual"><scope>VisualServoingControllerArmConnector</scope><name>VisualServoingControllerArmConnector</name></member>
      <member refid="structAbstractControllerHardwareConnector_1a06f931d74faac604c3ef56cb5ba75399" prot="public" virt="virtual"><scope>VisualServoingControllerArmConnector</scope><name>~AbstractControllerHardwareConnector</name></member>
      <member refid="classVisualServoingControllerArmConnector_1a99354b311a1a74419c5e19c689ff0ecb" prot="public" virt="virtual"><scope>VisualServoingControllerArmConnector</scope><name>~VisualServoingControllerArmConnector</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
