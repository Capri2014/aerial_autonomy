<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="shorting__action__sequence_8h" kind="file">
    <compoundname>shorting_action_sequence.h</compoundname>
    <includes refid="base__functors_8h" local="no">aerial_autonomy/actions_guards/base_functors.h</includes>
    <includes refid="exec__if_8h" local="no">aerial_autonomy/actions_guards/exec_if.h</includes>
    <includes local="no">boost/mpl/apply.hpp</includes>
    <includes local="no">boost/mpl/assert.hpp</includes>
    <includes local="no">boost/mpl/begin_end.hpp</includes>
    <includes local="no">boost/mpl/bool.hpp</includes>
    <includes local="no">boost/mpl/deref.hpp</includes>
    <includes local="no">boost/mpl/is_sequence.hpp</includes>
    <includes local="no">boost/mpl/next_prior.hpp</includes>
    <includes local="no">boost/mpl/vector.hpp</includes>
    <includes local="no">boost/msm/front/functor_row.hpp</includes>
    <includes local="no">boost/type_traits/is_same.hpp</includes>
    <includedby refid="pick__place__functors_8h" local="no">include/aerial_autonomy/actions_guards/pick_place_functors.h</includedby>
    <includedby refid="position__control__functors_8h" local="no">include/aerial_autonomy/actions_guards/position_control_functors.h</includedby>
    <includedby refid="visual__servoing__functors_8h" local="no">include/aerial_autonomy/actions_guards/visual_servoing_functors.h</includedby>
    <incdepgraph>
      <node id="4463">
        <label>boost/mpl/aux_/unwrap.hpp</label>
      </node>
      <node id="4472">
        <label>boost/mpl/vector.hpp</label>
      </node>
      <node id="4461">
        <label>boost/mpl/apply.hpp</label>
      </node>
      <node id="4462">
        <label>boost/mpl/assert.hpp</label>
      </node>
      <node id="4464">
        <label>boost/mpl/begin_end.hpp</label>
      </node>
      <node id="4469">
        <label>boost/mpl/next_prior.hpp</label>
      </node>
      <node id="4456">
        <label>include/aerial_autonomy/actions_guards/shorting_action_sequence.h</label>
        <link refid="shorting_action_sequence.h"/>
        <childnode refid="4457" relation="include">
        </childnode>
        <childnode refid="4460" relation="include">
        </childnode>
        <childnode refid="4461" relation="include">
        </childnode>
        <childnode refid="4462" relation="include">
        </childnode>
        <childnode refid="4464" relation="include">
        </childnode>
        <childnode refid="4465" relation="include">
        </childnode>
        <childnode refid="4466" relation="include">
        </childnode>
        <childnode refid="4468" relation="include">
        </childnode>
        <childnode refid="4469" relation="include">
        </childnode>
        <childnode refid="4472" relation="include">
        </childnode>
        <childnode refid="4473" relation="include">
        </childnode>
        <childnode refid="4470" relation="include">
        </childnode>
      </node>
      <node id="4466">
        <label>boost/mpl/deref.hpp</label>
      </node>
      <node id="4459">
        <label>aerial_autonomy/types/internal_transition_event.h</label>
        <link refid="internal__transition__event_8h"/>
      </node>
      <node id="4467">
        <label>boost/mpl/identity.hpp</label>
      </node>
      <node id="4471">
        <label>boost/utility/value_init.hpp</label>
      </node>
      <node id="4460">
        <label>aerial_autonomy/actions_guards/exec_if.h</label>
        <link refid="exec__if_8h"/>
        <childnode refid="4461" relation="include">
        </childnode>
        <childnode refid="4462" relation="include">
        </childnode>
        <childnode refid="4463" relation="include">
        </childnode>
        <childnode refid="4464" relation="include">
        </childnode>
        <childnode refid="4465" relation="include">
        </childnode>
        <childnode refid="4466" relation="include">
        </childnode>
        <childnode refid="4467" relation="include">
        </childnode>
        <childnode refid="4468" relation="include">
        </childnode>
        <childnode refid="4469" relation="include">
        </childnode>
        <childnode refid="4470" relation="include">
        </childnode>
        <childnode refid="4471" relation="include">
        </childnode>
      </node>
      <node id="4473">
        <label>boost/msm/front/functor_row.hpp</label>
      </node>
      <node id="4457">
        <label>aerial_autonomy/actions_guards/base_functors.h</label>
        <link refid="base__functors_8h"/>
        <childnode refid="4458" relation="include">
        </childnode>
        <childnode refid="4459" relation="include">
        </childnode>
      </node>
      <node id="4458">
        <label>type_traits</label>
      </node>
      <node id="4468">
        <label>boost/mpl/is_sequence.hpp</label>
      </node>
      <node id="4465">
        <label>boost/mpl/bool.hpp</label>
      </node>
      <node id="4470">
        <label>boost/type_traits/is_same.hpp</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="4484">
        <label>include/aerial_autonomy/state_machines/uav_state_machine.h</label>
        <link refid="uav__state__machine_8h"/>
        <childnode refid="4485" relation="include">
        </childnode>
      </node>
      <node id="4475">
        <label>include/aerial_autonomy/actions_guards/pick_place_functors.h</label>
        <link refid="pick__place__functors_8h"/>
        <childnode refid="4476" relation="include">
        </childnode>
      </node>
      <node id="4485">
        <label>src/system_handler_nodes/uav_system_node.cpp</label>
        <link refid="uav__system__node_8cpp"/>
      </node>
      <node id="4477">
        <label>include/aerial_autonomy/state_machines/pick_place_state_machine.h</label>
        <link refid="pick__place__state__machine_8h"/>
        <childnode refid="4478" relation="include">
        </childnode>
      </node>
      <node id="4474">
        <label>include/aerial_autonomy/actions_guards/shorting_action_sequence.h</label>
        <link refid="shorting_action_sequence.h"/>
        <childnode refid="4475" relation="include">
        </childnode>
        <childnode refid="4479" relation="include">
        </childnode>
        <childnode refid="4486" relation="include">
        </childnode>
      </node>
      <node id="4476">
        <label>include/aerial_autonomy/actions_guards/pick_place_states_actions.h</label>
        <link refid="pick__place__states__actions_8h"/>
        <childnode refid="4477" relation="include">
        </childnode>
      </node>
      <node id="4483">
        <label>src/system_handler_nodes/uav_vision_system_node.cpp</label>
        <link refid="uav__vision__system__node_8cpp"/>
      </node>
      <node id="4481">
        <label>include/aerial_autonomy/actions_guards/visual_servoing_states_actions.h</label>
        <link refid="visual__servoing__states__actions_8h"/>
        <childnode refid="4476" relation="include">
        </childnode>
        <childnode refid="4482" relation="include">
        </childnode>
      </node>
      <node id="4486">
        <label>include/aerial_autonomy/actions_guards/visual_servoing_functors.h</label>
        <link refid="visual__servoing__functors_8h"/>
        <childnode refid="4481" relation="include">
        </childnode>
      </node>
      <node id="4480">
        <label>include/aerial_autonomy/actions_guards/uav_states_actions.h</label>
        <link refid="uav__states__actions_8h"/>
        <childnode refid="4481" relation="include">
        </childnode>
        <childnode refid="4484" relation="include">
        </childnode>
      </node>
      <node id="4479">
        <label>include/aerial_autonomy/actions_guards/position_control_functors.h</label>
        <link refid="position__control__functors_8h"/>
        <childnode refid="4480" relation="include">
        </childnode>
      </node>
      <node id="4482">
        <label>include/aerial_autonomy/state_machines/visual_servoing_state_machine.h</label>
        <link refid="visual__servoing__state__machine_8h"/>
        <childnode refid="4483" relation="include">
        </childnode>
      </node>
      <node id="4478">
        <label>src/system_handler_nodes/uav_arm_system_node.cpp</label>
        <link refid="uav__arm__system__node_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structboost_1_1msm_1_1front_1_1ShortingActionSequence__" prot="public">boost::msm::front::ShortingActionSequence_</innerclass>
    <innerclass refid="structboost_1_1msm_1_1front_1_1ShortingActionSequence___1_1state__action__result" prot="public">boost::msm::front::ShortingActionSequence_::state_action_result</innerclass>
    <innerclass refid="structboost_1_1msm_1_1front_1_1ShortingActionSequence___1_1Call" prot="public">boost::msm::front::ShortingActionSequence_::Call</innerclass>
    <innerclass refid="structboost_1_1msm_1_1front_1_1ShortingActionSequence___1_1transition__action__result" prot="public">boost::msm::front::ShortingActionSequence_::transition_action_result</innerclass>
    <innerclass refid="structboost_1_1msm_1_1front_1_1ShortingActionSequence___1_1CallSourceTarget" prot="public">boost::msm::front::ShortingActionSequence_::CallSourceTarget</innerclass>
    <innernamespace refid="namespaceboost">boost</innernamespace>
    <innernamespace refid="namespaceboost_1_1msm">boost::msm</innernamespace>
    <innernamespace refid="namespaceboost_1_1msm_1_1front">boost::msm::front</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight></codeline>
<codeline lineno="2"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="16"><highlight class="preprocessor">#include<sp/>&lt;<ref refid="base__functors_8h" kindref="compound">aerial_autonomy/actions_guards/base_functors.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="exec__if_8h" kindref="compound">aerial_autonomy/actions_guards/exec_if.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/mpl/apply.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/mpl/assert.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/mpl/begin_end.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/mpl/bool.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/mpl/deref.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/mpl/is_sequence.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/mpl/next_prior.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/mpl/vector.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/msm/front/functor_row.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/type_traits/is_same.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">boost<sp/>{</highlight></codeline>
<codeline lineno="36" refid="namespaceboost_1_1msm" refkind="compound"><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">msm<sp/>{</highlight></codeline>
<codeline lineno="40" refid="namespaceboost_1_1msm_1_1front" refkind="compound"><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">front<sp/>{</highlight></codeline>
<codeline lineno="46" refid="structboost_1_1msm_1_1front_1_1ShortingActionSequence__" refkind="compound"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Sequence&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structboost_1_1msm_1_1front_1_1ShortingActionSequence__" kindref="compound">ShortingActionSequence_</ref><sp/>{</highlight></codeline>
<codeline lineno="50" refid="structboost_1_1msm_1_1front_1_1ShortingActionSequence___1ad7ecb78dd2e9f43c1b98bf1bd0d13338" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>Sequence<sp/><ref refid="structboost_1_1msm_1_1front_1_1ShortingActionSequence___1ad7ecb78dd2e9f43c1b98bf1bd0d13338" kindref="member">sequence</ref>;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>one<sp/>functor<sp/>of<sp/>the<sp/>sequence<sp/>defers<sp/>events,<sp/>the<sp/>complete<sp/>sequence<sp/>does</highlight></codeline>
<codeline lineno="55"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/>typedef<sp/>::boost::mpl::bool_&lt;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>::boost::mpl::count_if&lt;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structboost_1_1msm_1_1front_1_1ShortingActionSequence___1ad7ecb78dd2e9f43c1b98bf1bd0d13338" kindref="member">sequence</ref>,</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>has_deferring_action&lt;::boost::mpl::placeholders::_1&gt;&gt;::value<sp/>!=<sp/>0&gt;</highlight></codeline>
<codeline lineno="59" refid="structboost_1_1msm_1_1front_1_1ShortingActionSequence___1a8b1de652fcfc56455ef3ca069a267e94" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structboost_1_1msm_1_1front_1_1ShortingActionSequence___1a8b1de652fcfc56455ef3ca069a267e94" kindref="member">some_deferring_actions</ref>;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="structboost_1_1msm_1_1front_1_1ShortingActionSequence___1_1state__action__result" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Event,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>FSM,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>STATE&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structboost_1_1msm_1_1front_1_1ShortingActionSequence___1_1state__action__result" kindref="compound">state_action_result</ref><sp/>{</highlight></codeline>
<codeline lineno="72" refid="structboost_1_1msm_1_1front_1_1ShortingActionSequence___1_1state__action__result_1abff0af30270a3f612773e9d6907a4045" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structboost_1_1msm_1_1front_1_1ShortingActionSequence___1_1state__action__result_1abff0af30270a3f612773e9d6907a4045" kindref="member">type</ref>;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="81" refid="structboost_1_1msm_1_1front_1_1ShortingActionSequence___1_1Call" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>EVT,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>FSM,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>STATE&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structboost_1_1msm_1_1front_1_1ShortingActionSequence___1_1Call" kindref="compound">Call</ref><sp/>{</highlight></codeline>
<codeline lineno="89" refid="structboost_1_1msm_1_1front_1_1ShortingActionSequence___1_1Call_1aa18cecd64094d63c78156d1b47570026" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structboost_1_1msm_1_1front_1_1ShortingActionSequence___1_1Call_1aa18cecd64094d63c78156d1b47570026" kindref="member">Call</ref>(EVT<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;evt,<sp/>FSM<sp/>&amp;fsm,<sp/>STATE<sp/>&amp;state)</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>evt_(evt),<sp/>fsm_(fsm),<sp/>state_(state)<sp/>{}</highlight></codeline>
<codeline lineno="100" refid="structboost_1_1msm_1_1front_1_1ShortingActionSequence___1_1Call_1a49432eb619656591d1058d847b12dbaa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>FCT&gt;<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structboost_1_1msm_1_1front_1_1ShortingActionSequence___1_1Call_1a49432eb619656591d1058d847b12dbaa" kindref="member">operator()</ref>(::boost::msm::wrap&lt;FCT&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)<sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FCT()(evt_,<sp/>fsm_,<sp/>state_);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>EVT<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;evt_;<sp/></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>FSM<sp/>&amp;fsm_;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>STATE<sp/>&amp;state_;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>EVT,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>FSM,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>SourceState,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>TargetState&gt;</highlight></codeline>
<codeline lineno="118" refid="structboost_1_1msm_1_1front_1_1ShortingActionSequence___1_1transition__action__result" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structboost_1_1msm_1_1front_1_1ShortingActionSequence___1_1transition__action__result" kindref="compound">transition_action_result</ref><sp/>{</highlight></codeline>
<codeline lineno="122" refid="structboost_1_1msm_1_1front_1_1ShortingActionSequence___1_1transition__action__result_1a99eaf7f633462f98dca92d3a53b18f46" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structboost_1_1msm_1_1front_1_1ShortingActionSequence___1_1transition__action__result_1a99eaf7f633462f98dca92d3a53b18f46" kindref="member">type</ref>;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>EVT,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>FSM,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>SourceState,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>TargetState&gt;</highlight></codeline>
<codeline lineno="133" refid="structboost_1_1msm_1_1front_1_1ShortingActionSequence___1_1CallSourceTarget" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structboost_1_1msm_1_1front_1_1ShortingActionSequence___1_1CallSourceTarget" kindref="compound">CallSourceTarget</ref><sp/>{</highlight></codeline>
<codeline lineno="142" refid="structboost_1_1msm_1_1front_1_1ShortingActionSequence___1_1CallSourceTarget_1aca8c9639b33520d6c1316d1f37798c12" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structboost_1_1msm_1_1front_1_1ShortingActionSequence___1_1CallSourceTarget_1aca8c9639b33520d6c1316d1f37798c12" kindref="member">CallSourceTarget</ref>(EVT<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;evt,<sp/>FSM<sp/>&amp;fsm,<sp/>SourceState<sp/>&amp;src,</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TargetState<sp/>&amp;tgt)</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>evt_(evt),<sp/>fsm_(fsm),<sp/>src_(src),<sp/>tgt_(tgt)<sp/>{}</highlight></codeline>
<codeline lineno="154" refid="structboost_1_1msm_1_1front_1_1ShortingActionSequence___1_1CallSourceTarget_1a9e98b11cf48a410ff199bfc02bd786aa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>FCT&gt;<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structboost_1_1msm_1_1front_1_1ShortingActionSequence___1_1CallSourceTarget_1a9e98b11cf48a410ff199bfc02bd786aa" kindref="member">operator()</ref>(::boost::msm::wrap&lt;FCT&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)<sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FCT()(evt_,<sp/>fsm_,<sp/>src_,<sp/>tgt_);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>EVT<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;evt_;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>FSM<sp/>&amp;fsm_;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>SourceState<sp/>&amp;src_;<sp/></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>TargetState<sp/>&amp;tgt_;<sp/></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="168" refid="structboost_1_1msm_1_1front_1_1ShortingActionSequence___1a8e19d2d0f91cb8170b597973a0089960" refkind="member"><highlight class="normal"><sp/><sp/>typedef<sp/>::boost::mpl::set&lt;state_action_tag,<sp/>action_tag&gt;<sp/><ref refid="structboost_1_1msm_1_1front_1_1ShortingActionSequence___1a8e19d2d0f91cb8170b597973a0089960" kindref="member">tag_type</ref>;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>EVT,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>FSM,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>STATE&gt;</highlight></codeline>
<codeline lineno="183" refid="structboost_1_1msm_1_1front_1_1ShortingActionSequence___1a00da3998dbae7e598cff0dcc0d549066" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structboost_1_1msm_1_1front_1_1ShortingActionSequence___1a00da3998dbae7e598cff0dcc0d549066" kindref="member">operator()</ref>(EVT<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;evt,<sp/>FSM<sp/>&amp;fsm,<sp/>STATE<sp/>&amp;state)<sp/>{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceboost_1_1mpl_1ae91dc45cdc4f2953100f334ea17e35a4" kindref="member">return ::boost::mpl::exec_if</ref>&lt;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Sequence,<sp/>boost::msm::wrap&lt;::boost::mpl::placeholders::_1&gt;&gt;(</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structboost_1_1msm_1_1front_1_1ShortingActionSequence___1_1Call" kindref="compound">Call&lt;EVT, FSM, STATE&gt;</ref>(evt,<sp/>fsm,<sp/>state));</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>EVT,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>FSM,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>SourceState,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>TargetState&gt;</highlight></codeline>
<codeline lineno="203" refid="structboost_1_1msm_1_1front_1_1ShortingActionSequence___1a10c238102e23a8374b4fa2a579256d88" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structboost_1_1msm_1_1front_1_1ShortingActionSequence___1a10c238102e23a8374b4fa2a579256d88" kindref="member">operator()</ref>(EVT<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;evt,<sp/>FSM<sp/>&amp;fsm,<sp/>SourceState<sp/>&amp;src,</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TargetState<sp/>&amp;tgt)<sp/>{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceboost_1_1mpl_1ae91dc45cdc4f2953100f334ea17e35a4" kindref="member">return ::boost::mpl::exec_if</ref>&lt;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Sequence,<sp/>boost::msm::wrap&lt;::boost::mpl::placeholders::_1&gt;&gt;(</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structboost_1_1msm_1_1front_1_1ShortingActionSequence___1_1CallSourceTarget" kindref="compound">CallSourceTarget&lt;EVT, FSM, SourceState, TargetState&gt;</ref>(evt,<sp/>fsm,<sp/>src,</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tgt));</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="210"><highlight class="normal">};</highlight></codeline>
<codeline lineno="211"><highlight class="normal">}</highlight></codeline>
<codeline lineno="212"><highlight class="normal">}</highlight></codeline>
<codeline lineno="213"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/matt/catkin_ws/src/aerial_autonomy/include/aerial_autonomy/actions_guards/shorting_action_sequence.h"/>
  </compounddef>
</doxygen>
